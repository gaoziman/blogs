(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{392:function(a,s,t){"use strict";t.r(s);var v=t(7),_=Object(v.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("配套视频参考："),s("a",{attrs:{href:"https://www.bilibili.com/video/BV1iq4y1u7vj?p=1&vd_source=cea816a08805c218ac4390ae9b61ae31",target:"_blank",rel:"noopener noreferrer"}},[a._v("MySQL数据库天花板--康师傅"),s("OutboundLink")],1)]),a._v(" "),s("h2",{attrs:{id:"_1-主从复制概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-主从复制概述"}},[a._v("#")]),a._v(" 1. 主从复制概述")]),a._v(" "),s("h3",{attrs:{id:"_1-1-如何提升数据库并发能力"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-如何提升数据库并发能力"}},[a._v("#")]),a._v(" 1.1 如何提升数据库并发能力")]),a._v(" "),s("p",[a._v("在实际工作中，我们常常将"),s("code",[a._v("Redis")]),a._v("作为缓存与"),s("code",[a._v("MySQL")]),a._v("配合来使用，当有请求的时候，首先会从缓存中进行查找，如果存在就直接取出。如果不存在再访问数据库，这样就"),s("code",[a._v("提升了读取的效率")]),a._v("，也减少了对后端数据库的"),s("code",[a._v("访问压力")]),a._v("。Redis的缓存架构是"),s("code",[a._v("高并发架构")]),a._v("中非常重要的一环。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715202237535.png",alt:"image-20220715202237535"}})]),a._v(" "),s("p",[a._v("此外，一般应用对数据库而言都是“ "),s("code",[a._v("读多写少")]),a._v(" ”，也就说对数据库读取数据的压力比较大，有一个思路就是采用数据库集群的方案，做 "),s("code",[a._v("主从架构")]),a._v(" 、进行 "),s("code",[a._v("读写分离")]),a._v(" ，这样同样可以提升数据库的并发处理能力。但并不是所有的应用都需要对数据库进行主从架构的设置，毕竟设置架构本身是有成本的。")]),a._v(" "),s("p",[a._v("如果我们的目的在于提升数据库高并发访问的效率，那么首先考虑的是如何 "),s("code",[a._v("优化SQL和索引")]),a._v(" ，这种方式 简单有效；其次才是采用 "),s("code",[a._v("缓存的策略")]),a._v(" ，比如使用 Redis将热点数据保存在内存数据库中，提升读取的效率；最后才是对数据库采用 "),s("code",[a._v("主从架构")]),a._v(" ，进行读写分离。")]),a._v(" "),s("p",[a._v("按照上面的方式进行优化，使用和维护的成本是由低到高的。")]),a._v(" "),s("h3",{attrs:{id:"_1-2-主从复制的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-主从复制的作用"}},[a._v("#")]),a._v(" 1.2 主从复制的作用")]),a._v(" "),s("p",[a._v("主从同步设计不仅可以提高数据库的吞吐量，还有以下 3 个方面的作用。")]),a._v(" "),s("p",[a._v("**第1个作用：读写分离。**我们可以通过主从复制的方式来"),s("code",[a._v("同步数据")]),a._v("，然后通过读写分离提高数据库并发处理能力。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715212521601.png",alt:"image-20220715212521601"}})]),a._v(" "),s("p",[a._v("其中一个是Master主库，负责写入数据，我们称之为：写库。")]),a._v(" "),s("p",[a._v("其他都是Slave从库，负责读取数据，我们称之为：读库。")]),a._v(" "),s("p",[a._v("当主库进行更新的时候，会自动将数据复制到从库中，而我们在客户端读取数据的时候，会从从库进行读取。")]),a._v(" "),s("p",[a._v("面对“读多写少”的需求，采用读写分离的方式，可以实现"),s("code",[a._v("更高的并发访问")]),a._v("。同时，我们还能对从服务器进行"),s("code",[a._v("负载均衡")]),a._v("，让不同的读请求按照策略均匀地分发到不同的从服务器上，让"),s("code",[a._v("读取更加顺畅")]),a._v("。读取顺畅的另一个原因，就是"),s("code",[a._v("减少了锁表")]),a._v("的影响，比如我们让主库负责写，当主库出现写锁的时候，不会影响到从库进行SELECT的读取。")]),a._v(" "),s("p",[a._v("**第2个作用就是数据备份。**我们通过主从复制将主库上的数据复制到从库上，相当于一种"),s("code",[a._v("热备份机制")]),a._v("，也就是在主库正常运行的情况下进行的备份，不会影响到服务。")]),a._v(" "),s("p",[a._v("**第3个作用是具有高可用性。**数据备份实际上是一种冗余的机制，通过这种冗余的方式可以换取数据库的高可用性，也就是当服务器出现故障或宕机的情况下，可以切换到从服务器上，保证服务的正常运行。")]),a._v(" "),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715214055057.png",alt:"image-20220715214055057"}}),a._v(" "),s("h2",{attrs:{id:"_2-主从复制的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-主从复制的原理"}},[a._v("#")]),a._v(" 2. 主从复制的原理")]),a._v(" "),s("p",[s("code",[a._v("Slave")]),a._v(" 会从 "),s("code",[a._v("Master")]),a._v(" 读取 "),s("code",[a._v("binlog")]),a._v(" 来进行数据同步。")]),a._v(" "),s("h3",{attrs:{id:"_2-1-原理剖析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-原理剖析"}},[a._v("#")]),a._v(" 2.1 原理剖析")]),a._v(" "),s("p",[s("strong",[a._v("三个线程")])]),a._v(" "),s("p",[a._v("实际上主从同步的原理就是基于 binlog 进行数据同步的。在主从复制过程中，会基于 "),s("code",[a._v("3 个线程")]),a._v(" 来操 作，一个主库线程，两个从库线程。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715215944767.png",alt:"image-20220715215944767"}})]),a._v(" "),s("p",[s("code",[a._v("二进制日志转储线程")]),a._v(" （Binlog dump thread）是一个主库线程。当从库线程连接的时候， 主库可以将二进 制日志发送给从库，当主库读取事件（Event）的时候，会在 Binlog 上 "),s("code",[a._v("加锁")]),a._v(" ，读取完成之后，再将锁释放掉。")]),a._v(" "),s("p",[s("code",[a._v("从库 I/O 线程")]),a._v(" 会连接到主库，向主库发送请求更新 Binlog。这时从库的 I/O 线程就可以读取到主库的二进制日志转储线程发送的 Binlog 更新部分，并且拷贝到本地的中继日志 （Relay log）。")]),a._v(" "),s("p",[s("code",[a._v("从库 SQL 线程")]),a._v(" 会读取从库中的中继日志，并且执行日志中的事件，将从库中的数据与主库保持同步。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715220037213.png",alt:"image-20220715220037213"}})]),a._v(" "),s("blockquote",[s("p",[a._v("注意：")]),a._v(" "),s("p",[a._v("不是所有版本的MySQL都默认开启服务器的二进制日志。在进行主从同步的时候，我们需要先检查服务器是否已经开启了二进制日志。")]),a._v(" "),s("p",[a._v("除非特殊指定，默认情况下从服务器会执行所有主服务器中保存的事件。也可以通过配置，使从服务器执行特定的事件。")])]),a._v(" "),s("p",[s("strong",[a._v("复制三步骤")])]),a._v(" "),s("p",[a._v("步骤1： "),s("code",[a._v("Master")]),a._v(" 将写操作记录到二进制日志（ "),s("code",[a._v("binlog")]),a._v(" ）。")]),a._v(" "),s("p",[a._v("步骤2： "),s("code",[a._v("Slave")]),a._v(" 将 "),s("code",[a._v("Master")]),a._v(" 的binary log events拷贝到它的中继日志（ "),s("code",[a._v("relay log")]),a._v(" ）；")]),a._v(" "),s("p",[a._v("步骤3： "),s("code",[a._v("Slave")]),a._v(" 重做中继日志中的事件，将改变应用到自己的数据库中。 MySQL复制是异步的且串行化的，而且重启后从 "),s("code",[a._v("接入点")]),a._v(" 开始复制。")]),a._v(" "),s("p",[s("strong",[a._v("复制的问题")])]),a._v(" "),s("p",[a._v("复制的最大问题： "),s("code",[a._v("延时")])]),a._v(" "),s("h3",{attrs:{id:"_2-2-复制的基本原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-复制的基本原则"}},[a._v("#")]),a._v(" 2.2 复制的基本原则")]),a._v(" "),s("ul",[s("li",[a._v("每个 "),s("code",[a._v("Slave")]),a._v(" 只有一个 "),s("code",[a._v("Master")])]),a._v(" "),s("li",[a._v("每个 "),s("code",[a._v("Slave")]),a._v(" 只能有一个唯一的服务器ID")]),a._v(" "),s("li",[a._v("每个 "),s("code",[a._v("Master")]),a._v(" 可以有多个 "),s("code",[a._v("Slave")])])]),a._v(" "),s("h2",{attrs:{id:"_3-一主一从架构搭建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-一主一从架构搭建"}},[a._v("#")]),a._v(" 3. 一主一从架构搭建")]),a._v(" "),s("p",[a._v("一台 "),s("code",[a._v("主机")]),a._v(" 用于处理所有 "),s("code",[a._v("写请求")]),a._v(" ，一台 "),s("code",[a._v("从机")]),a._v(" 负责所有 "),s("code",[a._v("读请求")]),a._v(" ，架构图如下:")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715220852836.png",alt:"image-20220715220852836"}})]),a._v(" "),s("h3",{attrs:{id:"_3-1-准备工作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-准备工作"}},[a._v("#")]),a._v(" 3.1 准备工作")]),a._v(" "),s("p",[a._v("1、准备 2台 CentOS 虚拟机 （具体设置内容在P192）")]),a._v(" "),s("p",[a._v("2、每台虚拟机上需要安装好MySQL (可以是MySQL8.0 )")]),a._v(" "),s("p",[a._v("说明：前面我们讲过如何克隆一台CentOS。大家可以在一台CentOS上安装好MySQL，进而通过克隆的方式复制出1台包含MySQL的虚拟机。")]),a._v(" "),s("p",[a._v("注意：克隆的方式需要修改新克隆出来主机的：① "),s("code",[a._v("MAC地址")]),a._v(" ② "),s("code",[a._v("hostname")]),a._v(" ③"),s("code",[a._v("IP 地址")]),a._v(" ④ "),s("code",[a._v("UUID")]),a._v(" 。")]),a._v(" "),s("p",[a._v("此外，克隆的方式生成的虚拟机（包含MySQL Server），则克隆的虚拟机MySQL Server的UUID相同，必须修改，否则在有些场景会报错。比如： "),s("code",[a._v("show slave status\\G")]),a._v(" ，报如下的错误：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Last_IO_Error: Fatal error: The slave I/O thread stops because master and slave have\nequal MySQL server UUIDs; these UUIDs must be different for replication to work.\n")])])]),s("p",[a._v("修改MySQL Server 的UUID方式：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("vim /var/lib/mysql/auto.cnf\n\nsystemctl restart mysqld\n")])])]),s("h3",{attrs:{id:"_3-2-主机配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-主机配置文件"}},[a._v("#")]),a._v(" 3.2 主机配置文件")]),a._v(" "),s("p",[a._v("建议mysql版本一致且后台以服务运行，主从所有配置项都配置在 "),s("code",[a._v("[mysqld]")]),a._v(" 节点下，且都是小写字母。")]),a._v(" "),s("p",[a._v("具体参数配置如下：")]),a._v(" "),s("ul",[s("li",[a._v("必选")])]),a._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#[必须]主服务器唯一ID")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("server-id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("1")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#[必须]启用二进制日志,指名路径。比如：自己本地的路径/log/mysqlbin")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("log-bin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("atguigu-bin")]),a._v("\n")])])]),s("ul",[s("li",[a._v("可选")])]),a._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#[可选] 0（默认）表示读写（主机），1表示只读（从机）")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("read-only")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("0")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#设置日志文件保留的时长，单位是秒")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("binlog_expire_logs_seconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("6000")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#控制单个二进制日志大小。此参数的最大和默认值是1GB")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("max_binlog_size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("200M")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#[可选]设置不要复制的数据库")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("binlog-ignore-db")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("test")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#[可选]设置需要复制的数据库,默认全部记录。比如：binlog-do-db=atguigu_master_slave")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("binlog-do-db")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("需要复制的主数据库名字")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#[可选]设置binlog格式")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("binlog_format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("STATEMENT")]),a._v("\n")])])]),s("p",[a._v("重启后台mysql服务，使配置生效。")]),a._v(" "),s("blockquote",[s("p",[a._v("注意：")]),a._v(" "),s("p",[a._v("先搭建完主从复制，再创建数据库。")]),a._v(" "),s("p",[a._v("MySQL主从复制起始时，从机不继承主机数据。")])]),a._v(" "),s("p",[s("strong",[a._v("① binlog格式设置：")])]),a._v(" "),s("p",[a._v("格式1： "),s("code",[a._v("STATEMENT模式")]),a._v(" （基于SQL语句的复制(statement-based replication, SBR)）")]),a._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("binlog_format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("STATEMENT")]),a._v("\n")])])]),s("p",[a._v("每一条会修改数据的sql语句会记录到binlog中。这是默认的binlog格式。")]),a._v(" "),s("ul",[s("li",[a._v("SBR 的优点：\n"),s("ul",[s("li",[a._v("历史悠久，技术成熟")]),a._v(" "),s("li",[a._v("不需要记录每一行的变化，减少了binlog日志量，文件较小")]),a._v(" "),s("li",[a._v("binlog中包含了所有数据库更改信息，可以据此来审核数据库的安全等情况")]),a._v(" "),s("li",[a._v("binlog可以用于实时的还原，而不仅仅用于复制")]),a._v(" "),s("li",[a._v("主从版本可以不一样，从服务器版本可以比主服务器版本高")])])]),a._v(" "),s("li",[a._v("SBR 的缺点：\n"),s("ul",[s("li",[a._v("不是所有的UPDATE语句都能被复制，尤其是包含不确定操作的时候")])])]),a._v(" "),s("li",[a._v("使用以下函数的语句也无法被复制：LOAD_FILE()、UUID()、USER()、FOUND_ROWS()、SYSDATE() (除非启动时启用了 --sysdate-is-now 选项)\n"),s("ul",[s("li",[a._v("INSERT ... SELECT 会产生比 RBR 更多的行级锁")]),a._v(" "),s("li",[a._v("复制需要进行全表扫描(WHERE 语句中没有使用到索引)的 UPDATE 时，需要比 RBR 请求更多的行级锁")]),a._v(" "),s("li",[a._v("对于有 AUTO_INCREMENT 字段的 InnoDB表而言，INSERT 语句会阻塞其他 INSERT 语句")]),a._v(" "),s("li",[a._v("对于一些复杂的语句，在从服务器上的耗资源情况会更严重，而 RBR 模式下，只会对那个发 生变化的记录产生影响")]),a._v(" "),s("li",[a._v("执行复杂语句如果出错的话，会消耗更多资源")]),a._v(" "),s("li",[a._v("数据表必须几乎和主服务器保持一致才行，否则可能会导致复制出错")])])])]),a._v(" "),s("p",[s("strong",[a._v("② ROW模式（基于行的复制(row-based replication, RBR)）")])]),a._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("binlog_format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("ROW")]),a._v("\n")])])]),s("p",[a._v("5.1.5版本的MySQL才开始支持，不记录每条sql语句的上下文信息，仅记录哪条数据被修改了，修改成什么样了。")]),a._v(" "),s("ul",[s("li",[a._v("RBR 的优点：\n"),s("ul",[s("li",[a._v("任何情况都可以被复制，这对复制来说是最 "),s("code",[a._v("安全可靠")]),a._v(" 的。（比如：不会出现某些特定情况下 的存储过程、function、trigger的调用和触发无法被正确复制的问题）")]),a._v(" "),s("li",[a._v("多数情况下，从服务器上的表如果有主键的话，复制就会快了很多")]),a._v(" "),s("li",[a._v("复制以下几种语句时的行锁更少：INSERT ... SELECT、包含 AUTO_INCREMENT 字段的 INSERT、 没有附带条件或者并没有修改很多记录的 UPDATE 或 DELETE 语句")]),a._v(" "),s("li",[a._v("执行 INSERT，UPDATE，DELETE 语句时锁更少")]),a._v(" "),s("li",[a._v("从服务器上采用 多线程 来执行复制成为可能")])])]),a._v(" "),s("li",[a._v("RBR 的缺点：\n"),s("ul",[s("li",[a._v("binlog 大了很多")]),a._v(" "),s("li",[a._v("复杂的回滚时 binlog 中会包含大量的数据")]),a._v(" "),s("li",[a._v("主服务器上执行 UPDATE 语句时，所有发生变化的记录都会写到 binlog 中，而 SBR 只会写一次，这会导致频繁发生 binlog 的并发写问题")]),a._v(" "),s("li",[a._v("无法从 binlog 中看到都复制了些什么语句")])])])]),a._v(" "),s("p",[s("strong",[a._v("③ MIXED模式（混合模式复制(mixed-based replication, MBR)）")])]),a._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("binlog_format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("MIXED")]),a._v("\n")])])]),s("p",[a._v("从5.1.8版本开始，MySQL提供了Mixed格式，实际上就是Statement与Row的结合。")]),a._v(" "),s("p",[a._v("在Mixed模式下，一般的语句修改使用statment格式保存binlog。如一些函数，statement无法完成主从复制的操作，则采用row格式保存binlog。")]),a._v(" "),s("p",[a._v("MySQL会根据执行的每一条具体的sql语句来区分对待记录的日志形式，也就是在Statement和Row之间选择一种。")]),a._v(" "),s("h3",{attrs:{id:"_3-3-从机配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-从机配置文件"}},[a._v("#")]),a._v(" 3.3 从机配置文件")]),a._v(" "),s("p",[a._v("要求主从所有配置项都配置在 "),s("code",[a._v("my.cnf")]),a._v(" 的 "),s("code",[a._v("[mysqld]")]),a._v(" 栏位下，且都是小写字母。")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("必选")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("#[必须]从服务器唯一ID\nserver-id=2\n")])])])]),a._v(" "),s("li",[s("p",[a._v("可选")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("#[可选]启用中继日志\nrelay-log=mysql-relay\n")])])])])]),a._v(" "),s("p",[a._v("重启后台mysql服务，使配置生效。")]),a._v(" "),s("blockquote",[s("p",[a._v("注意：主从机都关闭防火墙\nservice iptables stop #CentOS 6\nsystemctl stop firewalld.service #CentOS 7")])]),a._v(" "),s("h3",{attrs:{id:"_3-4-主机-建立账户并授权"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-主机-建立账户并授权"}},[a._v("#")]),a._v(" 3.4 主机：建立账户并授权")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("#在主机MySQL里执行授权主从复制的命令\nGRANT REPLICATION SLAVE ON *.* TO 'slave1'@'从机器数据库IP' IDENTIFIED BY 'abc123'; #5.5,5.7\n")])])]),s("p",[s("strong",[a._v("注意：如果使用的是MySQL8，需要如下的方式建立账户，并授权slave:")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("CREATE USER 'slave1'@'%' IDENTIFIED BY '123456';\n\nGRANT REPLICATION SLAVE ON *.* TO 'slave1'@'%';\n\n#此语句必须执行。否则见下面。\nALTER USER 'slave1'@'%' IDENTIFIED WITH mysql_native_password BY '123456';\n\nflush privileges;\n")])])]),s("blockquote",[s("p",[a._v("注意：在从机执行show slave status\\G时报错：")]),a._v(" "),s("p",[a._v("Last_IO_Error: error connecting to master 'slave1@192.168.1.150:3306' - retry-time: 60 retries: 1 message:")]),a._v(" "),s("p",[a._v("Authentication plugin 'caching_sha2_password' reported error: Authentication requires secure connection.")])]),a._v(" "),s("p",[a._v("查询Master的状态，并记录下File和Position的值。")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("show master status;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220718140722740.png",alt:"image-20220718140722740"}})]),a._v(" "),s("ul",[s("li",[a._v("记录下File和Position的值")])]),a._v(" "),s("blockquote",[s("p",[a._v("注意：执行完此步骤后"),s("strong",[a._v("不要再操作主服务器MySQL")]),a._v("，防止主服务器状态值变化。")])]),a._v(" "),s("h3",{attrs:{id:"_3-5-从机-配置需要复制的主机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-从机-配置需要复制的主机"}},[a._v("#")]),a._v(" 3.5 从机：配置需要复制的主机")]),a._v(" "),s("p",[a._v("**步骤1：**从机上复制主机的命令")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("CHANGE MASTER TO\nMASTER_HOST='主机的IP地址',\nMASTER_USER='主机用户名',\nMASTER_PASSWORD='主机用户名的密码',\nMASTER_LOG_FILE='mysql-bin.具体数字',\nMASTER_LOG_POS=具体值;\n")])])]),s("p",[a._v("举例：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("CHANGE MASTER TO\nMASTER_HOST='192.168.1.150',MASTER_USER='slave1',MASTER_PASSWORD='123456',MASTER_LOG_F\nILE='atguigu-bin.000007',MASTER_LOG_POS=154;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220718140946747.png",alt:"image-20220718140946747"}})]),a._v(" "),s("p",[s("strong",[a._v("步骤2：")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("#启动slave同步\nSTART SLAVE;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220718141825228.png",alt:"image-20220718141825228"}})]),a._v(" "),s("p",[a._v("如果报错：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220718141841862.png",alt:"image-20220718141841862"}})]),a._v(" "),s("p",[a._v("可以执行如下操作，删除之前的relay_log信息。然后重新执行 CHANGE MASTER TO ...语句即可。")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> reset slave; #删除SLAVE数据库的relaylog日志文件，并重新启用新的relaylog文件\n")])])]),s("p",[a._v("接着，查看同步状态：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SHOW SLAVE STATUS\\G;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220718141951374.png",alt:"image-20220718141951374"}})]),a._v(" "),s("blockquote",[s("p",[a._v("上面两个参数都是Yes，则说明主从配置成功！")])]),a._v(" "),s("p",[a._v("显式如下的情况，就是不正确的。可能错误的原因有：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("1. 网络不通\n2. 账户密码错误\n3. 防火墙\n4. mysql配置文件问题\n5. 连接服务器时语法\n6. 主服务器mysql权限\n")])])]),s("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220718142045114.png",alt:"image-20220718142045114"}}),a._v(" "),s("h3",{attrs:{id:"_3-6-测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-测试"}},[a._v("#")]),a._v(" 3.6 测试")]),a._v(" "),s("p",[a._v("主机新建库、新建表、insert记录，从机复制：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("CREATE DATABASE atguigu_master_slave;\n\nCREATE TABLE mytbl(id INT,NAME VARCHAR(16));\n\nINSERT INTO mytbl VALUES(1, 'zhang3');\n\nINSERT INTO mytbl VALUES(2,@@hostname);\n")])])]),s("h3",{attrs:{id:"_3-7-停止主从同步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-停止主从同步"}},[a._v("#")]),a._v(" 3.7 停止主从同步")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("停止主从同步命令：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("stop slave;\n")])])])]),a._v(" "),s("li",[s("p",[a._v("如何重新配置主从")]),a._v(" "),s("p",[a._v("如果停止从服务器复制功能，再使用需要重新配置主从。否则会报错如下：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220718142549168.png",alt:"image-20220718142549168"}})])])]),a._v(" "),s("p",[a._v("重新配置主从，需要在从机上执行：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("stop slave;\n\nreset master; #删除Master中所有的binglog文件，并将日志索引文件清空，重新开始所有新的日志文件(慎用)\n")])])]),s("h3",{attrs:{id:"_3-8-后续"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-后续"}},[a._v("#")]),a._v(" 3.8 后续")]),a._v(" "),s("p",[s("strong",[a._v("搭建主从复制：双主双从")])]),a._v(" "),s("p",[a._v("一个主机m1用于处理所有写请求，它的从机s1和另一台主机m2还有它的从机s2负责所有读请求。当m1主机宕机后，m2主机负责写请求，m1、m2互为备机。结构图如下：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220718143705843.png",alt:"image-20220718143705843"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220718143716620.png",alt:"image-20220718143716620"}})]),a._v(" "),s("h2",{attrs:{id:"_4-同步数据一致性问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-同步数据一致性问题"}},[a._v("#")]),a._v(" 4. 同步数据一致性问题")]),a._v(" "),s("p",[s("strong",[a._v("主从同步的要求：")])]),a._v(" "),s("ul",[s("li",[a._v("读库和写库的数据一致(最终一致)；")]),a._v(" "),s("li",[a._v("写数据必须写到写库；")]),a._v(" "),s("li",[a._v("读数据必须到读库(不一定)；")])]),a._v(" "),s("h3",{attrs:{id:"_4-1-理解主从延迟问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-理解主从延迟问题"}},[a._v("#")]),a._v(" 4.1 理解主从延迟问题")]),a._v(" "),s("p",[a._v("进行主从同步的内容是二进制日志，它是一个文件，在进行 "),s("code",[a._v("网络传输")]),a._v(" 的过程中就一定会 "),s("code",[a._v("存在主从延迟")]),a._v(" （比如 500ms），这样就可能造成用户在从库上读取的数据不是最新的数据，也就是主从同步中的 "),s("code",[a._v("数据不一致性")]),a._v(" 问题。")]),a._v(" "),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220718144051094.png",alt:"image-20220718144051094"}}),a._v(" "),s("h3",{attrs:{id:"_4-2-主从延迟问题原因"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-主从延迟问题原因"}},[a._v("#")]),a._v(" 4.2 主从延迟问题原因")]),a._v(" "),s("p",[a._v("在网络正常的时候，日志从主库传给从库所需的时间是很短的，即T2-T1的值是非常小的。即，网络正常情况下，主备延迟的主要来源是备库接收完binlog和执行完这个事务之间的时间差。")]),a._v(" "),s("p",[a._v("**主备延迟最直接的表现是，从库消费中继日志（relay log）的速度，比主库生产binlog的速度要慢。**造成原因：")]),a._v(" "),s("p",[a._v("1、从库的机器性能比主库要差")]),a._v(" "),s("p",[a._v("2、从库的压力大")]),a._v(" "),s("p",[a._v("3、大事务的执行")]),a._v(" "),s("p",[a._v("**举例1：**一次性用delete语句删除太多数据")]),a._v(" "),s("p",[a._v("结论：后续再删除数据的时候，要控制每个事务删除的数据量，分成多次删除。")]),a._v(" "),s("p",[a._v("**举例2：**一次性用insert...select插入太多数据")]),a._v(" "),s("p",[a._v("**举例3：**大表DDL")]),a._v(" "),s("p",[a._v("比如在主库对一张500W的表添加一个字段耗费了10分钟，那么从节点上也会耗费10分钟。")]),a._v(" "),s("h3",{attrs:{id:"_4-3-如何减少主从延迟"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-如何减少主从延迟"}},[a._v("#")]),a._v(" 4.3 如何减少主从延迟")]),a._v(" "),s("p",[a._v("若想要减少主从延迟的时间，可以采取下面的办法：")]),a._v(" "),s("ol",[s("li",[a._v("降低多线程大事务并发的概率，优化业务逻辑")]),a._v(" "),s("li",[a._v("优化SQL，避免慢SQL， "),s("code",[a._v("减少批量操作")]),a._v(" ，建议写脚本以update-sleep这样的形式完成。")]),a._v(" "),s("li",[s("code",[a._v("提高从库机器的配置")]),a._v(" ，减少主库写binlog和从库读binlog的效率差。")]),a._v(" "),s("li",[a._v("尽量采用 "),s("code",[a._v("短的链路")]),a._v(" ，也就是主库和从库服务器的距离尽量要短，提升端口带宽，减少binlog传输的网络延时。")]),a._v(" "),s("li",[a._v("实时性要求的业务读强制走主库，从库只做灾备，备份。")])]),a._v(" "),s("h3",{attrs:{id:"_4-4-如何解决一致性问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-如何解决一致性问题"}},[a._v("#")]),a._v(" 4.4 如何解决一致性问题")]),a._v(" "),s("p",[a._v("如果操作的数据存储在同一个数据库中，那么对数据进行更新的时候，可以对记录加写锁，这样在读取的时候就不会发生数据不一致的情况。但这时从库的作用就是 "),s("code",[a._v("备份")]),a._v(" ，并没有起到 "),s("code",[a._v("读写分离")]),a._v(" ，分担主库 "),s("code",[a._v("读压力")]),a._v(" 的作用。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220718144341584.png",alt:"image-20220718144341584"}})]),a._v(" "),s("p",[a._v("读写分离情况下，解决主从同步中数据不一致的问题， 就是解决主从之间 "),s("code",[a._v("数据复制方式")]),a._v(" 的问题，如果按照数据一致性 "),s("code",[a._v("从弱到强")]),a._v(" 来进行划分，有以下 3 种复制方式。")]),a._v(" "),s("h4",{attrs:{id:"方法-1-异步复制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法-1-异步复制"}},[a._v("#")]),a._v(" 方法 1：异步复制")]),a._v(" "),s("p",[a._v("异步模式就是客户端提交 COMMIT 之后不需要等从库返回任何结果，而是直接将结果返回给客户端，这样做的好处是不会影响主库写的效率，但可能会存在主库宕机，而Binlog还没有同步到从库的情况，也就是此时的主库和从库数据不一致。这时候从从库中选择一个作为新主，那么新主则可能缺少原来主服务器中已提交的事务。所以，这种复制模式下的数据一致性是最弱的。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220718144410731.png",alt:"image-20220718144410731"}})]),a._v(" "),s("h4",{attrs:{id:"方法-2-半同步复制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法-2-半同步复制"}},[a._v("#")]),a._v(" 方法 2：半同步复制")]),a._v(" "),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220718144926758.png",alt:"image-20220718144926758"}}),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220718144958357.png",alt:"image-20220718144958357"}})]),a._v(" "),s("h4",{attrs:{id:"方法-3-组复制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法-3-组复制"}},[a._v("#")]),a._v(" 方法 3：组复制")]),a._v(" "),s("p",[a._v("异步复制和半同步复制都无法最终保证数据的一致性问题，半同步复制是通过判断从库响应的个数来决定是否返回给客户端，虽然数据一致性相比于异步复制有提升，但仍然无法满足对数据一致性要求高的场景，比如金融领域。MGR 很好地弥补了这两种复制模式的不足。")]),a._v(" "),s("p",[a._v("组复制技术，简称 MGR（MySQL Group Replication）。是 MySQL 在 5.7.17 版本中推出的一种新的数据复制技术，这种复制技术是基于 Paxos 协议的状态机复制。")]),a._v(" "),s("p",[s("strong",[a._v("MGR 是如何工作的")])]),a._v(" "),s("p",[a._v("首先我们将多个节点共同组成一个复制组，在 "),s("code",[a._v("执行读写（RW）事务")]),a._v(" 的时候，需要通过一致性协议层 （Consensus 层）的同意，也就是读写事务想要进行提交，必须要经过组里“大多数人”（对应 Node 节 点）的同意，大多数指的是同意的节点数量需要大于 （N/2+1），这样才可以进行提交，而不是原发起方一个说了算。而针对 "),s("code",[a._v("只读（RO）事务")]),a._v(" 则不需要经过组内同意，直接 COMMIT 即可。")]),a._v(" "),s("p",[a._v("在一个复制组内有多个节点组成，它们各自维护了自己的数据副本，并且在一致性协议层实现了原子消 息和全局有序消息，从而保证组内数据的一致性。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220718145235499.png",alt:"image-20220718145235499"}})]),a._v(" "),s("p",[a._v("MGR 将 MySQL 带入了数据强一致性的时代，是一个划时代的创新，其中一个重要的原因就是MGR 是基 于 Paxos 协议的。Paxos 算法是由 2013 年的图灵奖获得者 Leslie Lamport 于 1990 年提出的，有关这个算法的决策机制可以搜一下。事实上，Paxos 算法提出来之后就作为 "),s("code",[a._v("分布式一致性算法")]),a._v(" 被广泛应用，比如 Apache 的 ZooKeeper 也是基于 Paxos 实现的。")]),a._v(" "),s("h2",{attrs:{id:"_5-知识延伸"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-知识延伸"}},[a._v("#")]),a._v(" 5. 知识延伸")]),a._v(" "),s("p",[a._v("在主从架构的配置中，如果想要采取读写分离的策略，我们可以"),s("code",[a._v("自己编写程序")]),a._v(" ，也可以通过 "),s("code",[a._v("第三方的中间件")]),a._v(" 来实现。")]),a._v(" "),s("ul",[s("li",[a._v("自己编写程序的好处就在于比较自主，我们可以自己判断哪些查询在从库上来执行，针对实时性要 求高的需求，我们还可以考虑哪些查询可以在主库上执行。同时，程序直接连接数据库，减少了中间件层，相当于减少了性能损耗。")]),a._v(" "),s("li",[a._v("采用中间件的方法有很明显的优势，"),s("code",[a._v("功能强大")]),a._v(" ， "),s("code",[a._v("使用简单")]),a._v(" 。但因为在客户端和数据库之间增加了 中间件层会有一些 "),s("code",[a._v("性能损耗")]),a._v(" ，同时商业中间件也是有使用成本的。我们也可以考虑采取一些优秀的开源工具。")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220718145428456.png",alt:"image-20220718145428456"}})]),a._v(" "),s("p",[a._v("① "),s("code",[a._v("Cobar")]),a._v(" 属于阿里B2B事业群，始于2008年，在阿里服役3年多，接管3000+个MySQL数据库的 schema,集群日处理在线SQL请求50亿次以上。由于Cobar发起人的离职，Cobar停止维护。")]),a._v(" "),s("p",[a._v("② "),s("code",[a._v("Mycat")]),a._v(" 是开源社区在阿里cobar基础上进行二次开发，解决了cobar存在的问题，并且加入了许 多新的功能在其中。青出于蓝而胜于蓝。")]),a._v(" "),s("p",[a._v("③ "),s("code",[a._v("OneProxy")]),a._v(" 基于MySQL官方的proxy思想利用c语言进行开发的，OneProxy是一款商业 收费 的中 间件。舍弃了一些功能，专注在 性能和稳定性上 。")]),a._v(" "),s("p",[a._v("④ "),s("code",[a._v("kingshard")]),a._v(" 由小团队用go语言开发，还需要发展，需要不断完善。")]),a._v(" "),s("p",[a._v("⑤ "),s("code",[a._v("Vitess")]),a._v(" 是Youtube生产在使用，架构很复杂。不支持MySQL原生协议，使用 需要大量改造成 本 。")]),a._v(" "),s("p",[a._v("⑥ "),s("code",[a._v("Atlas")]),a._v(" 是360团队基于mysql proxy改写，功能还需完善，高并发下不稳定。")]),a._v(" "),s("p",[a._v("⑦ "),s("code",[a._v("MaxScale")]),a._v(" 是mariadb（MySQL原作者维护的一个版本） 研发的中间件")]),a._v(" "),s("p",[a._v("⑧ "),s("code",[a._v("MySQLRoute")]),a._v(" 是MySQL官方Oracle公司发布的中间件")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220718145523643.png",alt:"image-20220718145523643"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220718145534856.png",alt:"image-20220718145534856"}})]),a._v(" "),s("p",[a._v("主备切换：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220718145548526.png",alt:"image-20220718145548526"}})]),a._v(" "),s("ul",[s("li",[a._v("主动切换")]),a._v(" "),s("li",[a._v("被动切换")]),a._v(" "),s("li",[a._v("如何判断主库出问题了？如何解决过程中的数据不一致性问题 ?")])])])}),[],!1,null,null,null);s.default=_.exports}}]);