(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{383:function(a,s,t){"use strict";t.r(s);var e=t(7),n=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("配套视频参考："),s("a",{attrs:{href:"https://www.bilibili.com/video/BV1iq4y1u7vj?p=1&vd_source=cea816a08805c218ac4390ae9b61ae31",target:"_blank",rel:"noopener noreferrer"}},[a._v("MySQL数据库天花板--康师傅"),s("OutboundLink")],1),a._v("http://www.atguigu.com/)")]),a._v(" "),s("p",[a._v("都有哪些维度可以进行数据库调优？简言之：")]),a._v(" "),s("ul",[s("li",[a._v("索引失效、没有充分利用到索引——建立索引")]),a._v(" "),s("li",[a._v("关联查询太多JOIN（设计缺陷或不得已的需求）——SQL优化")]),a._v(" "),s("li",[a._v("服务器调优及各个参数设置（缓冲、线程数等）——调整my.cnf")]),a._v(" "),s("li",[a._v("数据过多——分库分表")])]),a._v(" "),s("p",[a._v("关于数据库调优的知识非常分散。不同的DBMS，不同的公司，不同的职位，不同的项目遇到的问题都不尽相同。这里我们分为三个章节进行细致讲解。")]),a._v(" "),s("p",[a._v("虽然SQL查询优化的技术有很多，但是大方向上完全可以分成"),s("code",[a._v("物理查询优化")]),a._v("和"),s("code",[a._v("逻辑查询优化")]),a._v("两大块。")]),a._v(" "),s("ul",[s("li",[a._v("物理查询优化是通过"),s("code",[a._v("索引")]),a._v("和"),s("code",[a._v("表连接方式")]),a._v("等技术来进行优化，这里重点需要掌握索引的使用。")]),a._v(" "),s("li",[a._v("逻辑查询优化就是通过SQL"),s("code",[a._v("等价变换")]),a._v("提升查询效率，直白一点就是说，换一种查询写法效率可能更高。")])]),a._v(" "),s("h2",{attrs:{id:"_1-数据准备"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据准备"}},[a._v("#")]),a._v(" 1. 数据准备")]),a._v(" "),s("p",[s("code",[a._v("学员表")]),a._v(" 插 "),s("code",[a._v("50万")]),a._v(" 条，"),s("code",[a._v("班级表")]),a._v(" 插 "),s("code",[a._v("1万")]),a._v(" 条。")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("CREATE DATABASE atguigudb2;\nUSE atguigudb2;\n")])])]),s("p",[s("strong",[a._v("步骤1：建表")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("CREATE TABLE `class` (\n    `id` INT(11) NOT NULL AUTO_INCREMENT,\n    `className` VARCHAR(30) DEFAULT NULL,\n    `address` VARCHAR(40) DEFAULT NULL,\n    `monitor` INT NULL ,\n    PRIMARY KEY (`id`)\n) ENGINE=INNODB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;\n\nCREATE TABLE `student` (\n    `id` INT(11) NOT NULL AUTO_INCREMENT,\n    `stuno` INT NOT NULL ,\n    `name` VARCHAR(20) DEFAULT NULL,\n    `age` INT(3) DEFAULT NULL,\n    `classId` INT(11) DEFAULT NULL,\n    PRIMARY KEY (`id`)\n    #CONSTRAINT `fk_class_id` FOREIGN KEY (`classId`) REFERENCES `t_class` (`id`)\n) ENGINE=INNODB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;\n")])])]),s("p",[s("strong",[a._v("步骤2：设置参数")])]),a._v(" "),s("ul",[s("li",[a._v("命令开启：允许创建函数设置：")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("set global log_bin_trust_function_creators=1; # 不加global只是当前窗口有效。\n")])])]),s("p",[s("strong",[a._v("步骤3：创建函数")])]),a._v(" "),s("p",[a._v("保证每条数据都不同。")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("#随机产生字符串\nDELIMITER //\nCREATE FUNCTION rand_string(n INT) RETURNS VARCHAR(255)\nBEGIN\nDECLARE chars_str VARCHAR(100) DEFAULT\n'abcdefghijklmnopqrstuvwxyzABCDEFJHIJKLMNOPQRSTUVWXYZ';\nDECLARE return_str VARCHAR(255) DEFAULT '';\nDECLARE i INT DEFAULT 0;\nWHILE i < n DO\nSET return_str =CONCAT(return_str,SUBSTRING(chars_str,FLOOR(1+RAND()*52),1));\nSET i = i + 1;\nEND WHILE;\nRETURN return_str;\nEND //\nDELIMITER ;\n#假如要删除\n#drop function rand_string;\n")])])]),s("p",[a._v("随机产生班级编号")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("#用于随机产生多少到多少的编号\nDELIMITER //\nCREATE FUNCTION rand_num (from_num INT ,to_num INT) RETURNS INT(11)\nBEGIN\nDECLARE i INT DEFAULT 0;\nSET i = FLOOR(from_num +RAND()*(to_num - from_num+1)) ;\nRETURN i;\nEND //\nDELIMITER ;\n#假如要删除\n#drop function rand_num;\n")])])]),s("p",[s("strong",[a._v("步骤4：创建存储过程")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("#创建往stu表中插入数据的存储过程\nDELIMITER //\nCREATE PROCEDURE insert_stu( START INT , max_num INT )\nBEGIN\nDECLARE i INT DEFAULT 0;\nSET autocommit = 0; #设置手动提交事务\nREPEAT #循环\nSET i = i + 1; #赋值\nINSERT INTO student (stuno, name ,age ,classId ) VALUES\n((START+i),rand_string(6),rand_num(1,50),rand_num(1,1000));\nUNTIL i = max_num\nEND REPEAT;\nCOMMIT; #提交事务\nEND //\nDELIMITER ;\n#假如要删除\n#drop PROCEDURE insert_stu;\n")])])]),s("p",[a._v("创建往class表中插入数据的存储过程")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("#执行存储过程，往class表添加随机数据\nDELIMITER //\nCREATE PROCEDURE `insert_class`( max_num INT )\nBEGIN\nDECLARE i INT DEFAULT 0;\nSET autocommit = 0;\nREPEAT\nSET i = i + 1;\nINSERT INTO class ( classname,address,monitor ) VALUES\n(rand_string(8),rand_string(10),rand_num(1,100000));\nUNTIL i = max_num\nEND REPEAT;\nCOMMIT;\nEND //\nDELIMITER ;\n#假如要删除\n#drop PROCEDURE insert_class;\n")])])]),s("p",[s("strong",[a._v("步骤5：调用存储过程")])]),a._v(" "),s("p",[a._v("class")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("#执行存储过程，往class表添加1万条数据\nCALL insert_class(10000);\n")])])]),s("p",[a._v("stu")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("#执行存储过程，往stu表添加50万条数据\nCALL insert_stu(100000,500000);\n")])])]),s("p",[s("strong",[a._v("步骤6：删除某表上的索引")])]),a._v(" "),s("p",[a._v("创建存储过程")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("DELIMITER //\nCREATE PROCEDURE `proc_drop_index`(dbname VARCHAR(200),tablename VARCHAR(200))\nBEGIN\n        DECLARE done INT DEFAULT 0;\n        DECLARE ct INT DEFAULT 0;\n        DECLARE _index VARCHAR(200) DEFAULT '';\n        DECLARE _cur CURSOR FOR SELECT index_name FROM\ninformation_schema.STATISTICS WHERE table_schema=dbname AND table_name=tablename AND\nseq_in_index=1 AND index_name <>'PRIMARY' ;\n#每个游标必须使用不同的declare continue handler for not found set done=1来控制游标的结束\n\t\tDECLARE CONTINUE HANDLER FOR NOT FOUND set done=2 ;\n#若没有数据返回,程序继续,并将变量done设为2\n        OPEN _cur;\n        FETCH _cur INTO _index;\n        WHILE _index<>'' DO\n            SET @str = CONCAT(\"drop index \" , _index , \" on \" , tablename );\n            PREPARE sql_str FROM @str ;\n            EXECUTE sql_str;\n            DEALLOCATE PREPARE sql_str;\n            SET _index='';\n            FETCH _cur INTO _index;\n        END WHILE;\n    CLOSE _cur;\nEND //\nDELIMITER ;\n")])])]),s("p",[a._v("执行存储过程")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('CALL proc_drop_index("dbname","tablename");\n')])])]),s("h2",{attrs:{id:"_2-索引失效案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-索引失效案例"}},[a._v("#")]),a._v(" 2. 索引失效案例")]),a._v(" "),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220704202453482.png",alt:"image-20220704202453482"}}),a._v(" "),s("h3",{attrs:{id:"_2-1-全值匹配我最爱"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-全值匹配我最爱"}},[a._v("#")]),a._v(" 2.1 全值匹配我最爱")]),a._v(" "),s("p",[a._v("系统中经常出现的sql语句如下：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE age=30;\nEXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE age=30 AND classId=4;\nEXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE age=30 AND classId=4 AND name = 'abcd';\n")])])]),s("p",[a._v("建立索引前执行：（关注执行时间）")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> SELECT SQL_NO_CACHE * FROM student WHERE age=30 AND classId=4 AND name = 'abcd';\nEmpty set, 1 warning (0.28 sec)\n")])])]),s("p",[s("strong",[a._v("建立索引")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("CREATE INDEX idx_age ON student(age);\nCREATE INDEX idx_age_classid ON student(age,classId);\nCREATE INDEX idx_age_classid_name ON student(age,classId,name);\n")])])]),s("p",[a._v("建立索引后执行：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> SELECT SQL_NO_CACHE * FROM student WHERE age=30 AND classId=4 AND name = 'abcd';\nEmpty set, 1 warning (0.01 sec)\n")])])]),s("img",{staticStyle:{float:"left"},attrs:{src:"D:/学习资料/MySQL/StudyNotes/MySQL高级篇/MySQL索引及调优篇.assets/image-20220704204140589.png",alt:"image-20220704204140589"}}),a._v(" "),s("h3",{attrs:{id:"_2-2-最佳左前缀法则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-最佳左前缀法则"}},[a._v("#")]),a._v(" 2.2 最佳左前缀法则")]),a._v(" "),s("p",[a._v("在MySQL建立联合索引时会遵守最佳左前缀原则，即最左优先，在检索数据时从联合索引的最左边开始匹配。")]),a._v(" "),s("p",[a._v("举例1：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE student.age=30 AND student.name = 'abcd';\n")])])]),s("p",[a._v("举例2：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE student.classId=1 AND student.name = 'abcd';\n")])])]),s("p",[a._v("举例3：索引"),s("code",[a._v("idx_age_classid_name")]),a._v("还能否正常使用？")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE student.classId=4 AND student.age=30 AND student.name = 'abcd';\n")])])]),s("p",[a._v("如果索引了多列，要遵守最左前缀法则。指的是查询从索引的最左前列开始并且不跳过索引中的列。")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> EXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE student.age=30 AND student.name = 'abcd';\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220704211116351.png",alt:"image-20220704211116351"}})]),a._v(" "),s("p",[a._v("虽然可以正常使用，但是只有部分被使用到了。")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> EXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE student.classId=1 AND student.name = 'abcd';\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220704211254581.png",alt:"image-20220704211254581"}})]),a._v(" "),s("p",[a._v("完全没有使用上索引。")]),a._v(" "),s("p",[a._v("结论：MySQL可以为多个字段创建索引，一个索引可以包含16个字段。对于多列索引，"),s("strong",[a._v("过滤条件要使用索引必须按照索引建立时的顺序，依次满足，一旦跳过某个字段，索引后面的字段都无法被使用")]),a._v("。如果查询条件中没有用这些字段中第一个字段时，多列（或联合）索引不会被使用。")]),a._v(" "),s("blockquote",[s("p",[a._v("拓展：Alibaba《Java开发手册》")]),a._v(" "),s("p",[a._v("索引文件具有 B-Tree 的最左前缀匹配特性，如果左边的值未确定，那么无法使用此索引。")])]),a._v(" "),s("h3",{attrs:{id:"_2-3-主键插入顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-主键插入顺序"}},[a._v("#")]),a._v(" 2.3 主键插入顺序")]),a._v(" "),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220704212354041.png",alt:"image-20220704212354041"}}),a._v(" "),s("p",[a._v("如果此时再插入一条主键值为 9 的记录，那它插入的位置就如下图：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220704212428607.png",alt:"image-20220704212428607"}})]),a._v(" "),s("p",[a._v("可这个数据页已经满了，再插进来咋办呢？我们需要把当前 "),s("code",[a._v("页面分裂")]),a._v(" 成两个页面，把本页中的一些记录移动到新创建的这个页中。页面分裂和记录移位意味着什么？意味着： "),s("code",[a._v("性能损耗")]),a._v(" ！所以如果我们想尽量避免这样无谓的性能损耗，最好让插入的记录的 "),s("code",[a._v("主键值依次递增")]),a._v(" ，这样就不会发生这样的性能损耗了。 所以我们建议：让主键具有 "),s("code",[a._v("AUTO_INCREMENT")]),a._v(" ，让存储引擎自己为表生成主键，而不是我们手动插入 ， 比如： "),s("code",[a._v("person_info")]),a._v(" 表：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("CREATE TABLE person_info(\n    id INT UNSIGNED NOT NULL AUTO_INCREMENT,\n    name VARCHAR(100) NOT NULL,\n    birthday DATE NOT NULL,\n    phone_number CHAR(11) NOT NULL,\n    country varchar(100) NOT NULL,\n    PRIMARY KEY (id),\n    KEY idx_name_birthday_phone_number (name(10), birthday, phone_number)\n);\n")])])]),s("p",[a._v("我们自定义的主键列 "),s("code",[a._v("id")]),a._v(" 拥有 "),s("code",[a._v("AUTO_INCREMENT")]),a._v(" 属性，在插入记录时存储引擎会自动为我们填入自增的主键值。这样的主键占用空间小，顺序写入，减少页分裂。")]),a._v(" "),s("h3",{attrs:{id:"_2-4-计算、函数、类型转换-自动或手动-导致索引失效"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-计算、函数、类型转换-自动或手动-导致索引失效"}},[a._v("#")]),a._v(" 2.4 计算、函数、类型转换(自动或手动)导致索引失效")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("这两条sql哪种写法更好")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE student.name LIKE 'abc%';\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE LEFT(student.name,3) = 'abc';\n")])])])]),a._v(" "),s("li",[s("p",[a._v("创建索引")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("CREATE INDEX idx_name ON student(NAME);\n")])])])]),a._v(" "),s("li",[s("p",[a._v("第一种：索引优化生效")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> EXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE student.name LIKE 'abc%';\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> SELECT SQL_NO_CACHE * FROM student WHERE student.name LIKE 'abc%';\n+---------+---------+--------+------+---------+\n| id | stuno | name | age | classId |\n+---------+---------+--------+------+---------+\n| 5301379 | 1233401 | AbCHEa | 164 | 259 |\n| 7170042 | 3102064 | ABcHeB | 199 | 161 |\n| 1901614 | 1833636 | ABcHeC | 226 | 275 |\n| 5195021 | 1127043 | abchEC | 486 | 72 |\n| 4047089 | 3810031 | AbCHFd | 268 | 210 |\n| 4917074 | 849096 | ABcHfD | 264 | 442 |\n| 1540859 | 141979 | abchFF | 119 | 140 |\n| 5121801 | 1053823 | AbCHFg | 412 | 327 |\n| 2441254 | 2373276 | abchFJ | 170 | 362 |\n| 7039146 | 2971168 | ABcHgI | 502 | 465 |\n| 1636826 | 1580286 | ABcHgK | 71 | 262 |\n| 374344 | 474345 | abchHL | 367 | 212 |\n| 1596534 | 169191 | AbCHHl | 102 | 146 |\n...\n| 5266837 | 1198859 | abclXe | 292 | 298 |\n| 8126968 | 4058990 | aBClxE | 316 | 150 |\n| 4298305 | 399962 | AbCLXF | 72 | 423 |\n| 5813628 | 1745650 | aBClxF | 356 | 323 |\n| 6980448 | 2912470 | AbCLXF | 107 | 78 |\n| 7881979 | 3814001 | AbCLXF | 89 | 497 |\n| 4955576 | 887598 | ABcLxg | 121 | 385 |\n| 3653460 | 3585482 | AbCLXJ | 130 | 174 |\n| 1231990 | 1283439 | AbCLYH | 189 | 429 |\n| 6110615 | 2042637 | ABcLyh | 157 | 40 |\n+---------+---------+--------+------+---------+\n401 rows in set, 1 warning (0.01 sec)\n")])])])]),a._v(" "),s("li",[s("p",[a._v("第二种：索引优化失效")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> EXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE LEFT(student.name,3) = 'abc';\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220704214905412.png",alt:"image-20220704214905412"}})]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> SELECT SQL_NO_CACHE * FROM student WHERE LEFT(student.name,3) = 'abc';\n+---------+---------+--------+------+---------+\n| id | stuno | name | age | classId |\n+---------+---------+--------+------+---------+\n| 5301379 | 1233401 | AbCHEa | 164 | 259 |\n| 7170042 | 3102064 | ABcHeB | 199 | 161 |\n| 1901614 | 1833636 | ABcHeC | 226 | 275 |\n| 5195021 | 1127043 | abchEC | 486 | 72 |\n| 4047089 | 3810031 | AbCHFd | 268 | 210 |\n| 4917074 | 849096 | ABcHfD | 264 | 442 |\n| 1540859 | 141979 | abchFF | 119 | 140 |\n| 5121801 | 1053823 | AbCHFg | 412 | 327 |\n| 2441254 | 2373276 | abchFJ | 170 | 362 |\n| 7039146 | 2971168 | ABcHgI | 502 | 465 |\n| 1636826 | 1580286 | ABcHgK | 71 | 262 |\n| 374344 | 474345 | abchHL | 367 | 212 |\n| 1596534 | 169191 | AbCHHl | 102 | 146 |\n...\n| 5266837 | 1198859 | abclXe | 292 | 298 |\n| 8126968 | 4058990 | aBClxE | 316 | 150 |\n| 4298305 | 399962 | AbCLXF | 72 | 423 |\n| 5813628 | 1745650 | aBClxF | 356 | 323 |\n| 6980448 | 2912470 | AbCLXF | 107 | 78 |\n| 7881979 | 3814001 | AbCLXF | 89 | 497 |\n| 4955576 | 887598 | ABcLxg | 121 | 385 |\n| 3653460 | 3585482 | AbCLXJ | 130 | 174 |\n| 1231990 | 1283439 | AbCLYH | 189 | 429 |\n| 6110615 | 2042637 | ABcLyh | 157 | 40 |\n+---------+---------+--------+------+---------+\n401 rows in set, 1 warning (3.62 sec)\n")])])]),s("p",[a._v("type为“ALL”，表示没有使用到索引，查询时间为 3.62 秒，查询效率较之前低很多。")])])]),a._v(" "),s("p",[s("strong",[a._v("再举例：")])]),a._v(" "),s("ul",[s("li",[s("p",[a._v("student表的字段stuno上设置有索引")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("CREATE INDEX idx_sno ON student(stuno);\n")])])])]),a._v(" "),s("li",[s("p",[a._v("索引优化失效：（假设：student表的字段stuno上设置有索引）")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT SQL_NO_CACHE id, stuno, NAME FROM student WHERE stuno+1 = 900001;\n")])])])])]),a._v(" "),s("p",[a._v("运行结果：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220704215159768.png",alt:"image-20220704215159768"}})]),a._v(" "),s("ul",[s("li",[s("p",[a._v("索引优化生效：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT SQL_NO_CACHE id, stuno, NAME FROM student WHERE stuno = 900000;\n")])])])])]),a._v(" "),s("p",[s("strong",[a._v("再举例：")])]),a._v(" "),s("ul",[s("li",[s("p",[a._v("student表的字段name上设置有索引")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("CREATE INDEX idx_name ON student(NAME);\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT id, stuno, name FROM student WHERE SUBSTRING(name, 1,3)='abc';\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220704215533871.png",alt:"image-20220704215533871"}})])]),a._v(" "),s("li",[s("p",[a._v("索引优化生效")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT id, stuno, NAME FROM student WHERE NAME LIKE 'abc%';\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220704215600507.png",alt:"image-20220704215600507"}})])])]),a._v(" "),s("h3",{attrs:{id:"_2-5-类型转换导致索引失效"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-类型转换导致索引失效"}},[a._v("#")]),a._v(" 2.5 类型转换导致索引失效")]),a._v(" "),s("p",[a._v("下列哪个sql语句可以用到索引。（假设name字段上设置有索引）")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# 未使用到索引\nEXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE name=123;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220704215658526.png",alt:"image-20220704215658526"}})]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# 使用到索引\nEXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE name='123';\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220704215721216.png",alt:"image-20220704215721216"}})]),a._v(" "),s("p",[a._v("name=123发生类型转换，索引失效。")]),a._v(" "),s("h3",{attrs:{id:"_2-6-范围条件右边的列索引失效"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-范围条件右边的列索引失效"}},[a._v("#")]),a._v(" 2.6 范围条件右边的列索引失效")]),a._v(" "),s("ol",[s("li",[a._v("系统经常出现的sql如下：")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("ALTER TABLE student DROP INDEX idx_name;\nALTER TABLE student DROP INDEX idx_age;\nALTER TABLE student DROP INDEX idx_age_classid;\n\nEXPLAIN SELECT SQL_NO_CACHE * FROM student\nWHERE student.age=30 AND student.classId>20 AND student.name = 'abc' ;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220704220123647.png",alt:"image-20220704220123647"}})]),a._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[a._v("那么索引 idx_age_classId_name 这个索引还能正常使用么？")])]),a._v(" "),s("ul",[s("li",[a._v("不能，范围右边的列不能使用。比如：(<) (<=) (>) (>=) 和 between 等")]),a._v(" "),s("li",[a._v("如果这种sql出现较多，应该建立：")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("create index idx_age_name_classId on student(age,name,classId);\n")])])]),s("ul",[s("li",[a._v("将范围查询条件放置语句最后：")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE student.age=30 AND student.name = 'abc' AND student.classId>20;\n")])])]),s("blockquote",[s("p",[a._v("应用开发中范围查询，例如：金额查询，日期查询往往都是范围查询。应将查询条件放置where语句最后。（创建的联合索引中，务必把范围涉及到的字段写在最后）")])]),a._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[a._v("效果")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220704223211981.png",alt:"image-20220704223211981"}})]),a._v(" "),s("h3",{attrs:{id:"_2-7-不等于-或者-索引失效"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-不等于-或者-索引失效"}},[a._v("#")]),a._v(" 2.7 不等于(!= 或者<>)索引失效")]),a._v(" "),s("ul",[s("li",[a._v("为name字段创建索引")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("CREATE INDEX idx_name ON student(NAME);\n")])])]),s("ul",[s("li",[a._v("查看索引是否失效")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE student.name <> 'abc';\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220704224552374.png",alt:"image-20220704224552374"}})]),a._v(" "),s("p",[a._v("或者")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE student.name != 'abc';\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220704224916117.png",alt:"image-20220704224916117"}})]),a._v(" "),s("p",[a._v("场景举例：用户提出需求，将财务数据，产品利润金额不等于0的都统计出来。")]),a._v(" "),s("h3",{attrs:{id:"_2-8-is-null可以使用索引-is-not-null无法使用索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-is-null可以使用索引-is-not-null无法使用索引"}},[a._v("#")]),a._v(" 2.8 is null可以使用索引，is not null无法使用索引")]),a._v(" "),s("ul",[s("li",[a._v("IS NULL: 可以触发索引")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE age IS NULL;\n")])])]),s("ul",[s("li",[a._v("IS NOT NULL: 无法触发索引")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE age IS NOT NULL;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220704225333199.png",alt:"image-20220704225333199"}})]),a._v(" "),s("blockquote",[s("p",[a._v("结论：最好在设计数据库的时候就将"),s("code",[a._v("字段设置为 NOT NULL 约束")]),a._v("，比如你可以将 INT 类型的字段，默认值设置为0。将字符类型的默认值设置为空字符串('')。")]),a._v(" "),s("p",[a._v("扩展：同理，在查询中使用"),s("code",[a._v("not like")]),a._v("也无法使用索引，导致全表扫描。")])]),a._v(" "),s("h3",{attrs:{id:"_2-9-like以通配符-开头索引失效"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-9-like以通配符-开头索引失效"}},[a._v("#")]),a._v(" 2.9 like以通配符%开头索引失效")]),a._v(" "),s("p",[a._v("在使用LIKE关键字进行查询的查询语句中，如果匹配字符串的第一个字符为'%'，索引就不会起作用。只有'%'不在第一个位置，索引才会起作用。")]),a._v(" "),s("ul",[s("li",[a._v("使用到索引")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE name LIKE 'ab%';\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705131643304.png",alt:"image-20220705131643304"}})]),a._v(" "),s("ul",[s("li",[a._v("未使用到索引")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE name LIKE '%ab%';\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705131717329.png",alt:"image-20220705131717329"}})]),a._v(" "),s("blockquote",[s("p",[a._v("拓展：Alibaba《Java开发手册》")]),a._v(" "),s("p",[a._v("【强制】页面搜索严禁左模糊或者全模糊，如果需要请走搜索引擎来解决。")])]),a._v(" "),s("h3",{attrs:{id:"_2-10-or-前后存在非索引的列-索引失效"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-10-or-前后存在非索引的列-索引失效"}},[a._v("#")]),a._v(" 2.10 OR 前后存在非索引的列，索引失效")]),a._v(" "),s("p",[a._v("在WHERE子句中，如果在OR前的条件列进行了索引，而在OR后的条件列没有进行索引，那么索引会失效。也就是说，"),s("strong",[a._v("OR前后的两个条件中的列都是索引时，查询中才使用索引。")])]),a._v(" "),s("p",[a._v("因为OR的含义就是两个只要满足一个即可，因此"),s("code",[a._v("只有一个条件列进行了索引是没有意义的")]),a._v("，只要有条件列没有进行索引，就会进行"),s("code",[a._v("全表扫描")]),a._v("，因此所以的条件列也会失效。")]),a._v(" "),s("p",[a._v("查询语句使用OR关键字的情况：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# 未使用到索引\nEXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE age = 10 OR classid = 100;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705132221045.png",alt:"image-20220705132221045"}})]),a._v(" "),s("p",[a._v("因为classId字段上没有索引，所以上述查询语句没有使用索引。")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("#使用到索引\nEXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE age = 10 OR name = 'Abel';\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705132239232.png",alt:"image-20220705132239232"}})]),a._v(" "),s("p",[a._v("因为age字段和name字段上都有索引，所以查询中使用了索引。你能看到这里使用到了"),s("code",[a._v("index_merge")]),a._v("，简单来说index_merge就是对age和name分别进行了扫描，然后将这两个结果集进行了合并。这样做的好处就是"),s("code",[a._v("避免了全表扫描")]),a._v("。")]),a._v(" "),s("h3",{attrs:{id:"_2-11-数据库和表的字符集统一使用utf8mb4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-11-数据库和表的字符集统一使用utf8mb4"}},[a._v("#")]),a._v(" 2.11 数据库和表的字符集统一使用utf8mb4")]),a._v(" "),s("p",[a._v("统一使用utf8mb4( 5.5.3版本以上支持)兼容性更好，统一字符集可以避免由于字符集转换产生的乱码。不 同的 "),s("code",[a._v("字符集")]),a._v(" 进行比较前需要进行 "),s("code",[a._v("转换")]),a._v(" 会造成索引失效。")]),a._v(" "),s("h3",{attrs:{id:"_2-12-练习及一般性建议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-12-练习及一般性建议"}},[a._v("#")]),a._v(" 2.12 练习及一般性建议")]),a._v(" "),s("p",[a._v("**练习：**假设：index(a,b,c)")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705145225852.png",alt:"image-20220705145225852"}})]),a._v(" "),s("p",[s("strong",[a._v("一般性建议")])]),a._v(" "),s("ul",[s("li",[a._v("对于单列索引，尽量选择针对当前query过滤性更好的索引")]),a._v(" "),s("li",[a._v("在选择组合索引的时候，当前query中过滤性最好的字段在索引字段顺序中，位置越靠前越好。")]),a._v(" "),s("li",[a._v("在选择组合索引的时候，尽量选择能够当前query中where子句中更多的索引。")]),a._v(" "),s("li",[a._v("在选择组合索引的时候，如果某个字段可能出现范围查询时，尽量把这个字段放在索引次序的最后面。")])]),a._v(" "),s("p",[s("strong",[a._v("总之，书写SQL语句时，尽量避免造成索引失效的情况")])]),a._v(" "),s("h2",{attrs:{id:"_3-关联查询优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-关联查询优化"}},[a._v("#")]),a._v(" 3. 关联查询优化")]),a._v(" "),s("h3",{attrs:{id:"_3-1-数据准备"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-数据准备"}},[a._v("#")]),a._v(" 3.1 数据准备")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# 分类\nCREATE TABLE IF NOT EXISTS `type` (\n`id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,\n`card` INT(10) UNSIGNED NOT NULL,\nPRIMARY KEY (`id`)\n);\n#图书\nCREATE TABLE IF NOT EXISTS `book` (\n`bookid` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,\n`card` INT(10) UNSIGNED NOT NULL,\nPRIMARY KEY (`bookid`)\n);\n\n#向分类表中添加20条记录\nINSERT INTO `type`(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO `type`(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO `type`(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO `type`(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO `type`(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO `type`(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO `type`(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO `type`(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO `type`(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO `type`(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO `type`(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO `type`(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO `type`(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO `type`(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO `type`(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO `type`(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO `type`(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO `type`(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO `type`(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO `type`(card) VALUES(FLOOR(1 + (RAND() * 20)));\n\n#向图书表中添加20条记录\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\n")])])]),s("h3",{attrs:{id:"_3-2-采用左外连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-采用左外连接"}},[a._v("#")]),a._v(" 3.2 采用左外连接")]),a._v(" "),s("p",[a._v("下面开始 EXPLAIN 分析")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT SQL_NO_CACHE * FROM `type` LEFT JOIN book ON type.card = book.card;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705160504018.png",alt:"image-20220705160504018"}})]),a._v(" "),s("p",[a._v("结论：type 有All")]),a._v(" "),s("p",[a._v("添加索引优化")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("ALTER TABLE book ADD INDEX Y ( card); #【被驱动表】，可以避免全表扫描\nEXPLAIN SELECT SQL_NO_CACHE * FROM `type` LEFT JOIN book ON type.card = book.card;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705160935109.png",alt:"image-20220705160935109"}})]),a._v(" "),s("p",[a._v("可以看到第二行的 type 变为了 ref，rows 也变成了优化比较明显。这是由左连接特性决定的。LEFT JOIN 条件用于确定如何从右表搜索行，左边一定都有，所以 "),s("code",[a._v("右边是我们的关键点,一定需要建立索引")]),a._v(" 。")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("ALTER TABLE `type` ADD INDEX X (card); #【驱动表】，无法避免全表扫描\nEXPLAIN SELECT SQL_NO_CACHE * FROM `type` LEFT JOIN book ON type.card = book.card;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705161243838.png",alt:"image-20220705161243838"}})]),a._v(" "),s("p",[a._v("接着：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("DROP INDEX Y ON book;\nEXPLAIN SELECT SQL_NO_CACHE * FROM `type` LEFT JOIN book ON type.card = book.card;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705161515545.png",alt:"image-20220705161515545"}})]),a._v(" "),s("h3",{attrs:{id:"_3-3-采用内连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-采用内连接"}},[a._v("#")]),a._v(" 3.3 采用内连接")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("drop index X on type;\ndrop index Y on book;（如果已经删除了可以不用再执行该操作）\n")])])]),s("p",[a._v("换成 inner join（MySQL自动选择驱动表）")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT SQL_NO_CACHE * FROM type INNER JOIN book ON type.card=book.card;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705161602362.png",alt:"image-20220705161602362"}})]),a._v(" "),s("p",[a._v("添加索引优化")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("ALTER TABLE book ADD INDEX Y (card);\nEXPLAIN SELECT SQL_NO_CACHE * FROM type INNER JOIN book ON type.card=book.card;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705161746184.png",alt:"image-20220705161746184"}})]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("ALTER TABLE type ADD INDEX X (card);\nEXPLAIN SELECT SQL_NO_CACHE * FROM type INNER JOIN book ON type.card=book.card;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705161843558.png",alt:"image-20220705161843558"}})]),a._v(" "),s("p",[a._v("对于内连接来说，查询优化器可以决定谁作为驱动表，谁作为被驱动表出现的")]),a._v(" "),s("p",[a._v("接着：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("DROP INDEX X ON `type`;\nEXPLAIN SELECT SQL_NO_CACHE * FROM TYPE INNER JOIN book ON type.card=book.card;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705161929544.png",alt:"image-20220705161929544"}})]),a._v(" "),s("p",[a._v("接着：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("ALTER TABLE `type` ADD INDEX X (card);\nEXPLAIN SELECT SQL_NO_CACHE * FROM `type` INNER JOIN book ON type.card=book.card;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705162009145.png",alt:"image-20220705162009145"}})]),a._v(" "),s("p",[a._v("接着：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("#向图书表中添加20条记录\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\nINSERT INTO book(card) VALUES(FLOOR(1 + (RAND() * 20)));\n\nALTER TABLE book ADD INDEX Y (card);\nEXPLAIN SELECT SQL_NO_CACHE * FROM `type` INNER JOIN book ON `type`.card = book.card;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705163833445.png",alt:"image-20220705163833445"}})]),a._v(" "),s("p",[a._v("图中发现，由于type表数据大于book表数据，MySQL选择将type作为被驱动表。")]),a._v(" "),s("h3",{attrs:{id:"_3-4-join语句原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-join语句原理"}},[a._v("#")]),a._v(" 3.4 join语句原理")]),a._v(" "),s("p",[a._v("join方式连接多个表，本质就是各个表之间数据的循环匹配。MySQL5.5版本之前，MySQL只支持一种表间关联方式，就是嵌套循环(Nested Loop Join)。如果关联表的数据量很大，则join关联的执行时间会很长。在MySQL5.5以后的版本中，MySQL通过引入BNLJ算法来优化嵌套执行。")]),a._v(" "),s("h4",{attrs:{id:"_1-驱动表和被驱动表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-驱动表和被驱动表"}},[a._v("#")]),a._v(" 1. 驱动表和被驱动表")]),a._v(" "),s("p",[a._v("驱动表就是主表，被驱动表就是从表、非驱动表。")]),a._v(" "),s("ul",[s("li",[a._v("对于内连接来说：")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT * FROM A JOIN B ON ...\n")])])]),s("p",[a._v("A一定是驱动表吗？不一定，优化器会根据你查询语句做优化，决定先查哪张表。先查询的那张表就是驱动表，反之就是被驱动表。通过explain关键字可以查看。")]),a._v(" "),s("ul",[s("li",[a._v("对于外连接来说：")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT * FROM A LEFT JOIN B ON ...\n# 或\nSELECT * FROM B RIGHT JOIN A ON ... \n")])])]),s("p",[a._v("通常，大家会认为A就是驱动表，B就是被驱动表。但也未必。测试如下：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("CREATE TABLE a(f1 INT, f2 INT, INDEX(f1)) ENGINE=INNODB;\nCREATE TABLE b(f1 INT, f2 INT) ENGINE=INNODB;\n\nINSERT INTO a VALUES(1,1),(2,2),(3,3),(4,4),(5,5),(6,6);\nINSERT INTO b VALUES(3,3),(4,4),(5,5),(6,6),(7,7),(8,8);\n\nSELECT * FROM b;\n\n# 测试1\nEXPLAIN SELECT * FROM a LEFT JOIN b ON(a.f1=b.f1) WHERE (a.f2=b.f2);\n\n# 测试2\nEXPLAIN SELECT * FROM a LEFT JOIN b ON(a.f1=b.f1) AND (a.f2=b.f2);\n")])])]),s("h4",{attrs:{id:"_2-simple-nested-loop-join-简单嵌套循环连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-simple-nested-loop-join-简单嵌套循环连接"}},[a._v("#")]),a._v(" 2. Simple Nested-Loop Join (简单嵌套循环连接)")]),a._v(" "),s("p",[a._v("算法相当简单，从表A中取出一条数据1，遍历表B，将匹配到的数据放到result.. 以此类推，驱动表A中的每一条记录与被驱动表B的记录进行判断：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705165559127.png",alt:"image-20220705165559127"}})]),a._v(" "),s("p",[a._v("可以看到这种方式效率是非常低的，以上述表A数据100条，表B数据1000条计算，则A*B=10万次。开销统计如下:")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705165646252.png",alt:"image-20220705165646252"}})]),a._v(" "),s("p",[a._v("当然mysql肯定不会这么粗暴的去进行表的连接，所以就出现了后面的两种对Nested-Loop Join优化算法。")]),a._v(" "),s("h4",{attrs:{id:"_3-index-nested-loop-join-索引嵌套循环连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-index-nested-loop-join-索引嵌套循环连接"}},[a._v("#")]),a._v(" 3. Index Nested-Loop Join （索引嵌套循环连接）")]),a._v(" "),s("p",[a._v("Index Nested-Loop Join其优化的思路主要是为了"),s("code",[a._v("减少内存表数据的匹配次数")]),a._v("，所以要求被驱动表上必须"),s("code",[a._v("有索引")]),a._v("才行。通过外层表匹配条件直接与内层表索引进行匹配，避免和内存表的每条记录去进行比较，这样极大的减少了对内存表的匹配次数。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705172315554.png",alt:"image-20220705172315554"}})]),a._v(" "),s("p",[a._v("驱动表中的每条记录通过被驱动表的索引进行访问，因为索引查询的成本是比较固定的，故mysql优化器都倾向于使用记录数少的表作为驱动表（外表）。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705172650749.png",alt:"image-20220705172650749"}})]),a._v(" "),s("p",[a._v("如果被驱动表加索引，效率是非常高的，但如果索引不是主键索引，所以还得进行一次回表查询。相比，被驱动表的索引是主键索引，效率会更高。")]),a._v(" "),s("h4",{attrs:{id:"_4-block-nested-loop-join-块嵌套循环连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-block-nested-loop-join-块嵌套循环连接"}},[a._v("#")]),a._v(" 4. Block Nested-Loop Join（块嵌套循环连接）")]),a._v(" "),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705173047234.png",alt:"image-20220705173047234"}}),a._v(" "),s("blockquote",[s("p",[a._v("注意：")]),a._v(" "),s("p",[a._v("这里缓存的不只是关联表的列，select后面的列也会缓存起来。")]),a._v(" "),s("p",[a._v("在一个有N个join关联的sql中会分配N-1个join buffer。所以查询的时候尽量减少不必要的字段，可以让join buffer中可以存放更多的列。")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705174005280.png",alt:"image-20220705174005280"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705174250551.png",alt:"image-20220705174250551"}})]),a._v(" "),s("p",[a._v("参数设置：")]),a._v(" "),s("ul",[s("li",[a._v("block_nested_loop")])]),a._v(" "),s("p",[a._v("通过"),s("code",[a._v("show variables like '%optimizer_switch%")]),a._v(" 查看 "),s("code",[a._v("block_nested_loop")]),a._v("状态。默认是开启的。")]),a._v(" "),s("ul",[s("li",[a._v("join_buffer_size")])]),a._v(" "),s("p",[a._v("驱动表能不能一次加载完，要看join buffer能不能存储所有的数据，默认情况下"),s("code",[a._v("join_buffer_size=256k")]),a._v("。")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> show variables like '%join_buffer%';\n")])])]),s("p",[a._v("join_buffer_size的最大值在32位操作系统可以申请4G，而在64位操作系统下可以申请大于4G的Join Buffer空间（64位Windows除外，其大值会被截断为4GB并发出警告）。")]),a._v(" "),s("h4",{attrs:{id:"_5-join小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-join小结"}},[a._v("#")]),a._v(" 5. Join小结")]),a._v(" "),s("p",[a._v("1、"),s("strong",[a._v("整体效率比较：INLJ > BNLJ > SNLJ")])]),a._v(" "),s("p",[a._v("2、永远用小结果集驱动大结果集（其本质就是减少外层循环的数据数量）（小的度量单位指的是表行数 * 每行大小）")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("select t1.b,t2.* from t1 straight_join t2 on (t1.b=t2.b) where t2.id<=100; # 推荐\nselect t1.b,t2.* from t2 straight_join t1 on (t1.b=t2.b) where t2.id<=100; # 不推荐\n")])])]),s("p",[a._v("3、为被驱动表匹配的条件增加索引(减少内存表的循环匹配次数)")]),a._v(" "),s("p",[a._v("4、增大join buffer size的大小（一次索引的数据越多，那么内层包的扫描次数就越少）")]),a._v(" "),s("p",[a._v("5、减少驱动表不必要的字段查询（字段越少，join buffer所缓存的数据就越多）")]),a._v(" "),s("h4",{attrs:{id:"_6-hash-join"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-hash-join"}},[a._v("#")]),a._v(" 6. Hash Join")]),a._v(" "),s("p",[s("strong",[a._v("从MySQL的8.0.20版本开始将废弃BNLJ，因为从MySQL8.0.18版本开始就加入了hash join默认都会使用hash join")])]),a._v(" "),s("ul",[s("li",[s("p",[a._v("Nested Loop:")]),a._v(" "),s("p",[a._v("对于被连接的数据子集较小的情况，Nested Loop是个较好的选择。")])]),a._v(" "),s("li",[s("p",[a._v("Hash Join是做"),s("code",[a._v("大数据集连接")]),a._v("时的常用方式，优化器使用两个表中较小（相对较小）的表利用Join Key在内存中建立"),s("code",[a._v("散列表")]),a._v("，然后扫描较大的表并探测散列表，找出与Hash表匹配的行。")]),a._v(" "),s("ul",[s("li",[a._v("这种方式适合于较小的表完全可以放于内存中的情况，这样总成本就是访问两个表的成本之和。")]),a._v(" "),s("li",[a._v("在表很大的情况下并不能完全放入内存，这时优化器会将它分割成"),s("code",[a._v("若干不同的分区")]),a._v("，不能放入内存的部分就把该分区写入磁盘的临时段，此时要求有较大的临时段从而尽量提高I/O的性能。")]),a._v(" "),s("li",[a._v("它能够很好的工作于没有索引的大表和并行查询的环境中，并提供最好的性能。大多数人都说它是Join的重型升降机。Hash Join只能应用于等值连接（如WHERE A.COL1 = B.COL2），这是由Hash的特点决定的。")])])])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705205050280.png",alt:"image-20220705205050280"}})]),a._v(" "),s("h3",{attrs:{id:"_3-5-小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-小结"}},[a._v("#")]),a._v(" 3.5 小结")]),a._v(" "),s("ul",[s("li",[a._v("保证被驱动表的JOIN字段已经创建了索引")]),a._v(" "),s("li",[a._v("需要JOIN 的字段，数据类型保持绝对一致。")]),a._v(" "),s("li",[a._v("LEFT JOIN 时，选择小表作为驱动表， 大表作为被驱动表 。减少外层循环的次数。")]),a._v(" "),s("li",[a._v("INNER JOIN 时，MySQL会自动将 小结果集的表选为驱动表 。选择相信MySQL优化策略。")]),a._v(" "),s("li",[a._v("能够直接多表关联的尽量直接关联，不用子查询。(减少查询的趟数)")]),a._v(" "),s("li",[a._v("不建议使用子查询，建议将子查询SQL拆开结合程序多次查询，或使用 JOIN 来代替子查询。")]),a._v(" "),s("li",[a._v("衍生表建不了索引")])]),a._v(" "),s("h2",{attrs:{id:"_4-子查询优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-子查询优化"}},[a._v("#")]),a._v(" 4. 子查询优化")]),a._v(" "),s("p",[a._v("MySQL从4.1版本开始支持子查询，使用子查询可以进行SELECT语句的嵌套查询，即一个SELECT查询的结 果作为另一个SELECT语句的条件。 "),s("code",[a._v("子查询可以一次性完成很多逻辑上需要多个步骤才能完成的SQL操作")]),a._v(" 。")]),a._v(" "),s("p",[a._v("**子查询是 MySQL 的一项重要的功能，可以帮助我们通过一个 SQL 语句实现比较复杂的查询。但是，子 查询的执行效率不高。**原因：")]),a._v(" "),s("p",[a._v("① 执行子查询时，MySQL需要为内层查询语句的查询结果 建立一个临时表 ，然后外层查询语句从临时表 中查询记录。查询完毕后，再 撤销这些临时表 。这样会消耗过多的CPU和IO资源，产生大量的慢查询。")]),a._v(" "),s("p",[a._v("② 子查询的结果集存储的临时表，不论是内存临时表还是磁盘临时表都 不会存在索引 ，所以查询性能会 受到一定的影响。")]),a._v(" "),s("p",[a._v("③ 对于返回结果集比较大的子查询，其对查询性能的影响也就越大。")]),a._v(" "),s("p",[a._v("**在MySQL中，可以使用连接（JOIN）查询来替代子查询。**连接查询 "),s("code",[a._v("不需要建立临时表")]),a._v(" ，其 "),s("code",[a._v("速度比子查询")]),a._v(" 要快 ，如果查询中使用索引的话，性能就会更好。")]),a._v(" "),s("p",[a._v("举例1：查询学生表中是班长的学生信息")]),a._v(" "),s("ul",[s("li",[a._v("使用子查询")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# 创建班级表中班长的索引\nCREATE INDEX idx_monitor ON class(monitor);\n\nEXPLAIN SELECT * FROM student stu1\nWHERE stu1.`stuno` IN (\nSELECT monitor\nFROM class c\nWHERE monitor IS NOT NULL\n)\n")])])]),s("ul",[s("li",[a._v("推荐使用多表查询")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT stu1.* FROM student stu1 JOIN class c\nON stu1.`stuno` = c.`monitor`\nWHERE c.`monitor` is NOT NULL;\n")])])]),s("p",[a._v("举例2：取所有不为班长的同学")]),a._v(" "),s("ul",[s("li",[a._v("不推荐")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT SQL_NO_CACHE a.*\nFROM student a\nWHERE a.stuno NOT IN (\n\tSELECT monitor FROM class b\n    WHERE monitor IS NOT NULL\n);\n")])])]),s("p",[a._v("执行结果如下：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705210708343.png",alt:"image-20220705210708343"}})]),a._v(" "),s("ul",[s("li",[a._v("推荐：")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT SQL_NO_CACHE a.*\nFROM student a LEFT OUTER JOIN class b\nON a.stuno = b.monitor\nWHERE b.monitor IS NULL;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705210839437.png",alt:"image-20220705210839437"}})]),a._v(" "),s("blockquote",[s("p",[a._v("结论：尽量不要使用NOT IN或者NOT EXISTS，用LEFT JOIN xxx ON xx WHERE xx IS NULL替代")])]),a._v(" "),s("h2",{attrs:{id:"_5-排序优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-排序优化"}},[a._v("#")]),a._v(" 5. 排序优化")]),a._v(" "),s("h3",{attrs:{id:"_5-1-排序优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-排序优化"}},[a._v("#")]),a._v(" 5.1 排序优化")]),a._v(" "),s("p",[s("strong",[a._v("问题")]),a._v("：在 WHERE 条件字段上加索引，但是为什么在 ORDER BY 字段上还要加索引呢？")]),a._v(" "),s("p",[s("strong",[a._v("回答：")])]),a._v(" "),s("p",[a._v("在MySQL中，支持两种排序方式，分别是 "),s("code",[a._v("FileSort")]),a._v(" 和 "),s("code",[a._v("Index")]),a._v(" 排序。")]),a._v(" "),s("ul",[s("li",[a._v("Index 排序中，索引可以保证数据的有序性，不需要再进行排序，"),s("code",[a._v("效率更高")]),a._v("。")]),a._v(" "),s("li",[a._v("FileSort 排序则一般在 "),s("code",[a._v("内存中")]),a._v(" 进行排序，占用"),s("code",[a._v("CPU较多")]),a._v("。如果待排结果较大，会产生临时文件 I/O 到磁盘进行排序的情况，效率较低。")])]),a._v(" "),s("p",[s("strong",[a._v("优化建议：")])]),a._v(" "),s("ol",[s("li",[a._v("SQL 中，可以在 WHERE 子句和 ORDER BY 子句中使用索引，目的是在 WHERE 子句中 "),s("code",[a._v("避免全表扫描")]),a._v(" ，在 ORDER BY 子句 "),s("code",[a._v("避免使用 FileSort 排序")]),a._v(" 。当然，某些情况下全表扫描，或者 FileSort 排序不一定比索引慢。但总的来说，我们还是要避免，以提高查询效率。")]),a._v(" "),s("li",[a._v("尽量使用 Index 完成 ORDER BY 排序。如果 WHERE 和 ORDER BY 后面是相同的列就使用单索引列； 如果不同就使用联合索引。")]),a._v(" "),s("li",[a._v("无法使用 Index 时，需要对 FileSort 方式进行调优。")])]),a._v(" "),s("h3",{attrs:{id:"_5-2-测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-测试"}},[a._v("#")]),a._v(" 5.2 测试")]),a._v(" "),s("p",[a._v("删除student表和class表中已创建的索引。")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# 方式1\nDROP INDEX idx_monitor ON class;\nDROP INDEX idx_cid ON student;\nDROP INDEX idx_age ON student;\nDROP INDEX idx_name ON student;\nDROP INDEX idx_age_name_classId ON student;\nDROP INDEX idx_age_classId_name ON student;\n\n# 方式2\ncall proc_drop_index('atguigudb2','student';)\n")])])]),s("p",[a._v("以下是否能使用到索引，"),s("code",[a._v("能否去掉using filesort")])]),a._v(" "),s("p",[s("strong",[a._v("过程一：")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705215436102.png",alt:"image-20220705215436102"}})]),a._v(" "),s("p",[s("strong",[a._v("过程二： order by 时不limit,索引失效")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705215909350.png",alt:"image-20220705215909350"}})]),a._v(" "),s("p",[s("strong",[a._v("过程三：order by 时顺序错误，索引失效")])]),a._v(" "),s("img",{staticStyle:{zoom:"80%",float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705220033520.png",alt:"image-20220705220033520"}}),a._v(" "),s("p",[s("strong",[a._v("过程四：order by 时规则不一致，索引失效（顺序错，不索引；方向反，不索引）")])]),a._v(" "),s("img",{staticStyle:{zoom:"80%",float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705220404802.png",alt:"image-20220705220404802"}}),a._v(" "),s("blockquote",[s("p",[a._v("结论：ORDER BY 子句，尽量使用 Index 方式排序，避免使用 FileSort 方式排序")])]),a._v(" "),s("p",[s("strong",[a._v("过程五：无过滤，不索引")])]),a._v(" "),s("img",{staticStyle:{zoom:"80%",float:"left"},attrs:{src:"D:/学习资料/MySQL/StudyNotes/MySQL高级篇/MySQL索引及调优篇.assets/image-20220705221212879.png",alt:"image-20220705221212879"}}),a._v(" "),s("p",[s("strong",[a._v("小结")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("INDEX a_b_c(a,b,c)\norder by 能使用索引最左前缀\n- ORDER BY a\n- ORDER BY a,b\n- ORDER BY a,b,c\n- ORDER BY a DESC,b DESC,c DESC\n如果WHERE使用索引的最左前缀定义为常量，则order by 能使用索引\n- WHERE a = const ORDER BY b,c\n- WHERE a = const AND b = const ORDER BY c\n- WHERE a = const ORDER BY b,c\n- WHERE a = const AND b > const ORDER BY b,c\n不能使用索引进行排序\n- ORDER BY a ASC,b DESC,c DESC /* 排序不一致 */\n- WHERE g = const ORDER BY b,c /*丢失a索引*/\n- WHERE a = const ORDER BY c /*丢失b索引*/\n- WHERE a = const ORDER BY a,d /*d不是索引的一部分*/\n- WHERE a in (...) ORDER BY b,c /*对于排序来说，多个相等条件也是范围查询*/\n")])])]),s("h3",{attrs:{id:"_5-3-案例实战"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-案例实战"}},[a._v("#")]),a._v(" 5.3 案例实战")]),a._v(" "),s("p",[a._v("ORDER BY子句，尽量使用Index方式排序，避免使用FileSort方式排序。")]),a._v(" "),s("p",[a._v("执行案例前先清除student上的索引，只留主键：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("DROP INDEX idx_age ON student;\nDROP INDEX idx_age_classid_stuno ON student;\nDROP INDEX idx_age_classid_name ON student;\n\n#或者\ncall proc_drop_index('atguigudb2','student');\n")])])]),s("p",[s("strong",[a._v("场景:查询年龄为30岁的，且学生编号小于101000的学生，按用户名称排序")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE age = 30 AND stuno <101000 ORDER BY NAME ;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705222027812.png",alt:"image-20220705222027812"}})]),a._v(" "),s("p",[a._v("查询结果如下：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> SELECT SQL_NO_CACHE * FROM student WHERE age = 30 AND stuno <101000 ORDER BY NAME;\n+---------+--------+--------+------+---------+\n| id      | stuno  |  name  | age  | classId |\n+---------+--------+--------+------+---------+\n| 922     | 100923 | elTLXD | 30   | 249     |\n| 3723263 | 100412 | hKcjLb | 30   | 59      |\n| 3724152 | 100827 | iHLJmh | 30   | 387     |\n| 3724030 | 100776 | LgxWoD | 30   | 253     |\n| 30      | 100031 | LZMOIa | 30   | 97      |\n| 3722887 | 100237 | QzbJdx | 30   | 440     |\n| 609     | 100610 | vbRimN | 30   | 481     |\n| 139     | 100140 | ZqFbuR | 30   | 351     |\n+---------+--------+--------+------+---------+\n8 rows in set, 1 warning (3.16 sec)\n")])])]),s("blockquote",[s("p",[a._v("结论：type 是 ALL，即最坏的情况。Extra 里还出现了 Using filesort,也是最坏的情况。优化是必须的。")])]),a._v(" "),s("p",[s("strong",[a._v("方案一: 为了去掉filesort我们可以把索引建成")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("#创建新索引\nCREATE INDEX idx_age_name ON student(age,NAME);\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE age = 30 AND stuno <101000 ORDER BY NAME;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705222912521.png",alt:"image-20220705222912521"}})]),a._v(" "),s("p",[a._v("这样我们优化掉了 using filesort")]),a._v(" "),s("p",[a._v("查询结果如下：")]),a._v(" "),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705222954971.png",alt:"image-20220705222954971"}}),a._v(" "),s("p",[s("strong",[a._v("方案二：尽量让where的过滤条件和排序使用上索引")])]),a._v(" "),s("p",[a._v("建一个三个字段的组合索引：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("DROP INDEX idx_age_name ON student;\nCREATE INDEX idx_age_stuno_name ON student (age,stuno,NAME);\nEXPLAIN SELECT SQL_NO_CACHE * FROM student WHERE age = 30 AND stuno <101000 ORDER BY NAME;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705223111883.png",alt:"image-20220705223111883"}})]),a._v(" "),s("p",[a._v("我们发现using filesort依然存在，所以name并没有用到索引，而且type还是range光看名字其实并不美好。原因是，因为"),s("code",[a._v("stuno是一个范围过滤")]),a._v("，所以索引后面的字段不会在使用索引了 。")]),a._v(" "),s("p",[a._v("结果如下：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> SELECT SQL_NO_CACHE * FROM student\n-> WHERE age = 30 AND stuno <101000 ORDER BY NAME ;\n+-----+--------+--------+------+---------+\n| id | stuno | name | age | classId |\n+-----+--------+--------+------+---------+\n| 167 | 100168 | AClxEF | 30 | 319 |\n| 323 | 100324 | bwbTpQ | 30 | 654 |\n| 651 | 100652 | DRwIac | 30 | 997 |\n| 517 | 100518 | HNSYqJ | 30 | 256 |\n| 344 | 100345 | JuepiX | 30 | 329 |\n| 905 | 100906 | JuWALd | 30 | 892 |\n| 574 | 100575 | kbyqjX | 30 | 260 |\n| 703 | 100704 | KJbprS | 30 | 594 |\n| 723 | 100724 | OTdJkY | 30 | 236 |\n| 656 | 100657 | Pfgqmj | 30 | 600 |\n| 982 | 100983 | qywLqw | 30 | 837 |\n| 468 | 100469 | sLEKQW | 30 | 346 |\n| 988 | 100989 | UBYqJl | 30 | 457 |\n| 173 | 100174 | UltkTN | 30 | 830 |\n| 332 | 100333 | YjWiZw | 30 | 824 |\n+-----+--------+--------+------+---------+\n15 rows in set, 1 warning (0.00 sec)\n")])])]),s("p",[a._v("结果竟然有 filesort的 sql 运行速度， 超过了已经优化掉 filesort的 sql ，而且快了很多，几乎一瞬间就出现了结果。")]),a._v(" "),s("p",[a._v("原因：")]),a._v(" "),s("img",{staticStyle:{zoom:"80%",float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705223329164.png",alt:"image-20220705223329164"}}),a._v(" "),s("blockquote",[s("p",[a._v("结论：")]),a._v(" "),s("ol",[s("li",[a._v("两个索引同时存在，mysql自动选择最优的方案。（对于这个例子，mysql选择 idx_age_stuno_name）。但是， "),s("code",[a._v("随着数据量的变化，选择的索引也会随之变化的")]),a._v("。")]),a._v(" "),s("li",[s("strong",[a._v("当【范围条件】和【group by 或者 order by】的字段出现二选一时，优先观察条件字段的过 滤数量，如果过滤的数据足够多，而需要排序的数据并不多时，优先把索引放在范围字段上。反之，亦然。")])])])]),a._v(" "),s("p",[a._v("思考：这里我们使用如下索引，是否可行？")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("DROP INDEX idx_age_stuno_name ON student;\n\nCREATE INDEX idx_age_stuno ON student(age,stuno);\n")])])]),s("p",[a._v("当然可以。")]),a._v(" "),s("h3",{attrs:{id:"_5-4-filesort算法-双路排序和单路排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-filesort算法-双路排序和单路排序"}},[a._v("#")]),a._v(" 5.4 filesort算法：双路排序和单路排序")]),a._v(" "),s("p",[a._v("排序的字段若不在索引列上，则filesort会有两种算法：双路排序和单路排序")]),a._v(" "),s("p",[s("strong",[a._v("双路排序 （慢）")])]),a._v(" "),s("ul",[s("li",[a._v("MySQL 4.1之前是使用双路排序 ，字面意思就是两次扫描磁盘，最终得到数据， 读取行指针和 order by列 ，对他们进行排序，然后扫描已经排序好的列表，按照列表中的值重新从列表中读取对应的数据输出")]),a._v(" "),s("li",[a._v("从磁盘取排序字段，在buffer进行排序，再从磁盘取其他字段 。")])]),a._v(" "),s("p",[a._v("取一批数据，要对磁盘进行两次扫描，众所周知，IO是很耗时的，所以在mysql4.1之后，出现了第二种 改进的算法，就是单路排序。")]),a._v(" "),s("p",[s("strong",[a._v("单路排序 （快）")])]),a._v(" "),s("p",[a._v("从磁盘读取查询需要的 所有列 ，按照order by列在buffer对它们进行排序，然后扫描排序后的列表进行输出， 它的效率更快一些，避免了第二次读取数据。并且把随机IO变成了顺序IO，但是它会使用更多的空间， 因为它把每一行都保存在内存中了。")]),a._v(" "),s("p",[s("strong",[a._v("结论及引申出的问题")])]),a._v(" "),s("ul",[s("li",[a._v("由于单路是后出的，总体而言好过双路")]),a._v(" "),s("li",[a._v("但是用单路有问题\n"),s("ul",[s("li",[a._v("在sort_buffer中，单路要比多路多占用很多空间，因为单路是把所有字段都取出，所以有可能取出的数据的总大小超出了"),s("code",[a._v("sort_buffer")]),a._v("的容量，导致每次只能取"),s("code",[a._v("sort_buffer")]),a._v("容量大小的数据，进行排序（创建tmp文件，多路合并），排完再取sort_buffer容量大小，再排...从而多次I/O。")]),a._v(" "),s("li",[a._v("单路本来想省一次I/O操作，反而导致了大量的I/O操作，反而得不偿失。")])])])]),a._v(" "),s("p",[s("strong",[a._v("优化策略")])]),a._v(" "),s("p",[s("strong",[a._v("1. 尝试提高 sort_buffer_size")])]),a._v(" "),s("img",{staticStyle:{zoom:"80%",float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705224410340.png",alt:"image-20220705224410340"}}),a._v(" "),s("p",[s("strong",[a._v("2. 尝试提高 max_length_for_sort_data")])]),a._v(" "),s("img",{staticStyle:{zoom:"80%",float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705224505668.png",alt:"image-20220705224505668"}}),a._v(" "),s("p",[s("strong",[a._v("3. Order by 时select * 是一个大忌。最好只Query需要的字段。")])]),a._v(" "),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705224551104.png",alt:"image-20220705224551104"}}),a._v(" "),s("h2",{attrs:{id:"_6-group-by优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-group-by优化"}},[a._v("#")]),a._v(" 6. GROUP BY优化")]),a._v(" "),s("ul",[s("li",[a._v("group by 使用索引的原则几乎跟order by一致 ，group by 即使没有过滤条件用到索引，也可以直接使用索引。")]),a._v(" "),s("li",[a._v("group by 先排序再分组，遵照索引建的最佳左前缀法则")]),a._v(" "),s("li",[a._v("当无法使用索引列，增大 max_length_for_sort_data 和 sort_buffer_size 参数的设置")]),a._v(" "),s("li",[a._v("where效率高于having，能写在where限定的条件就不要写在having中了")]),a._v(" "),s("li",[a._v("减少使用order by，和业务沟通能不排序就不排序，或将排序放到程序端去做。Order by、group by、distinct这些语句较为耗费CPU，数据库的CPU资源是极其宝贵的。")]),a._v(" "),s("li",[a._v("包含了order by、group by、distinct这些查询的语句，where条件过滤出来的结果集请保持在1000行 以内，否则SQL会很慢。")])]),a._v(" "),s("h2",{attrs:{id:"_7-优化分页查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-优化分页查询"}},[a._v("#")]),a._v(" 7. 优化分页查询")]),a._v(" "),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705225329130.png",alt:"image-20220705225329130"}}),a._v(" "),s("p",[s("strong",[a._v("优化思路一")])]),a._v(" "),s("p",[a._v("在索引上完成排序分页操作，最后根据主键关联回原表查询所需要的其他列内容。")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT * FROM student t,(SELECT id FROM student ORDER BY id LIMIT 2000000,10) a WHERE t.id = a.id;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705225625166.png",alt:"image-20220705225625166"}})]),a._v(" "),s("p",[s("strong",[a._v("优化思路二")])]),a._v(" "),s("p",[a._v("该方案适用于主键自增的表，可以把Limit 查询转换成某个位置的查询 。")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT * FROM student WHERE id > 2000000 LIMIT 10;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220705225654124.png",alt:"image-20220705225654124"}})]),a._v(" "),s("h2",{attrs:{id:"_8-优先考虑覆盖索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-优先考虑覆盖索引"}},[a._v("#")]),a._v(" 8. 优先考虑覆盖索引")]),a._v(" "),s("h3",{attrs:{id:"_8-1-什么是覆盖索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-什么是覆盖索引"}},[a._v("#")]),a._v(" 8.1 什么是覆盖索引？")]),a._v(" "),s("p",[s("strong",[a._v("理解方式一")]),a._v("：索引是高效找到行的一个方法，但是一般数据库也能使用索引找到一个列的数据，因此它不必读取整个行。毕竟索引叶子节点存储了它们索引的数据；当能通过读取索引就可以得到想要的数据，那就不需要读取行了。"),s("strong",[a._v("一个索引包含了满足查询结果的数据就叫做覆盖索引")]),a._v("。")]),a._v(" "),s("p",[s("strong",[a._v("理解方式二")]),a._v("：非聚簇复合索引的一种形式，它包括在查询里的SELECT、JOIN和WHERE子句用到的所有列 （即建索引的字段正好是覆盖查询条件中所涉及的字段）。")]),a._v(" "),s("p",[a._v("简单说就是， "),s("code",[a._v("索引列+主键")]),a._v(" 包含 "),s("code",[a._v("SELECT 到 FROM之间查询的列")]),a._v(" 。")]),a._v(" "),s("p",[s("strong",[a._v("举例一：")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# 删除之前的索引\nDROP INDEX idx_age_stuno ON student;\nCREATE INDEX idx_age_name ON student(age, NAME);\nEXPLAIN SELECT * FROM student WHERE age <> 20;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220706124528680.png",alt:"image-20220706124528680"}})]),a._v(" "),s("p",[s("strong",[a._v("举例二：")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT * FROM student WHERE NAME LIKE '%abc';\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220706124612180.png",alt:"image-20220706124612180"}})]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("CREATE INDEX idx_age_name ON student(age, NAME);\nEXPLAIN SELECT id,age,NAME FROM student WHERE NAME LIKE '%abc';\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220706125113658.png",alt:"image-20220706125113658"}})]),a._v(" "),s("p",[a._v("上述都使用到了声明的索引，下面的情况则不然，查询列依然多了classId,结果是未使用到索引：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("EXPLAIN SELECT id,age,NAME,classId FROM student WHERE NAME LIKE '%abc';\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220706125351116.png",alt:"image-20220706125351116"}})]),a._v(" "),s("h3",{attrs:{id:"_8-2-覆盖索引的利弊"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-覆盖索引的利弊"}},[a._v("#")]),a._v(" 8.2 覆盖索引的利弊")]),a._v(" "),s("img",{staticStyle:{zoom:"80%",float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220706125943936.png",alt:"image-20220706125943936"}}),a._v(" "),s("h2",{attrs:{id:"_9-如何给字符串添加索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-如何给字符串添加索引"}},[a._v("#")]),a._v(" 9. 如何给字符串添加索引")]),a._v(" "),s("p",[a._v("有一张教师表，表定义如下：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("create table teacher(\nID bigint unsigned primary key,\nemail varchar(64),\n...\n)engine=innodb;\n")])])]),s("p",[a._v("讲师要使用邮箱登录，所以业务代码中一定会出现类似于这样的语句：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> select col1, col2 from teacher where email='xxx';\n")])])]),s("p",[a._v("如果email这个字段上没有索引，那么这个语句就只能做 "),s("code",[a._v("全表扫描")]),a._v(" 。")]),a._v(" "),s("h3",{attrs:{id:"_9-1-前缀索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-前缀索引"}},[a._v("#")]),a._v(" 9.1 前缀索引")]),a._v(" "),s("p",[a._v("MySQL是支持前缀索引的。默认地，如果你创建索引的语句不指定前缀长度，那么索引就会包含整个字 符串。")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> alter table teacher add index index1(email);\n#或\nmysql> alter table teacher add index index2(email(6));\n")])])]),s("p",[a._v("这两种不同的定义在数据结构和存储上有什么区别呢？下图就是这两个索引的示意图。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220706130901307.png",alt:"image-20220706130901307"}})]),a._v(" "),s("p",[a._v("以及")]),a._v(" "),s("img",{staticStyle:{zoom:"70%"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220706130921934.png",alt:"image-20220706130921934"}}),a._v(" "),s("p",[s("strong",[a._v("如果使用的是index1")]),a._v("（即email整个字符串的索引结构），执行顺序是这样的：")]),a._v(" "),s("ol",[s("li",[a._v("从index1索引树找到满足索引值是’ zhangssxyz@xxx.com’的这条记录，取得ID2的值；")]),a._v(" "),s("li",[a._v("到主键上查到主键值是ID2的行，判断email的值是正确的，将这行记录加入结果集；")]),a._v(" "),s("li",[a._v("取index1索引树上刚刚查到的位置的下一条记录，发现已经不满足email=' zhangssxyz@xxx.com ’的 条件了，循环结束。")])]),a._v(" "),s("p",[a._v("这个过程中，只需要回主键索引取一次数据，所以系统认为只扫描了一行。")]),a._v(" "),s("p",[s("strong",[a._v("如果使用的是index2")]),a._v("（即email(6)索引结构），执行顺序是这样的：")]),a._v(" "),s("ol",[s("li",[a._v("从index2索引树找到满足索引值是’zhangs’的记录，找到的第一个是ID1；")]),a._v(" "),s("li",[a._v("到主键上查到主键值是ID1的行，判断出email的值不是’ zhangssxyz@xxx.com ’，这行记录丢弃；")]),a._v(" "),s("li",[a._v("取index2上刚刚查到的位置的下一条记录，发现仍然是’zhangs’，取出ID2，再到ID索引上取整行然 后判断，这次值对了，将这行记录加入结果集；")]),a._v(" "),s("li",[a._v("重复上一步，直到在idxe2上取到的值不是’zhangs’时，循环结束。")])]),a._v(" "),s("p",[a._v("也就是说**使用前缀索引，定义好长度，就可以做到既节省空间，又不用额外增加太多的查询成本。**前面 已经讲过区分度，区分度越高越好。因为区分度越高，意味着重复的键值越少。")]),a._v(" "),s("h3",{attrs:{id:"_9-2-前缀索引对覆盖索引的影响"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-前缀索引对覆盖索引的影响"}},[a._v("#")]),a._v(" 9.2 前缀索引对覆盖索引的影响")]),a._v(" "),s("blockquote",[s("p",[a._v("结论： 使用前缀索引就用不上覆盖索引对查询性能的优化了，这也是你在选择是否使用前缀索引时需要考虑的一个因素。")])]),a._v(" "),s("h2",{attrs:{id:"_10-索引下推"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-索引下推"}},[a._v("#")]),a._v(" 10. 索引下推")]),a._v(" "),s("h3",{attrs:{id:"_10-1-使用前后对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-使用前后对比"}},[a._v("#")]),a._v(" 10.1 使用前后对比")]),a._v(" "),s("p",[a._v("Index Condition Pushdown(ICP)是MySQL 5.6中新特性，是一种在存储引擎层使用索引过滤数据的一种优化方式。")]),a._v(" "),s("img",{staticStyle:{zoom:"80%",float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220706131320477.png",alt:"image-20220706131320477"}}),a._v(" "),s("h3",{attrs:{id:"_10-2-icp的开启-关闭"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-icp的开启-关闭"}},[a._v("#")]),a._v(" 10.2 ICP的开启/关闭")]),a._v(" "),s("ul",[s("li",[a._v("默认情况下启动索引条件下推。可以通过设置系统变量"),s("code",[a._v("optimizer_switch")]),a._v("控制："),s("code",[a._v("index_condition_pushdown")])])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# 打开索引下推\nSET optimizer_switch = 'index_condition_pushdown=on';\n\n# 关闭索引下推\nSET optimizer_switch = 'index_condition_pushdown=off';\n")])])]),s("ul",[s("li",[a._v("当使用索引条件下推是，"),s("code",[a._v("EXPLAIN")]),a._v("语句输出结果中"),s("code",[a._v("Extra")]),a._v("列内容显示为"),s("code",[a._v("Using index condition")]),a._v("。")])]),a._v(" "),s("h3",{attrs:{id:"_10-3-icp使用案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-icp使用案例"}},[a._v("#")]),a._v(" 10.3 ICP使用案例")]),a._v(" "),s("img",{staticStyle:{zoom:"80%",float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220706135436316.png",alt:"image-20220706135436316"}}),a._v(" "),s("img",{staticStyle:{zoom:"80%",float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220706135506409.png",alt:"image-20220706135506409"}}),a._v(" "),s("ul",[s("li",[a._v("主键索引 (简图)")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220706135633814.png",alt:"image-20220706135633814"}})]),a._v(" "),s("p",[a._v("二级索引zip_last_first (简图，这里省略了数据页等信息)")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220706135701187.png",alt:"image-20220706135701187"}})]),a._v(" "),s("img",{staticStyle:{zoom:"80%",float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220706135723203.png",alt:"image-20220706135723203"}}),a._v(" "),s("h3",{attrs:{id:"_10-4-开启和关闭icp性能对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-4-开启和关闭icp性能对比"}},[a._v("#")]),a._v(" 10.4 开启和关闭ICP性能对比")]),a._v(" "),s("img",{staticStyle:{zoom:"80%",float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220706135904713.png",alt:"image-20220706135904713"}}),a._v(" "),s("img",{staticStyle:{zoom:"80%",float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220706140213382.png",alt:"image-20220706140213382"}}),a._v(" "),s("h3",{attrs:{id:"_10-5-icp的使用条件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-5-icp的使用条件"}},[a._v("#")]),a._v(" 10.5 ICP的使用条件")]),a._v(" "),s("ol",[s("li",[a._v("如果表的访问类型为 range 、 ref 、 eq_ref 或者 ref_or_null 可以使用ICP。")]),a._v(" "),s("li",[a._v("ICP可以使用"),s("code",[a._v("InnDB")]),a._v("和"),s("code",[a._v("MyISAM")]),a._v("表，包括分区表"),s("code",[a._v("InnoDB")]),a._v("和"),s("code",[a._v("MyISAM")]),a._v("表")]),a._v(" "),s("li",[a._v("对于"),s("code",[a._v("InnoDB")]),a._v("表，ICP仅用于"),s("code",[a._v("二级索引")]),a._v("。ICP的目标是减少全行读取次数，从而减少I/O操作。")]),a._v(" "),s("li",[a._v("当SQL使用覆盖索引时，不支持ICP优化方法。因为这种情况下使用ICP不会减少I/O。")]),a._v(" "),s("li",[a._v("相关子查询的条件不能使用ICP")])]),a._v(" "),s("h2",{attrs:{id:"_11-普通索引-vs-唯一索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-普通索引-vs-唯一索引"}},[a._v("#")]),a._v(" 11. 普通索引 vs 唯一索引")]),a._v(" "),s("p",[a._v("从性能的角度考虑，你选择唯一索引还是普通索引呢？选择的依据是什么呢？")]),a._v(" "),s("p",[a._v("假设，我们有一个主键列为ID的表，表中有字段k，并且在k上有索引，假设字段 k 上的值都不重复。")]),a._v(" "),s("p",[a._v("这个表的建表语句是：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> create table test(\nid int primary key,\nk int not null,\nname varchar(16),\nindex (k)\n)engine=InnoDB;\n")])])]),s("p",[a._v("表中R1~R5的(ID,k)值分别为(100,1)、(200,2)、(300,3)、(500,5)和(600,6)。")]),a._v(" "),s("h3",{attrs:{id:"_11-1-查询过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-查询过程"}},[a._v("#")]),a._v(" 11.1 查询过程")]),a._v(" "),s("p",[a._v("假设，执行查询的语句是 select id from test where k=5。")]),a._v(" "),s("ul",[s("li",[a._v("对于普通索引来说，查找到满足条件的第一个记录(5,500)后，需要查找下一个记录，直到碰到第一 个不满足k=5条件的记录。")]),a._v(" "),s("li",[a._v("对于唯一索引来说，由于索引定义了唯一性，查找到第一个满足条件的记录后，就会停止继续检 索。")])]),a._v(" "),s("p",[a._v("那么，这个不同带来的性能差距会有多少呢？答案是， 微乎其微 。")]),a._v(" "),s("h3",{attrs:{id:"_11-2-更新过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-更新过程"}},[a._v("#")]),a._v(" 11.2 更新过程")]),a._v(" "),s("p",[a._v("为了说明普通索引和唯一索引对更新语句性能的影响这个问题，介绍一下change buffer。")]),a._v(" "),s("p",[a._v("当需要更新一个数据页时，如果数据页在内存中就直接更新，而如果这个数据页还没有在内存中的话， 在不影响数据一致性的前提下， "),s("code",[a._v("InooDB会将这些更新操作缓存在change buffer中")]),a._v(" ，这样就不需要从磁盘中读入这个数据页了。在下次查询需要访问这个数据页的时候，将数据页读入内存，然后执行change buffer中与这个页有关的操作。通过这种方式就能保证这个数据逻辑的正确性。")]),a._v(" "),s("p",[a._v("将change buffer中的操作应用到原数据页，得到最新结果的过程称为 merge 。除了 "),s("code",[a._v("访问这个数据页")]),a._v(" 会触 发merge外，系统有 "),s("code",[a._v("后台线程会定期")]),a._v(" merge。在 "),s("code",[a._v("数据库正常关闭（shutdown）")]),a._v(" 的过程中，也会执行merge 操作。")]),a._v(" "),s("p",[a._v("如果能够将更新操作先记录在change buffer， "),s("code",[a._v("减少读磁盘")]),a._v(" ，语句的执行速度会得到明显的提升。而且， 数据读入内存是需要占用 buffer pool 的，所以这种方式还能够 "),s("code",[a._v("避免占用内存")]),a._v("，提高内存利用率。")]),a._v(" "),s("p",[s("code",[a._v("唯一索引的更新就不能使用change buffer")]),a._v(" ，实际上也只有普通索引可以使用。")]),a._v(" "),s("p",[a._v("如果要在这张表中插入一个新记录(4,400)的话，InnoDB的处理流程是怎样的？")]),a._v(" "),s("h3",{attrs:{id:"_11-3-change-buffer的使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-change-buffer的使用场景"}},[a._v("#")]),a._v(" 11.3 change buffer的使用场景")]),a._v(" "),s("ol",[s("li",[a._v("普通索引和唯一索引应该怎么选择？其实，这两类索引在查询能力上是没差别的，主要考虑的是 对 更新性能 的影响。所以，建议你 尽量选择普通索引 。")]),a._v(" "),s("li",[a._v("在实际使用中会发现， 普通索引 和 change buffer 的配合使用，对于 数据量大 的表的更新优化 还是很明显的。")]),a._v(" "),s("li",[a._v("如果所有的更新后面，都马上 伴随着对这个记录的查询 ，那么你应该 关闭change buffer 。而在 其他情况下，change buffer都能提升更新性能。")]),a._v(" "),s("li",[a._v('由于唯一索引用不上change buffer的优化机制，因此如果 业务可以接受 ，从性能角度出发建议优 先考虑非唯一索引。但是如果"业务可能无法确保"的情况下，怎么处理呢？\n'),s("ul",[s("li",[a._v("首先， 业务正确性优先 。我们的前提是“业务代码已经保证不会写入重复数据”的情况下，讨论性能 问题。如果业务不能保证，或者业务就是要求数据库来做约束，那么没得选，必须创建唯一索引。 这种情况下，本节的意义在于，如果碰上了大量插入数据慢、内存命中率低的时候，给你多提供一 个排查思路。")]),a._v(" "),s("li",[a._v("然后，在一些“ 归档库 ”的场景，你是可以考虑使用唯一索引的。比如，线上数据只需要保留半年， 然后历史数据保存在归档库。这时候，归档数据已经是确保没有唯一键冲突了。要提高归档效率， 可以考虑把表里面的唯一索引改成普通索引。")])])])]),a._v(" "),s("h2",{attrs:{id:"_12-其它查询优化策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-其它查询优化策略"}},[a._v("#")]),a._v(" 12. 其它查询优化策略")]),a._v(" "),s("h3",{attrs:{id:"_12-1-exists-和-in-的区分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-exists-和-in-的区分"}},[a._v("#")]),a._v(" 12.1 EXISTS 和 IN 的区分")]),a._v(" "),s("p",[s("strong",[a._v("问题：")])]),a._v(" "),s("p",[a._v("不太理解哪种情况下应该使用 EXISTS，哪种情况应该用 IN。选择的标准是看能否使用表的索引吗？")]),a._v(" "),s("p",[s("strong",[a._v("回答：")])]),a._v(" "),s("img",{staticStyle:{zoom:"80%",float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220706141957185.png",alt:"image-20220706141957185"}}),a._v(" "),s("h3",{attrs:{id:"_12-2-count-与count-具体字段-效率"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-count-与count-具体字段-效率"}},[a._v("#")]),a._v(" 12.2 COUNT(*)与COUNT(具体字段)效率")]),a._v(" "),s("p",[a._v("问：在 MySQL 中统计数据表的行数，可以使用三种方式： SELECT COUNT(*) 、 SELECT COUNT(1) 和 SELECT COUNT(具体字段) ，使用这三者之间的查询效率是怎样的？")]),a._v(" "),s("p",[a._v("答：")]),a._v(" "),s("img",{staticStyle:{zoom:"80%",float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220706142648452.png",alt:"image-20220706142648452"}}),a._v(" "),s("h3",{attrs:{id:"_12-3-关于select"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-3-关于select"}},[a._v("#")]),a._v(" 12.3 关于SELECT(*)")]),a._v(" "),s("p",[a._v("在表查询中，建议明确字段，不要使用 * 作为查询的字段列表，推荐使用SELECT <字段列表> 查询。原因：")]),a._v(" "),s("p",[a._v('① MySQL 在解析的过程中，会通过查询数据字典 将"*"按序转换成所有列名，这会大大的耗费资源和时间。')]),a._v(" "),s("p",[a._v("② 无法使用 覆盖索引")]),a._v(" "),s("h3",{attrs:{id:"_12-4-limit-1-对优化的影响"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-4-limit-1-对优化的影响"}},[a._v("#")]),a._v(" 12.4 LIMIT 1 对优化的影响")]),a._v(" "),s("p",[a._v("针对的是会扫描全表的 SQL 语句，如果你可以确定结果集只有一条，那么加上 LIMIT 1 的时候，当找到一条结果的时候就不会继续扫描了，这样会加快查询速度。")]),a._v(" "),s("p",[a._v("如果数据表已经对字段建立了唯一索引，那么可以通过索引进行查询，不会全表扫描的话，就不需要加上 LIMIT 1 了。")]),a._v(" "),s("h3",{attrs:{id:"_12-5-多使用commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-5-多使用commit"}},[a._v("#")]),a._v(" 12.5 多使用COMMIT")]),a._v(" "),s("p",[a._v("只要有可能，在程序中尽量多使用 COMMIT，这样程序的性能得到提高，需求也会因为 COMMIT 所释放 的资源而减少。")]),a._v(" "),s("p",[a._v("COMMIT 所释放的资源：")]),a._v(" "),s("ul",[s("li",[a._v("回滚段上用于恢复数据的信息")]),a._v(" "),s("li",[a._v("被程序语句获得的锁")]),a._v(" "),s("li",[a._v("redo / undo log buffer 中的空间")]),a._v(" "),s("li",[a._v("管理上述 3 种资源中的内部花费")])]),a._v(" "),s("h2",{attrs:{id:"_13-淘宝数据库-主键如何设计的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-淘宝数据库-主键如何设计的"}},[a._v("#")]),a._v(" 13. 淘宝数据库，主键如何设计的？")]),a._v(" "),s("p",[a._v("聊一个实际问题：淘宝的数据库，主键是如何设计的？")]),a._v(" "),s("p",[a._v("某些错的离谱的答案还在网上年复一年的流传着，甚至还成为了所谓的MySQL军规。其中，一个最明显的错误就是关于MySQL的主键设计。")]),a._v(" "),s("p",[a._v("大部分人的回答如此自信：用8字节的 BIGINT 做主键，而不要用INT。 "),s("code",[a._v("错")]),a._v("！")]),a._v(" "),s("p",[a._v("这样的回答，只站在了数据库这一层，而没有 "),s("code",[a._v("从业务的角度")]),a._v(" 思考主键。主键就是一个自增ID吗？站在 2022年的新年档口，用自增做主键，架构设计上可能 "),s("code",[a._v("连及格都拿不到")]),a._v(" 。")]),a._v(" "),s("h3",{attrs:{id:"_13-1-自增id的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-自增id的问题"}},[a._v("#")]),a._v(" 13.1 自增ID的问题")]),a._v(" "),s("p",[a._v("自增ID做主键，简单易懂，几乎所有数据库都支持自增类型，只是实现上各自有所不同而已。自增ID除 了简单，其他都是缺点，总体来看存在以下几方面的问题：")]),a._v(" "),s("ol",[s("li",[s("p",[s("strong",[a._v("可靠性不高")])]),a._v(" "),s("p",[a._v("存在自增ID回溯的问题，这个问题直到最新版本的MySQL 8.0才修复。")])]),a._v(" "),s("li",[s("p",[a._v("**安全性不高 **")]),a._v(" "),s("p",[a._v("对外暴露的接口可以非常容易猜测对应的信息。比如：/User/1/这样的接口，可以非常容易猜测用户ID的 值为多少，总用户数量有多少，也可以非常容易地通过接口进行数据的爬取。")])]),a._v(" "),s("li",[s("p",[s("strong",[a._v("性能差")])]),a._v(" "),s("p",[a._v("自增ID的性能较差，需要在数据库服务器端生成。")])]),a._v(" "),s("li",[s("p",[s("strong",[a._v("交互多")])]),a._v(" "),s("p",[a._v("业务还需要额外执行一次类似 last_insert_id() 的函数才能知道刚才插入的自增值，这需要多一次的 网络交互。在海量并发的系统中，多1条SQL，就多一次性能上的开销。")])]),a._v(" "),s("li",[s("p",[a._v("**局部唯一性 **")]),a._v(" "),s("p",[a._v("最重要的一点，自增ID是局部唯一，只在当前数据库实例中唯一，而不是全局唯一，在任意服务器间都 是唯一的。对于目前分布式系统来说，这简直就是噩梦。")])])]),a._v(" "),s("h3",{attrs:{id:"_13-2-业务字段做主键"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-业务字段做主键"}},[a._v("#")]),a._v(" 13.2 业务字段做主键")]),a._v(" "),s("p",[a._v("为了能够唯一地标识一个会员的信息，需要为 会员信息表 设置一个主键。那么，怎么为这个表设置主 键，才能达到我们理想的目标呢？ 这里我们考虑业务字段做主键。")]),a._v(" "),s("p",[a._v("表数据如下：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220706151506580.png",alt:"image-20220706151506580"}})]),a._v(" "),s("p",[a._v("在这个表里，哪个字段比较合适呢？")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("选择卡号（cardno）")])])]),a._v(" "),s("p",[a._v("会员卡号（cardno）看起来比较合适，因为会员卡号不能为空，而且有唯一性，可以用来 标识一条会员 记录。")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> CREATE TABLE demo.membermaster\n-> (\n-> cardno CHAR(8) PRIMARY KEY, -- 会员卡号为主键\n-> membername TEXT,\n-> memberphone TEXT,\n-> memberpid TEXT,\n-> memberaddress TEXT,\n-> sex TEXT,\n-> birthday DATETIME\n-> );\nQuery OK, 0 rows affected (0.06 sec)\n")])])]),s("p",[a._v("不同的会员卡号对应不同的会员，字段“cardno”唯一地标识某一个会员。如果都是这样，会员卡号与会 员一一对应，系统是可以正常运行的。")]),a._v(" "),s("p",[a._v("但实际情况是， 会员卡号可能存在重复使用 的情况。比如，张三因为工作变动搬离了原来的地址，不再 到商家的门店消费了 （退还了会员卡），于是张三就不再是这个商家门店的会员了。但是，商家不想让 这个会 员卡空着，就把卡号是“10000001”的会员卡发给了王五。")]),a._v(" "),s("p",[a._v("从系统设计的角度看，这个变化只是修改了会员信息表中的卡号是“10000001”这个会员 信息，并不会影 响到数据一致性。也就是说，修改会员卡号是“10000001”的会员信息， 系统的各个模块，都会获取到修 改后的会员信息，不会出现“有的模块获取到修改之前的会员信息，有的模块获取到修改后的会员信息， 而导致系统内部数据不一致”的情况。因此，从 信息系统层面 上看是没问题的。")]),a._v(" "),s("p",[a._v("但是从使用 系统的业务层面 来看，就有很大的问题 了，会对商家造成影响。")]),a._v(" "),s("p",[a._v("比如，我们有一个销售流水表（trans），记录了所有的销售流水明细。2020 年 12 月 01 日，张三在门店 购买了一本书，消费了 89 元。那么，系统中就有了张三买书的流水记录，如下所示：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220706151715106.png",alt:"image-20220706151715106"}})]),a._v(" "),s("p",[a._v("接着，我们查询一下 2020 年 12 月 01 日的会员销售记录：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> SELECT b.membername,c.goodsname,a.quantity,a.salesvalue,a.transdate\n-> FROM demo.trans AS a\n-> JOIN demo.membermaster AS b\n-> JOIN demo.goodsmaster AS c\n-> ON (a.cardno = b.cardno AND a.itemnumber=c.itemnumber);\n+------------+-----------+----------+------------+---------------------+\n| membername | goodsname | quantity | salesvalue | transdate |\n+------------+-----------+----------+------------+---------------------+\n|     张三   | 书         | 1.000    | 89.00      | 2020-12-01 00:00:00 |\n+------------+-----------+----------+------------+---------------------+\n1 row in set (0.00 sec)\n")])])]),s("p",[a._v("如果会员卡“10000001”又发给了王五，我们会更改会员信息表。导致查询时：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> SELECT b.membername,c.goodsname,a.quantity,a.salesvalue,a.transdate\n-> FROM demo.trans AS a\n-> JOIN demo.membermaster AS b\n-> JOIN demo.goodsmaster AS c\n-> ON (a.cardno = b.cardno AND a.itemnumber=c.itemnumber);\n+------------+-----------+----------+------------+---------------------+\n| membername | goodsname | quantity | salesvalue | transdate |\n+------------+-----------+----------+------------+---------------------+\n| 王五        | 书        | 1.000    | 89.00      | 2020-12-01 00:00:00 |\n+------------+-----------+----------+------------+---------------------+\n1 row in set (0.01 sec)\n")])])]),s("p",[a._v("这次得到的结果是：王五在 2020 年 12 月 01 日，买了一本书，消费 89 元。显然是错误的！结论：千万 不能把会员卡号当做主键。")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("选择会员电话 或 身份证号")])])]),a._v(" "),s("p",[a._v("会员电话可以做主键吗？不行的。在实际操作中，手机号也存在 被运营商收回 ，重新发给别人用的情况。")]),a._v(" "),s("p",[a._v("那身份证号行不行呢？好像可以。因为身份证决不会重复，身份证号与一个人存在一一对 应的关系。可 问题是，身份证号属于 个人隐私 ，顾客不一定愿意给你。要是强制要求会员必须登记身份证号，会把很 多客人赶跑的。其实，客户电话也有这个问题，这也是我们在设计会员信息表的时候，允许身份证号和 电话都为空的原因。")]),a._v(" "),s("p",[s("strong",[a._v("所以，建议尽量不要用跟业务有关的字段做主键。毕竟，作为项目设计的技术人员，我们谁也无法预测 在项目的整个生命周期中，哪个业务字段会因为项目的业务需求而有重复，或者重用之类的情况出现。")])]),a._v(" "),s("blockquote",[s("p",[a._v("经验： 刚开始使用 MySQL 时，很多人都很容易犯的错误是喜欢用业务字段做主键，想当然地认为了解业 务需求，但实际情况往往出乎意料，而更改主键设置的成本非常高。")])]),a._v(" "),s("h3",{attrs:{id:"_13-3-淘宝的主键设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-3-淘宝的主键设计"}},[a._v("#")]),a._v(" 13.3 淘宝的主键设计")]),a._v(" "),s("p",[a._v("在淘宝的电商业务中，订单服务是一个核心业务。请问， 订单表的主键 淘宝是如何设计的呢？是自增ID 吗？")]),a._v(" "),s("p",[a._v("打开淘宝，看一下订单信息：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220706161436920.png",alt:"image-20220706161436920"}})]),a._v(" "),s("p",[a._v("从上图可以发现，订单号不是自增ID！我们详细看下上述4个订单号：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("1550672064762308113\n1481195847180308113\n1431156171142308113\n1431146631521308113\n")])])]),s("p",[a._v("订单号是19位的长度，且订单的最后5位都是一样的，都是08113。且订单号的前面14位部分是单调递增的。")]),a._v(" "),s("p",[a._v("大胆猜测，淘宝的订单ID设计应该是：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("订单ID = 时间 + 去重字段 + 用户ID后6位尾号\n")])])]),s("p",[a._v("这样的设计能做到全局唯一，且对分布式系统查询及其友好。")]),a._v(" "),s("h3",{attrs:{id:"_13-4-推荐的主键设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-4-推荐的主键设计"}},[a._v("#")]),a._v(" 13.4 推荐的主键设计")]),a._v(" "),s("p",[s("strong",[a._v("非核心业务")]),a._v(" ：对应表的主键自增ID，如告警、日志、监控等信息。")]),a._v(" "),s("p",[s("strong",[a._v("核心业务")]),a._v(" ："),s("code",[a._v("主键设计至少应该是全局唯一且是单调递增")]),a._v("。全局唯一保证在各系统之间都是唯一的，单调 递增是希望插入时不影响数据库性能。")]),a._v(" "),s("p",[a._v("这里推荐最简单的一种主键设计：UUID。")]),a._v(" "),s("p",[s("strong",[a._v("UUID的特点：")])]),a._v(" "),s("p",[a._v("全局唯一，占用36字节，数据无序，插入性能差。")]),a._v(" "),s("p",[s("strong",[a._v("认识UUID：")])]),a._v(" "),s("ul",[s("li",[a._v("为什么UUID是全局唯一的？")]),a._v(" "),s("li",[a._v("为什么UUID占用36个字节？")]),a._v(" "),s("li",[a._v("为什么UUID是无序的？")])]),a._v(" "),s("p",[a._v("MySQL数据库的UUID组成如下所示：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("UUID = 时间+UUID版本（16字节）- 时钟序列（4字节） - MAC地址（12字节）\n")])])]),s("p",[a._v("我们以UUID值e0ea12d4-6473-11eb-943c-00155dbaa39d举例：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220706162131362.png",alt:"image-20220706162131362"}})]),a._v(" "),s("p",[s("code",[a._v("为什么UUID是全局唯一的？")])]),a._v(" "),s("p",[a._v("在UUID中时间部分占用60位，存储的类似TIMESTAMP的时间戳，但表示的是从1582-10-15 00：00：00.00 到现在的100ns的计数。可以看到UUID存储的时间精度比TIMESTAMPE更高，时间维度发生重复的概率降 低到1/100ns。")]),a._v(" "),s("p",[a._v("时钟序列是为了避免时钟被回拨导致产生时间重复的可能性。MAC地址用于全局唯一。")]),a._v(" "),s("p",[s("code",[a._v("为什么UUID占用36个字节？")])]),a._v(" "),s("p",[a._v('UUID根据字符串进行存储，设计时还带有无用"-"字符串，因此总共需要36个字节。')]),a._v(" "),s("p",[s("code",[a._v("为什么UUID是随机无序的呢？")])]),a._v(" "),s("p",[a._v("因为UUID的设计中，将时间低位放在最前面，而这部分的数据是一直在变化的，并且是无序。")]),a._v(" "),s("p",[s("strong",[a._v("改造UUID")])]),a._v(" "),s("p",[a._v("若将时间高低位互换，则时间就是单调递增的了，也就变得单调递增了。MySQL 8.0可以更换时间低位和时间高位的存储方式，这样UUID就是有序的UUID了。")]),a._v(" "),s("p",[a._v('MySQL 8.0还解决了UUID存在的空间占用的问题，除去了UUID字符串中无意义的"-"字符串，并且将字符串用二进制类型保存，这样存储空间降低为了16字节。')]),a._v(" "),s("p",[a._v("可以通过MySQL8.0提供的uuid_to_bin函数实现上述功能，同样的，MySQL也提供了bin_to_uuid函数进行转化：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SET @uuid = UUID();\nSELECT @uuid,uuid_to_bin(@uuid),uuid_to_bin(@uuid,TRUE);\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220706162657448.png",alt:"image-20220706162657448"}})]),a._v(" "),s("p",[s("strong",[a._v("通过函数uuid_to_bin(@uuid,true)将UUID转化为有序UUID了")]),a._v("。全局唯一 + 单调递增，这不就是我们想要的主键！")]),a._v(" "),s("p",[s("strong",[a._v("有序UUID性能测试")])]),a._v(" "),s("p",[a._v("16字节的有序UUID，相比之前8字节的自增ID，性能和存储空间对比究竟如何呢？")]),a._v(" "),s("p",[a._v("我们来做一个测试，插入1亿条数据，每条数据占用500字节，含有3个二级索引，最终的结果如下所示：")]),a._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220706162947613.png",alt:"image-20220706162947613"}}),a._v(" "),s("p",[a._v("从上图可以看到插入1亿条数据有序UUID是最快的，而且在实际业务使用中有序UUID在 "),s("code",[a._v("业务端就可以生成")]),a._v(" 。还可以进一步减少SQL的交互次数。")]),a._v(" "),s("p",[a._v("另外，虽然有序UUID相比自增ID多了8个字节，但实际只增大了3G的存储空间，还可以接受。")]),a._v(" "),s("blockquote",[s("p",[a._v("在当今的互联网环境中，非常不推荐自增ID作为主键的数据库设计。更推荐类似有序UUID的全局 唯一的实现。")]),a._v(" "),s("p",[a._v("另外在真实的业务系统中，主键还可以加入业务和系统属性，如用户的尾号，机房的信息等。这样 的主键设计就更为考验架构师的水平了。")])]),a._v(" "),s("p",[s("strong",[a._v("如果不是MySQL8.0 肿么办？")])]),a._v(" "),s("p",[a._v("手动赋值字段做主键！")]),a._v(" "),s("p",[a._v("比如，设计各个分店的会员表的主键，因为如果每台机器各自产生的数据需要合并，就可能会出现主键重复的问题。")]),a._v(" "),s("p",[a._v("可以在总部 MySQL 数据库中，有一个管理信息表，在这个表中添加一个字段，专门用来记录当前会员编号的最大值。")]),a._v(" "),s("p",[a._v("门店在添加会员的时候，先到总部 MySQL 数据库中获取这个最大值，在这个基础上加 1，然后用这个值 作为新会员的“id”，同时，更新总部 MySQL 数据库管理信息表中的当前会员编号的最大值。")]),a._v(" "),s("p",[a._v("这样一来，各个门店添加会员的时候，都对同一个总部 MySQL 数据库中的数据表字段进行操作，就解 决了各门店添加会员时会员编号冲突的问题。")])])}),[],!1,null,null,null);s.default=n.exports}}]);