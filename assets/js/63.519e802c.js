(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{390:function(a,s,t){"use strict";t.r(s);var e=t(7),n=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("配套视频参考："),s("a",{attrs:{href:"https://www.bilibili.com/video/BV1iq4y1u7vj?p=1&vd_source=cea816a08805c218ac4390ae9b61ae31",target:"_blank",rel:"noopener noreferrer"}},[a._v("MySQL数据库天花板--康师傅"),s("OutboundLink")],1)]),a._v(" "),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715141705004.png",alt:"image-20220715141705004"}}),a._v(" "),s("p",[s("strong",[a._v("千万不要小看日志")]),a._v("。很多看似奇怪的问题，答案往往就藏在日志里。很多情况下，只有通过查看日志才 能发现问题的原因，真正解决问题。所以，一定要学会查看日志，养成检查日志的习惯，对提升你的数 据库应用开发能力至关重要。")]),a._v(" "),s("p",[a._v("MySQL8.0 官网日志地址：“ https://dev.mysql.com/doc/refman/8.0/en/server-logs.html ”")]),a._v(" "),s("h2",{attrs:{id:"_1-mysql支持的日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-mysql支持的日志"}},[a._v("#")]),a._v(" 1. MySQL支持的日志")]),a._v(" "),s("h3",{attrs:{id:"_1-1-日志类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-日志类型"}},[a._v("#")]),a._v(" 1.1 日志类型")]),a._v(" "),s("p",[a._v("MySQL有不同类型的日志文件，用来存储不同类型的日志，分为 "),s("code",[a._v("二进制日志")]),a._v(" 、 "),s("code",[a._v("错误日志")]),a._v(" 、 "),s("code",[a._v("通用查询日志")]),a._v(" 和 "),s("code",[a._v("慢查询日志")]),a._v(" ，这也是常用的4种。MySQL 8又新增两种支持的日志： 中继日志 和 数据定义语句日志 。使 用这些日志文件，可以查看MySQL内部发生的事情。")]),a._v(" "),s("p",[a._v("这6类日志分别为：")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("慢查询日志")]),a._v("：记录所有执行时间超过long_query_time的所有查询，方便我们对查询进行优化。")]),a._v(" "),s("li",[s("strong",[a._v("通用查询日志")]),a._v("：记录所有连接的起始时间和终止时间，以及连接发送给数据库服务器的所有指令， 对我们复原操作的实际场景、发现问题，甚至是对数据库操作的审计都有很大的帮助。")]),a._v(" "),s("li",[s("strong",[a._v("错误日志")]),a._v("：记录MySQL服务的启动、运行或停止MySQL服务时出现的问题，方便我们了解服务器的 状态，从而对服务器进行维护。")]),a._v(" "),s("li",[s("strong",[a._v("二进制日志")]),a._v("：记录所有更改数据的语句，可以用于主从服务器之间的数据同步，以及服务器遇到故 障时数据的无损失恢复。")]),a._v(" "),s("li",[s("strong",[a._v("中继日志")]),a._v("：用于主从服务器架构中，从服务器用来存放主服务器二进制日志内容的一个中间文件。 从服务器通过读取中继日志的内容，来同步主服务器上的操作。")]),a._v(" "),s("li",[s("strong",[a._v("数据定义语句日志")]),a._v("：记录数据定义语句执行的元数据操作。")])]),a._v(" "),s("p",[a._v("除二进制日志外，其他日志都是 "),s("code",[a._v("文本文件")]),a._v(" 。默认情况下，所有日志创建于 "),s("code",[a._v("MySQL数据目录")]),a._v(" 中。")]),a._v(" "),s("h3",{attrs:{id:"_1-2-日志的弊端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-日志的弊端"}},[a._v("#")]),a._v(" 1.2 日志的弊端")]),a._v(" "),s("ul",[s("li",[a._v("日志功能会 "),s("code",[a._v("降低MySQL数据库的性能")]),a._v(" 。例如，在查询非常频繁的MySQL数据库系统中，如果开启了通用查询日志和慢查询日志，MySQL数据库会花费很多时间记录日志。")]),a._v(" "),s("li",[a._v("日志会 "),s("code",[a._v("占用大量的磁盘空间")]),a._v(" 。对于用户量非常大，操作非常频繁的数据库，日志文件需要的存储空间设置比数据库文件需要的存储空间还要大。")])]),a._v(" "),s("h2",{attrs:{id:"_2-慢查询日志-slow-query-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-慢查询日志-slow-query-log"}},[a._v("#")]),a._v(" 2. 慢查询日志(slow query log)")]),a._v(" "),s("p",[a._v("前面章节《第09章_性能分析工具的使用》已经详细讲述。")]),a._v(" "),s("h2",{attrs:{id:"_3-通用查询日志-general-query-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-通用查询日志-general-query-log"}},[a._v("#")]),a._v(" 3. 通用查询日志(general query log)")]),a._v(" "),s("p",[a._v("通用查询日志用来 "),s("code",[a._v("记录用户的所有操作")]),a._v(" ，包括启动和关闭MySQL服务、所有用户的连接开始时间和截止 时间、发给 MySQL 数据库服务器的所有 SQL 指令等。当我们的数据发生异常时，"),s("strong",[a._v("查看通用查询日志， 还原操作时的具体场景")]),a._v("，可以帮助我们准确定位问题。")]),a._v(" "),s("h3",{attrs:{id:"_3-1-问题场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-问题场景"}},[a._v("#")]),a._v(" 3.1 问题场景")]),a._v(" "),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715145650406.png",alt:"image-20220715145650406"}}),a._v(" "),s("h3",{attrs:{id:"_3-2-查看当前状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-查看当前状态"}},[a._v("#")]),a._v(" 3.2 查看当前状态")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> SHOW VARIABLES LIKE '%general%';\n+------------------+------------------------------+\n| Variable_name    | Value                        |\n+------------------+------------------------------+\n| general_log      | OFF                          | #通用查询日志处于关闭状态\n| general_log_file | /var/lib/mysql/atguigu01.log | #通用查询日志文件的名称是atguigu01.log\n+------------------+------------------------------+\n2 rows in set (0.03 sec)\n")])])]),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715155010381.png",alt:"image-20220715155010381"}}),a._v(" "),s("h3",{attrs:{id:"_3-3-启动日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-启动日志"}},[a._v("#")]),a._v(" 3.3 启动日志")]),a._v(" "),s("p",[s("strong",[a._v("方式1：永久性方式")])]),a._v(" "),s("p",[a._v("修改my.cnf或者my.ini配置文件来设置。在[mysqld]组下加入log选项，并重启MySQL服务。格式如下：")]),a._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[a._v("[mysqld]\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("general_log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("ON")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("general_log_file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("[path[filename]] #日志文件所在目录路径，filename为日志文件")]),a._v("\n")])])]),s("p",[a._v("如果不指定目录和文件名，通用查询日志将默认存储在MySQL数据目录中的hostname.log文件中， hostname表示主机名。")]),a._v(" "),s("p",[s("strong",[a._v("方式2：临时性方式")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SET GLOBAL general_log=on; # 开启通用查询日志\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SET GLOBAL general_log_file=’path/filename’; # 设置日志文件保存位置\n")])])]),s("p",[a._v("对应的，关闭操作SQL命令如下：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SET GLOBAL general_log=off; # 关闭通用查询日志\n")])])]),s("p",[a._v("查看设置后情况：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SHOW VARIABLES LIKE 'general_log%';\n")])])]),s("h3",{attrs:{id:"_3-4-查看日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-查看日志"}},[a._v("#")]),a._v(" 3.4 查看日志")]),a._v(" "),s("p",[a._v("通用查询日志是以 "),s("code",[a._v("文本文件")]),a._v(" 的形式存储在文件系统中的，可以使用 "),s("code",[a._v("文本编辑器")]),a._v(" 直接打开日志文件。每台 MySQL服务器的通用查询日志内容是不同的。")]),a._v(" "),s("ul",[s("li",[a._v("在Windows操作系统中，使用文本文件查看器；")]),a._v(" "),s("li",[a._v("在Linux系统中，可以使用vi工具或者gedit工具查看；")]),a._v(" "),s("li",[a._v("在Mac OSX系统中，可以使用文本文件查看器或者vi等工具查看。")])]),a._v(" "),s("p",[a._v("从 "),s("code",[a._v("SHOW VARIABLES LIKE 'general_log%'")]),a._v("; 结果中可以看到通用查询日志的位置。")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("/usr/sbin/mysqld, Version: 8.0.26 (MySQL Community Server - GPL). started with:\nTcp port: 3306 Unix socket: /var/lib/mysql/mysql.sock\nTime Id Command Argument\n2022-01-04T07:44:58.052890Z 10 Query SHOW VARIABLES LIKE '%general%'\n2022-01-04T07:45:15.666672Z 10 Query SHOW VARIABLES LIKE 'general_log%'\n2022-01-04T07:45:28.970765Z 10 Query select * from student\n2022-01-04T07:47:38.706804Z 11 Connect root@localhost on using Socket\n2022-01-04T07:47:38.707435Z 11 Query select @@version_comment limit 1\n2022-01-04T07:48:21.384886Z 12 Connect root@172.16.210.1 on using TCP/IP\n2022-01-04T07:48:21.385253Z 12 Query SET NAMES utf8\n2022-01-04T07:48:21.385640Z 12 Query USE `atguigu12`\n2022-01-04T07:48:21.386179Z 12 Query SHOW FULL TABLES WHERE Table_Type !=\n'VIEW'\n2022-01-04T07:48:23.901778Z 13 Connect root@172.16.210.1 on using TCP/IP\n2022-01-04T07:48:23.902128Z 13 Query SET NAMES utf8\n2022-01-04T07:48:23.905179Z 13 Query USE `atguigu`\n2022-01-04T07:48:23.905825Z 13 Query SHOW FULL TABLES WHERE Table_Type !=\n'VIEW'\n2022-01-04T07:48:32.163833Z 14 Connect root@172.16.210.1 on using TCP/IP\n2022-01-04T07:48:32.164451Z 14 Query SET NAMES utf8\n2022-01-04T07:48:32.164840Z 14 Query USE `atguigu`\n2022-01-04T07:48:40.006687Z 14 Query select * from account\n")])])]),s("p",[a._v("在通用查询日志里面，我们可以清楚地看到，什么时候开启了新的客户端登陆数据库，登录之后做了什么 SQL 操作，针对的是哪个数据表等信息。")]),a._v(" "),s("h3",{attrs:{id:"_3-5-停止日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-停止日志"}},[a._v("#")]),a._v(" 3.5 停止日志")]),a._v(" "),s("p",[s("strong",[a._v("方式1：永久性方式")])]),a._v(" "),s("p",[a._v("修改 "),s("code",[a._v("my.cnf")]),a._v(" 或者 "),s("code",[a._v("my.ini")]),a._v(" 文件，把[mysqld]组下的 "),s("code",[a._v("general_log")]),a._v(" 值设置为 "),s("code",[a._v("OFF")]),a._v(" 或者把general_log一项 注释掉。修改保存后，再"),s("code",[a._v("重启MySQL服务")]),a._v(" ，即可生效。")]),a._v(" "),s("p",[a._v("举例1：")]),a._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[a._v("[mysqld]\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("general_log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("OFF")]),a._v("\n")])])]),s("p",[a._v("举例2：")]),a._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[a._v("[mysqld]\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#general_log=ON")]),a._v("\n")])])]),s("p",[s("strong",[a._v("方式2：临时性方式")])]),a._v(" "),s("p",[a._v("使用SET语句停止MySQL通用查询日志功能：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SET GLOBAL general_log=off;\n")])])]),s("p",[a._v("查询通用日志功能：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SHOW VARIABLES LIKE 'general_log%';\n")])])]),s("h3",{attrs:{id:"_3-6-删除-刷新日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-删除-刷新日志"}},[a._v("#")]),a._v(" 3.6 删除\\刷新日志")]),a._v(" "),s("p",[a._v("如果数据的使用非常频繁，那么通用查询日志会占用服务器非常大的磁盘空间。数据管理员可以删除很长时间之前的查询日志，以保证MySQL服务器上的硬盘空间。")]),a._v(" "),s("p",[s("strong",[a._v("手动删除文件")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SHOW VARIABLES LIKE 'general_log%';\n")])])]),s("p",[a._v("可以看出，通用查询日志的目录默认为MySQL数据目录。在该目录下手动删除通用查询日志 atguigu01.log")]),a._v(" "),s("p",[a._v("使用如下命令重新生成查询日志文件，具体命令如下。刷新MySQL数据目录，发现创建了新的日志文 件。前提一定要开启通用日志。")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysqladmin -uroot -p flush-logs\n")])])]),s("p",[a._v("如果希望备份旧的通用查询日志，就必须先将旧的日志文件复制出来或者改名，然后执行上面的mysqladmin命令。正确流程如下：")]),a._v(" "),s("div",{staticClass:"language-liunx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("cd mysql-data-directory # 输入自己的通用日志文件所在目录\nmv mysql.general.log mysql.general.log.old # 指定旧的文件名 以及 新的文件名\nmysqladmin -uroot -p flush-logs\n")])])]),s("h2",{attrs:{id:"_4-错误日志-error-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-错误日志-error-log"}},[a._v("#")]),a._v(" 4. 错误日志(error log)")]),a._v(" "),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715160249271.png",alt:"image-20220715160249271"}}),a._v(" "),s("h3",{attrs:{id:"_4-1-启动日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-启动日志"}},[a._v("#")]),a._v(" 4.1 启动日志")]),a._v(" "),s("p",[a._v("在MySQL数据库中，错误日志功能是 "),s("code",[a._v("默认开启")]),a._v(" 的。而且，错误日志 "),s("code",[a._v("无法被禁止")]),a._v(" 。")]),a._v(" "),s("p",[a._v("默认情况下，错误日志存储在MySQL数据库的数据文件夹下，名称默认为 "),s("code",[a._v("mysqld.log")]),a._v(" （Linux系统）或 "),s("code",[a._v("hostname.err")]),a._v(" （mac系统）。如果需要制定文件名，则需要在my.cnf或者my.ini中做如下配置：")]),a._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[a._v("[mysqld]\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("log-error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("[path/[filename]] #path为日志文件所在的目录路径，filename为日志文件名")]),a._v("\n")])])]),s("p",[a._v("修改配置项后，需要重启MySQL服务以生效。")]),a._v(" "),s("h3",{attrs:{id:"_4-2-查看日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-查看日志"}},[a._v("#")]),a._v(" 4.2 查看日志")]),a._v(" "),s("p",[a._v("MySQL错误日志是以文本文件形式存储的，可以使用文本编辑器直接查看。")]),a._v(" "),s("p",[a._v("查询错误日志的存储路径：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> SHOW VARIABLES LIKE 'log_err%';\n+----------------------------+----------------------------------------+\n| Variable_name              | Value                                  |\n+----------------------------+----------------------------------------+\n| log_error                  | /var/log/mysqld.log                    |\n| log_error_services         | log_filter_internal; log_sink_internal |\n| log_error_suppression_list |                                        |\n| log_error_verbosity        | 2                                      |\n+----------------------------+----------------------------------------+\n4 rows in set (0.01 sec)\n")])])]),s("p",[a._v("执行结果中可以看到错误日志文件是mysqld.log，位于MySQL默认的数据目录下。")]),a._v(" "),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715160657093.png",alt:"image-20220715160657093"}}),a._v(" "),s("h3",{attrs:{id:"_4-3-删除-刷新日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-删除-刷新日志"}},[a._v("#")]),a._v(" 4.3 删除\\刷新日志")]),a._v(" "),s("p",[a._v("对于很久以前的错误日志，数据库管理员查看这些错误日志的可能性不大，可以将这些错误日志删除， 以保证MySQL服务器上的 "),s("code",[a._v("硬盘空间")]),a._v(" 。MySQL的错误日志是以文本文件的形式存储在文件系统中的，可以 "),s("code",[a._v("直接删除")]),a._v(" 。")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("第一步（方式1）：删除操作")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("rm -f /var/lib/mysql/mysqld.log\n")])])]),s("p",[a._v("在运行状态下删除错误日志文件后，MySQL并不会自动创建日志文件。")])]),a._v(" "),s("li",[s("p",[a._v("第一步（方式2）：重命名文件")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mv /var/log/mysqld.log /var/log/mysqld.log.old\n")])])])]),a._v(" "),s("li",[s("p",[a._v("第二步：重建日志")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysqladmin -uroot -p flush-logs\n")])])]),s("p",[a._v("可能会报错")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[root@atguigu01 log]# mysqladmin -uroot -p flush-logs\nEnter password:\nmysqladmin: refresh failed; error: 'Could not open file '/var/log/mysqld.log' for\nerror logging.'\n")])])]),s("p",[a._v("官网提示：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715161132368.png",alt:"image-20220715161132368"}})])])]),a._v(" "),s("p",[a._v("补充操作：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("install -omysql -gmysql -m0644 /dev/null /var/log/mysqld.log\n")])])]),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715161216556.png",alt:"image-20220715161216556"}}),a._v(" "),s("h3",{attrs:{id:"_4-4-mysql-8-0-新特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-mysql-8-0-新特性"}},[a._v("#")]),a._v(" 4.4 MySQL 8.0 新特性")]),a._v(" "),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715161321565.png",alt:"image-20220715161321565"}}),a._v(" "),s("blockquote",[s("p",[a._v("小结：")]),a._v(" "),s("p",[a._v("通常情况下，管理员不需要查看错误日志。但是，MySQL服务器发生异常时，管理员可以从错误日志中找到发生异常的时间、原因，然后根据这些信息来解决异常。")])]),a._v(" "),s("h2",{attrs:{id:"_5-二进制日志-bin-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-二进制日志-bin-log"}},[a._v("#")]),a._v(" 5. 二进制日志(bin log)")]),a._v(" "),s("p",[a._v("binlog可以说是MySQL中比较 "),s("code",[a._v("重要")]),a._v(" 的日志了，在日常开发及运维过程中，经常会遇到。")]),a._v(" "),s("p",[a._v("binlog即binary log，二进制日志文件，也叫作变更日志（update log）。它记录了数据库所有执行的 "),s("code",[a._v("DDL")]),a._v(" 和 "),s("code",[a._v("DML")]),a._v(" 等数据库更新事件的语句，但是不包含没有修改任何数据的语句（如数据查询语句select、 show等）。")]),a._v(" "),s("p",[a._v("它以"),s("code",[a._v("事件形式")]),a._v("记录并保存在"),s("code",[a._v("二进制文件")]),a._v("中。通过这些信息，我们可以再现数据更新操作的全过程。")]),a._v(" "),s("blockquote",[s("p",[a._v("如果想要记录所有语句（例如，为了识别有问题的查询），需要使用通用查询日志。")])]),a._v(" "),s("p",[a._v("binlog主要应用场景：")]),a._v(" "),s("img",{staticStyle:{zoom:"100%"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715161800635.png",alt:"image-20220715161800635"}}),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715161842703.png",alt:"image-20220715161842703"}})]),a._v(" "),s("h3",{attrs:{id:"_5-1-查看默认情况"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-查看默认情况"}},[a._v("#")]),a._v(" 5.1 查看默认情况")]),a._v(" "),s("p",[a._v("查看记录二进制日志是否开启：在MySQL8中默认情况下，二进制文件是开启的。")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> show variables like '%log_bin%';\n+---------------------------------+----------------------------------+\n| Variable_name                   | Value                            |\n+---------------------------------+----------------------------------+\n| log_bin                         | ON                               |\n| log_bin_basename                | /var/lib/mysql/binlog            |\n| log_bin_index                   | /var/lib/mysql/binlog.index      |\n| log_bin_trust_function_creators | OFF                              |\n| log_bin_use_v1_row_events       | OFF                              |\n| sql_log_bin                     | ON                               |\n+---------------------------------+----------------------------------+\n6 rows in set (0.00 sec)\n")])])]),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715163520596.png",alt:"image-20220715163520596"}}),a._v(" "),s("h3",{attrs:{id:"_5-2-日志参数设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-日志参数设置"}},[a._v("#")]),a._v(" 5.2 日志参数设置")]),a._v(" "),s("p",[s("strong",[a._v("方式1：永久性方式")])]),a._v(" "),s("p",[a._v("修改MySQL的 "),s("code",[a._v("my.cnf")]),a._v(" 或 "),s("code",[a._v("my.ini")]),a._v(" 文件可以设置二进制日志的相关参数：")]),a._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[a._v("[mysqld]\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#启用二进制日志")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("log-bin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("atguigu-bin")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("binlog_expire_logs_seconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("600")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("max_binlog_size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("100M")]),a._v("\n")])])]),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715163811664.png",alt:"image-20220715163811664"}}),a._v(" "),s("p",[a._v("重新启动MySQL服务，查询二进制日志的信息，执行结果：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> show variables like '%log_bin%';\n+---------------------------------+----------------------------------+\n| Variable_name                   | Value                            |\n+---------------------------------+----------------------------------+\n| log_bin                         | ON                               |\n| log_bin_basename                | /var/lib/mysql/atguigu-bin       |\n| log_bin_index                   | /var/lib/mysql/atguigu-bin.index |\n| log_bin_trust_function_creators | OFF                              |\n| log_bin_use_v1_row_events       | OFF                              |\n| sql_log_bin                     | ON                               |\n+---------------------------------+----------------------------------+\n6 rows in set (0.00 sec)\n")])])]),s("p",[s("strong",[a._v("设置带文件夹的bin-log日志存放目录")])]),a._v(" "),s("p",[a._v("如果想改变日志文件的目录和名称，可以对my.cnf或my.ini中的log_bin参数修改如下：")]),a._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[a._v("[mysqld]\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("log-bin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"/var/lib/mysql/binlog/atguigu-bin"')]),a._v("\n")])])]),s("p",[a._v("注意：新建的文件夹需要使用mysql用户，使用下面的命令即可。")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("chown -R -v mysql:mysql binlog\n")])])]),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715164107352.png",alt:"image-20220715164107352"}}),a._v(" "),s("p",[s("strong",[a._v("方式2：临时性方式")])]),a._v(" "),s("p",[a._v("如果不希望通过修改配置文件并重启的方式设置二进制日志的话，还可以使用如下指令，需要注意的是 在mysql8中只有 "),s("code",[a._v("会话级别")]),a._v(" 的设置，没有了global级别的设置。")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# global 级别\nmysql> set global sql_log_bin=0;\nERROR 1228 (HY000): Variable 'sql_log_bin' is a SESSION variable and can`t be used\nwith SET GLOBAL\n\n# session级别\nmysql> SET sql_log_bin=0;\nQuery OK, 0 rows affected (0.01 秒)\n")])])]),s("h3",{attrs:{id:"_5-3-查看日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-查看日志"}},[a._v("#")]),a._v(" 5.3 查看日志")]),a._v(" "),s("p",[a._v("当MySQL创建二进制日志文件时，先创建一个以“filename”为名称、以“.index”为后缀的文件，再创建一 个以“filename”为名称、以“.000001”为后缀的文件。")]),a._v(" "),s("p",[a._v("MySQL服务 "),s("code",[a._v("重新启动一次")]),a._v(" ，以“.000001”为后缀的文件就会增加一个，并且后缀名按1递增。即日志文件的 个数与MySQL服务启动的次数相同；如果日志长度超过了 "),s("code",[a._v("max_binlog_size")]),a._v(" 的上限（默认是1GB），就会创建一个新的日志文件。")]),a._v(" "),s("p",[a._v("查看当前的二进制日志文件列表及大小。指令如下：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> SHOW BINARY LOGS;\n+--------------------+-----------+-----------+\n| Log_name           | File_size | Encrypted |\n+--------------------+-----------+-----------+\n| atguigu-bin.000001 | 156       | No        |\n+--------------------+-----------+-----------+\n1 行于数据集 (0.02 秒)\n")])])]),s("p",[a._v("所有对数据库的修改都会记录在binlog中。但binlog是二进制文件，无法直接查看，想要更直观的观测它就要借助"),s("code",[a._v("mysqlbinlog")]),a._v("命令工具了。指令如下：在查看执行，先执行一条SQL语句，如下")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("update student set name='张三_back' where id=1;\n")])])]),s("p",[a._v("开始查看binlog")]),a._v(" "),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715164718970.png",alt:"image-20220715164718970"}}),a._v(" "),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715164743351.png",alt:"image-20220715164743351"}}),a._v(" "),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715164809401.png",alt:"image-20220715164809401"}}),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysqlbinlog -v \"/var/lib/mysql/binlog/atguigu-bin.000002\"\n#220105 9:16:37 server id 1 end_log_pos 324 CRC32 0x6b31978b Query thread_id=10\nexec_time=0 error_code=0\nSET TIMESTAMP=1641345397/*!*/;\nSET @@session.pseudo_thread_id=10/*!*/;\nSET @@session.foreign_key_checks=1, @@session.sql_auto_is_null=0,\n@@session.unique_checks=1, @@session.autocommit=1/*!*/;\nSET @@session.sql_mode=1168113696/*!*/;\nSET @@session.auto_increment_increment=1, @@session.auto_increment_offset=1/*!*/;\n/*!\\C utf8mb3 *//*!*/;\nSET\n@@session.character_set_client=33,@@session.collation_connection=33,@@session.collatio\nn_server=255/*!*/;\nSET @@session.lc_time_names=0/*!*/;\nSET @@session.collation_database=DEFAULT/*!*/;\n/*!80011 SET @@session.default_collation_for_utf8mb4=255*//*!*/;\nBEGIN\n/*!*/;\n# at 324\n#220105 9:16:37 server id 1 end_log_pos 391 CRC32 0x74f89890 Table_map:\n`atguigu14`.`student` mapped to number 85\n# at 391\n#220105 9:16:37 server id 1 end_log_pos 470 CRC32 0xc9920491 Update_rows: table id\n85 flags: STMT_END_F\n\nBINLOG '\ndfHUYRMBAAAAQwAAAIcBAAAAAFUAAAAAAAEACWF0Z3VpZ3UxNAAHc3R1ZGVudAADAw8PBDwAHgAG\nAQEAAgEhkJj4dA==\ndfHUYR8BAAAATwAAANYBAAAAAFUAAAAAAAEAAgAD//8AAQAAAAblvKDkuIkG5LiA54+tAAEAAAAL\n5byg5LiJX2JhY2sG5LiA54+tkQSSyQ==\n'/*!*/;\n### UPDATE `atguigu`.`student`\n### WHERE\n### @1=1\n### @2='张三'\n### @3='一班'\n### SET\n### @1=1\n### @2='张三_back'\n### @3='一班'\n# at 470\n#220105 9:16:37 server id 1 end_log_pos 501 CRC32 0xca01d30f Xid = 15\nCOMMIT/*!*/;\n")])])]),s("p",[a._v("前面的命令同时显示binlog格式的语句，使用如下命令不显示它")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysqlbinlog -v --base64-output=DECODE-ROWS \"/var/lib/mysql/binlog/atguigu-bin.000002\"\n#220105 9:16:37 server id 1 end_log_pos 324 CRC32 0x6b31978b Query thread_id=10\nexec_time=0 error_code=0\nSET TIMESTAMP=1641345397/*!*/;\nSET @@session.pseudo_thread_id=10/*!*/;\nSET @@session.foreign_key_checks=1, @@session.sql_auto_is_null=0,\n@@session.unique_checks=1, @@session.autocommit=1/*!*/;\nSET @@session.sql_mode=1168113696/*!*/;\nSET @@session.auto_increment_increment=1, @@session.auto_increment_offset=1/*!*/;\n/*!\\C utf8mb3 *//*!*/;\nSET\n@@session.character_set_client=33,@@session.collation_connection=33,@@session.collatio\nn_server=255/*!*/;\nSET @@session.lc_time_names=0/*!*/;\nSET @@session.collation_database=DEFAULT/*!*/;\n/*!80011 SET @@session.default_collation_for_utf8mb4=255*//*!*/;\nBEGIN\n/*!*/;\n# at 324\n#220105 9:16:37 server id 1 end_log_pos 391 CRC32 0x74f89890 Table_map:\n`atguigu14`.`student` mapped to number 85\n# at 391\n#220105 9:16:37 server id 1 end_log_pos 470 CRC32 0xc9920491 Update_rows: table id\n85 flags: STMT_END_F\n### UPDATE `atguigu14`.`student`\n### WHERE\n### @1=1\n### @2='张三'\n### @3='一班'\n### SET\n### @1=1\n### @2='张三_back'\n### @3='一班'\n# at 470\n#220105 9:16:37 server id 1 end_log_pos 501 CRC32 0xca01d30f Xid = 15\n")])])]),s("p",[a._v("关于mysqlbinlog工具的使用技巧还有很多，例如只解析对某个库的操作或者某个时间段内的操作等。简单分享几个常用的语句，更多操作可以参考官方文档。")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# 可查看参数帮助\nmysqlbinlog --no-defaults --help\n# 查看最后100行\nmysqlbinlog --no-defaults --base64-output=decode-rows -vv atguigu-bin.000002 |tail\n-100\n# 根据position查找\nmysqlbinlog --no-defaults --base64-output=decode-rows -vv atguigu-bin.000002 |grep -A\n20 '4939002'\n")])])]),s("p",[a._v("上面这种办法读取出binlog日志的全文内容比较多，不容易分辨查看到pos点信息，下面介绍一种更为方便的查询命令：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> show binlog events [IN 'log_name'] [FROM pos] [LIMIT [offset,] row_count];\n")])])]),s("ul",[s("li",[s("code",[a._v("IN 'log_name'")]),a._v(" ：指定要查询的binlog文件名（不指定就是第一个binlog文件）")]),a._v(" "),s("li",[s("code",[a._v("FROM pos")]),a._v(" ：指定从哪个pos起始点开始查起（不指定就是从整个文件首个pos点开始算）")]),a._v(" "),s("li",[s("code",[a._v("LIMIT [offset]")]),a._v(" ：偏移量(不指定就是0)")]),a._v(" "),s("li",[s("code",[a._v("row_count")]),a._v(" :查询总条数（不指定就是所有行）")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> show binlog events in 'atguigu-bin.000002';\n+--------------------+-----+----------------+-----------+-------------+--------------------------------------------------------+\n| Log_name           | Pos | Event_type     | Server_id | End_log_pos | Info                                                   |\n+--------------------+-----+----------------+-----------+-------------+--------------------------------------------------------+\n| atguigu-bin.000002 | 4   | Format_desc    | 1         | 125         | Server ver: 8.0.26, Binlog ver: 4                      |\n| atguigu-bin.000002 | 125 | Previous_gtids | 1         | 156         |                                                        |\n| atguigu-bin.000002 | 156 | Anonymous_Gtid | 1         | 235         | SET @@SESSION.GTID_NEXT= 'ANONYMOUS'                   |\n| atguigu-bin.000002 | 235 | Query          | 1         | 324         | BEGIN                                                  |\n| atguigu-bin.000002 | 324 | Table_map      | 1         | 391         | table_id: 85(atguigu14.student)                        |\n| atguigu-bin.000002 | 391 | Update_rows    | 1         | 470         | table_id: 85flags: STMT_END_F                          |\n| atguigu-bin.000002 | 470 | Xid            | 1         | 501         | COMMIT /*xid=15 */                                     |\n| atguigu-bin.000002 | 501 | Anonymous_Gtid | 1         | 578         | SET @@SESSION.GTID_NEXT= 'ANONYMOUS'                   |\n| atguigu-bin.000002 | 578 | Query     | 1 | 721 | use `atguigu14`; create table test(id int, title varchar(100)) /* xid=19 */ |\n| atguigu-bin.000002 | 721 | Anonymous_Gtid | 1         | 800         | SET @@SESSION.GTID_NEXT= 'ANONYMOUS'                   |\n| atguigu-bin.000002 | 800 | Query          | 1         | 880         | BEGIN                                                  |\n| atguigu-bin.000002 | 880 | Table_map      | 1         | 943         | table_id: 89(atguigu14.test)                           |\n| atguigu-bin.000002 | 943 | Write_rows     | 1         | 992         | table_id: 89 flags: STMT_END_F                         |\n| atguigu-bin.000002 | 992 | Xid            | 1         | 1023        | COMMIT /*xid=21 */                                     |\n+--------------------+-----+----------------+-----------+-------------+--------------------------------------------------------+\n14 行于数据集 (0.02 秒)\n")])])]),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715165603879.png",alt:"image-20220715165603879"}}),a._v(" "),s("p",[a._v("上面我们讲了这么多都是基于binlog的默认格式，binlog格式查看")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> show variables like 'binlog_format';\n+---------------+-------+\n| Variable_name | Value |\n+---------------+-------+\n| binlog_format | ROW   |\n+---------------+-------+\n1 行于数据集 (0.02 秒)\n")])])]),s("p",[a._v("除此之外，binlog还有2种格式，分别是"),s("code",[a._v("Statement")]),a._v("和"),s("code",[a._v("Mixed")])]),a._v(" "),s("ul",[s("li",[s("p",[a._v("Statement")]),a._v(" "),s("p",[a._v("每一条会修改数据的sql都会记录在binlog中。")]),a._v(" "),s("p",[a._v("优点：不需要记录每一行的变化，减少了binlog日志量，节约了IO，提高性能。")])]),a._v(" "),s("li",[s("p",[a._v("Row")]),a._v(" "),s("p",[a._v("5.1.5版本的MySQL才开始支持row level 的复制，它不记录sql语句上下文相关信息，仅保存哪条记录被修改。")]),a._v(" "),s("p",[a._v("优点：row level 的日志内容会非常清楚的记录下每一行数据修改的细节。而且不会出现某些特定情况下 的存储过程，或function，以及trigger的调用和触发无法被正确复制的问题。")])]),a._v(" "),s("li",[s("p",[a._v("Mixed")]),a._v(" "),s("p",[a._v("从5.1.8版本开始，MySQL提供了Mixed格式，实际上就是Statement与Row的结合。")]),a._v(" "),s("p",[a._v("详细情况，下章讲解。")])])]),a._v(" "),s("h3",{attrs:{id:"_5-4-使用日志恢复数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-使用日志恢复数据"}},[a._v("#")]),a._v(" 5.4 使用日志恢复数据")]),a._v(" "),s("p",[a._v("如果MySQL服务器启用了二进制日志，在数据库出现意外丢失数据时，可以使用MySQLbinlog工具从指定的时间点开始（例如，最后一次备份）直到现在或另一个指定的时间点的日志中回复数据。")]),a._v(" "),s("p",[a._v("mysqlbinlog恢复数据的语法如下：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysqlbinlog [option] filename|mysql –uuser -ppass;\n")])])]),s("p",[a._v("这个命令可以这样理解：使用mysqlbinlog命令来读取filename中的内容，然后使用mysql命令将这些内容恢复到数据库中。")]),a._v(" "),s("ul",[s("li",[s("p",[s("code",[a._v("filename")]),a._v(" ：是日志文件名。")])]),a._v(" "),s("li",[s("p",[s("code",[a._v("option")]),a._v(" ：可选项，比较重要的两对option参数是--start-date、--stop-date 和 --start-position、-- stop-position。")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("--start-date")]),a._v(" 和"),s("code",[a._v("--stop-date")]),a._v(" ：可以指定恢复数据库的起始时间点和结束时间点。")]),a._v(" "),s("li",[s("code",[a._v("--start-position")]),a._v("和"),s("code",[a._v("--stop-position")]),a._v(" ：可以指定恢复数据的开始位置和结束位置。")])])])]),a._v(" "),s("blockquote",[s("p",[a._v("注意：使用mysqlbinlog命令进行恢复操作时，必须是编号小的先恢复，例如atguigu-bin.000001必须在atguigu-bin.000002之前恢复。")])]),a._v(" "),s("p",[a._v("详见p189，由于翻页过快，这部分没办法记录。")]),a._v(" "),s("h3",{attrs:{id:"_5-5-删除二进制日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-删除二进制日志"}},[a._v("#")]),a._v(" 5.5 删除二进制日志")]),a._v(" "),s("p",[a._v("MySQL的二进制文件可以配置自动删除，同时MySQL也提供了安全的手动删除二进制文件的方法。 "),s("code",[a._v("PURGE MASTER LOGS")]),a._v(" 只删除指定部分的二进制日志文件， "),s("code",[a._v("RESET MASTER")]),a._v(" 删除所有的二进制日志文 件。具体如下：")]),a._v(" "),s("p",[s("strong",[a._v("1. PURGE MASTER LOGS：删除指定日志文件")])]),a._v(" "),s("p",[a._v("PURGE MASTER LOGS语法如下：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("PURGE {MASTER | BINARY} LOGS TO ‘指定日志文件名’\nPURGE {MASTER | BINARY} LOGS BEFORE ‘指定日期’\n")])])]),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715171712026.png",alt:"image-20220715171712026"}}),a._v(" "),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715172015185.png",alt:"image-20220715172015185"}}),a._v(" "),s("p",[s("strong",[a._v("2. RESET MASTER: 删除所有二进制日志文件")])]),a._v(" "),s("img",{staticStyle:{float:"left"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715172104967.png",alt:"image-20220715172104967"}}),a._v(" "),s("h3",{attrs:{id:"_5-6-其它场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-其它场景"}},[a._v("#")]),a._v(" 5.6 其它场景")]),a._v(" "),s("p",[a._v("二进制日志可以通过数据库的 "),s("code",[a._v("全量备份")]),a._v(" 和二进制日志中保存的 "),s("code",[a._v("增量信息")]),a._v(" ，完成数据库的 "),s("code",[a._v("无损失恢复")]),a._v(" 。 但是，如果遇到数据量大、数据库和数据表很多（比如分库分表的应用）的场景，用二进制日志进行数据恢复，是很有挑战性的，因为起止位置不容易管理。")]),a._v(" "),s("p",[a._v("在这种情况下，一个有效的解决办法是 "),s("code",[a._v("配置主从数据库服务器")]),a._v(" ，甚至是 "),s("code",[a._v("一主多从")]),a._v(" 的架构，把二进制日志文件的内容通过中继日志，同步到从数据库服务器中，这样就可以有效避免数据库故障导致的数据异常等问题。")]),a._v(" "),s("h2",{attrs:{id:"_6-再谈二进制日志-binlog"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-再谈二进制日志-binlog"}},[a._v("#")]),a._v(" 6. 再谈二进制日志(binlog)")]),a._v(" "),s("h3",{attrs:{id:"_6-1-写入机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-写入机制"}},[a._v("#")]),a._v(" 6.1 写入机制")]),a._v(" "),s("p",[a._v("binlog的写入时机也非常简单，事务执行过程中，先把日志写到 "),s("code",[a._v("binlog cache")]),a._v(" ，事务提交的时候，再把binlog cache写到binlog文件中。因为一个事务的binlog不能被拆开，无论这个事务多大，也要确保一次性写入，所以系统会给每个线程分配一个块内存作为binlog cache。")]),a._v(" "),s("p",[a._v("我们可以通过"),s("code",[a._v("binlog_cache_size")]),a._v("参数控制单个线程 binlog cache 大小，如果存储内容超过了这个参数，就要暂存到磁盘（Swap）。binlog日志刷盘流程如下：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715172958729.png",alt:"image-20220715172958729"}})]),a._v(" "),s("blockquote",[s("ul",[s("li",[a._v("上图的write，是指把日志写入到文件系统的page cache，并没有把数据持久化到磁盘，所以速度比较快")]),a._v(" "),s("li",[a._v("上图的fsync，才是将数据持久化到磁盘的操作")])])]),a._v(" "),s("p",[a._v("write和fsync的时机，可以由参数 "),s("code",[a._v("sync_binlog")]),a._v(" 控制，默认是 "),s("code",[a._v("0")]),a._v(" 。为0的时候，表示每次提交事务都只 write，由系统自行判断什么时候执行fsync。虽然性能得到提升，但是机器宕机，page cache里面的 binglog 会丢失。如下图：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715193749462.png",alt:"image-20220715193749462"}})]),a._v(" "),s("p",[a._v("为了安全起见，可以设置为 "),s("code",[a._v("1")]),a._v(" ，表示每次提交事务都会执行fsync，就如同"),s("strong",[a._v("redo log 刷盘流程")]),a._v("一样。 最后还有一种折中方式，可以设置为N(N>1)，表示每次提交事务都write，但累积N个事务后才fsync。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715194624080.png",alt:"image-20220715194624080"}})]),a._v(" "),s("p",[a._v("在出现IO瓶颈的场景里，将sync_binlog设置成一个比较大的值，可以提升性能。同样的，如果机器宕机，会丢失最近N个事务的binlog日志。")]),a._v(" "),s("h3",{attrs:{id:"_6-2-binlog与redolog对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-binlog与redolog对比"}},[a._v("#")]),a._v(" 6.2 binlog与redolog对比")]),a._v(" "),s("ul",[s("li",[a._v("redo log 它是 "),s("code",[a._v("物理日志")]),a._v(" ，记录内容是“在某个数据页上做了什么修改”，属于 InnoDB 存储引擎层产生的。")]),a._v(" "),s("li",[a._v("而 binlog 是 "),s("code",[a._v("逻辑日志")]),a._v(" ，记录内容是语句的原始逻辑，类似于“给 ID=2 这一行的 c 字段加 1”，属于 MySQL Server 层。")]),a._v(" "),s("li",[a._v("虽然它们都属于持久化的保证，但是侧重点不同。\n"),s("ul",[s("li",[a._v("redo log让InnoDB存储引擎拥有了崩溃恢复能力。")]),a._v(" "),s("li",[a._v("binlog保证了MySQL集群架构的数据一致性。")])])])]),a._v(" "),s("h3",{attrs:{id:"_6-3-两阶段提交"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-两阶段提交"}},[a._v("#")]),a._v(" 6.3 两阶段提交")]),a._v(" "),s("p",[a._v("在执行更新语句过程，会记录redo log与binlog两块日志，以基本的事务为单位，redo log在事务执行过程中可以不断写入，而binlog只有在提交事务时才写入，所以redo log与binlog的 "),s("code",[a._v("写入时机")]),a._v(" 不一样。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715194959405.png",alt:"image-20220715194959405"}})]),a._v(" "),s("p",[s("strong",[a._v("redo log与binlog两份日志之间的逻辑不一致，会出现什么问题？")])]),a._v(" "),s("p",[a._v("以update语句为例，假设"),s("code",[a._v("id=2")]),a._v("的记录，字段"),s("code",[a._v("c")]),a._v("值是"),s("code",[a._v("0")]),a._v("，把字段c值更新为"),s("code",[a._v("1")]),a._v("，SQL语句为update T set c = 1 where id = 2。")]),a._v(" "),s("p",[a._v("假设执行过程中写完redo log日志后，binlog日志写期间发生了异常，会出现什么情况呢？")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715195016492.png",alt:"image-20220715195016492"}})]),a._v(" "),s("p",[a._v("由于binlog没写完就异常，这时候binlog里面没有对应的修改记录。因此，之后用binlog日志恢复数据时，就会少这一次更新，恢复出来的这一行c值为0，而原库因为redo log日志恢复，这一行c的值是1，最终数据不一致。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715195521986.png",alt:"image-20220715195521986"}})]),a._v(" "),s("p",[a._v("为了解决两份日志之间的逻辑一致问题，InnoDB存储引擎使用"),s("strong",[a._v("两阶段提交")]),a._v("方案。原理很简单，将redo log的写入拆成了两个步骤prepare和commit，这就是"),s("strong",[a._v("两阶段提交")]),a._v("。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715195635196.png",alt:"image-20220715195635196"}})]),a._v(" "),s("p",[a._v("使用两阶段提交后，写入binlog时发生异常也不会有影响，因为MySQL根据redo log日志恢复数据时，发现redo log还处于prepare阶段，并且没有对应binlog日志，就会回滚该事务。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715200248193.png",alt:"image-20220715200248193"}})]),a._v(" "),s("p",[a._v("另一个场景，redo log设置commit阶段发生异常，那会不会回滚事务呢？")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20220715200321717.png",alt:"image-20220715200321717"}})]),a._v(" "),s("p",[a._v("并不会回滚事务，它会执行上图框住的逻辑，虽然redo log是处于prepare阶段，但是能通过事务id找到对应的binlog日志，所以MySQL认为是完整的，就会提交事务恢复数据。")]),a._v(" "),s("h2",{attrs:{id:"_7-中继日志-relay-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-中继日志-relay-log"}},[a._v("#")]),a._v(" 7. 中继日志(relay log)")]),a._v(" "),s("h3",{attrs:{id:"_7-1-介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-介绍"}},[a._v("#")]),a._v(" 7.1 介绍")]),a._v(" "),s("p",[s("strong",[a._v("中继日志只在主从服务器架构的从服务器上存在")]),a._v("。从服务器为了与主服务器保持一致，要从主服务器读取二进制日志的内容，并且把读取到的信息写入 "),s("code",[a._v("本地的日志文件")]),a._v(" 中，这个从服务器本地的日志文件就叫 "),s("code",[a._v("中继日志")]),a._v(" 。然后，从服务器读取中继日志，并根据中继日志的内容对从服务器的数据进行更新，完成主 从服务器的 数据同步 。")]),a._v(" "),s("p",[a._v("搭建好主从服务器之后，中继日志默认会保存在从服务器的数据目录下。")]),a._v(" "),s("p",[a._v("文件名的格式是："),s("code",[a._v("从服务器名 -relay-bin.序号")]),a._v(" 。中继日志还有一个索引文件："),s("code",[a._v("从服务器名 -relaybin.index")]),a._v(" ，用来定位当前正在使用的中继日志。")]),a._v(" "),s("h3",{attrs:{id:"_7-2-查看中继日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-查看中继日志"}},[a._v("#")]),a._v(" 7.2 查看中继日志")]),a._v(" "),s("p",[a._v("中继日志与二进制日志的格式相同，可以用 "),s("code",[a._v("mysqlbinlog")]),a._v(" 工具进行查看。下面是中继日志的一个片段：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SET TIMESTAMP=1618558728/*!*/;\nBEGIN\n/*!*/;\n# at 950\n#210416 15:38:48 server id 1 end_log_pos 832 CRC32 0xcc16d651 Table_map:\n`atguigu`.`test` mapped to number 91\n# at 1000\n#210416 15:38:48 server id 1 end_log_pos 872 CRC32 0x07e4047c Delete_rows: table id\n91 flags: STMT_END_F -- server id 1 是主服务器，意思是主服务器删了一行数据\nBINLOG '\nCD95YBMBAAAAMgAAAEADAAAAAFsAAAAAAAEABGRlbW8ABHRlc3QAAQMAAQEBAFHWFsw=\nCD95YCABAAAAKAAAAGgDAAAAAFsAAAAAAAEAAgAB/wABAAAAfATkBw==\n'/*!*/;\n# at 1040\n")])])]),s("p",[a._v("这一段的意思是，主服务器（“server id 1”）对表 atguigu.test 进行了 2 步操作：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("定位到表 atguigu.test 编号是 91 的记录，日志位置是 832；\n删除编号是 91 的记录，日志位置是 872\n")])])]),s("h3",{attrs:{id:"_7-3-恢复的典型错误"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-恢复的典型错误"}},[a._v("#")]),a._v(" 7.3 恢复的典型错误")]),a._v(" "),s("p",[a._v("如果从服务器宕机，有的时候为了系统恢复，要重装操作系统，这样就可能会导致你的 "),s("code",[a._v("服务器名称")]),a._v(" 与之前 "),s("code",[a._v("不同")]),a._v(" 。而中继日志里是 "),s("code",[a._v("包含从服务器名")]),a._v(" 的。在这种情况下，就可能导致你恢复从服务器的时候，无法 从宕机前的中继日志里读取数据，以为是日志文件损坏了，其实是名称不对了。")]),a._v(" "),s("p",[a._v("解决的方法也很简单，把从服务器的名称改回之前的名称。")])])}),[],!1,null,null,null);s.default=n.exports}}]);