(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{356:function(a,s,t){"use strict";t.r(s);var e=t(7),_=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("配套视频参考："),s("a",{attrs:{href:"https://www.bilibili.com/video/BV1iq4y1u7vj?p=1&vd_source=cea816a08805c218ac4390ae9b61ae31",target:"_blank",rel:"noopener noreferrer"}},[a._v("MySQL数据库天花板--康师傅"),s("OutboundLink")],1)]),a._v(" "),s("hr"),a._v(" "),s("h2",{attrs:{id:"_1-sql概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-sql概述"}},[a._v("#")]),a._v(" 1. SQL概述")]),a._v(" "),s("h3",{attrs:{id:"_1-1-sql背景知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-sql背景知识"}},[a._v("#")]),a._v(" 1.1 SQL背景知识")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("1946 年，世界上第一台电脑诞生，如今，借由这台电脑发展起来的互联网已经自成江湖。在这几十年里，无数的技术、产业在这片江湖里沉浮，有的方兴未艾，有的已经几幕兴衰。但在这片浩荡的波动里，有一门技术从未消失，甚至“老当益壮”，那就是 SQL。")]),a._v(" "),s("ul",[s("li",[a._v("45 年前，也就是 1974 年，IBM 研究员发布了一篇揭开数据库技术的论文《SEQUEL：一门结构化的英语查询语言》，直到今天这门结构化的查询语言并没有太大的变化，相比于其他语言，"),s("code",[a._v("SQL 的半衰期可以说是非常长")]),a._v("了。")])])]),a._v(" "),s("li",[s("p",[a._v("不论是前端工程师，还是后端算法工程师，都一定会和数据打交道，都需要了解如何又快又准确地提取自己想要的数据。更别提数据分析师了，他们的工作就是和数据打交道，整理不同的报告，以便指导业务决策。")])]),a._v(" "),s("li",[s("p",[a._v("SQL（Structured Query Language，结构化查询语言）是使用关系模型的数据库应用语言，"),s("code",[a._v("与数据直接打交道")]),a._v("，由"),s("code",[a._v("IBM")]),a._v("上世纪70年代开发出来。后由美国国家标准局（ANSI）开始着手制定SQL标准，先后有"),s("code",[a._v("SQL-86")]),a._v("，"),s("code",[a._v("SQL-89")]),a._v("，"),s("code",[a._v("SQL-92")]),a._v("，"),s("code",[a._v("SQL-99")]),a._v("等标准。")]),a._v(" "),s("ul",[s("li",[a._v("SQL 有两个重要的标准，分别是 SQL92 和 SQL99，它们分别代表了 92 年和 99 年颁布的 SQL 标准，我们今天使用的 SQL 语言依然遵循这些标准。")])])]),a._v(" "),s("li",[s("p",[a._v("不同的数据库生产厂商都支持SQL语句，但都有特有内容。")])])]),a._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/SQLisputonghua.jpg",alt:"SQLisputonghua"}}),a._v(" "),s("h3",{attrs:{id:"_1-2-sql语言排行榜"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-sql语言排行榜"}},[a._v("#")]),a._v(" 1.2 SQL语言排行榜")]),a._v(" "),s("p",[a._v("自从 SQL 加入了 TIOBE 编程语言排行榜，就一直保持在 Top 10。")]),a._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/image-20211014230114639.png",alt:"image-20211014230114639"}}),a._v(" "),s("h3",{attrs:{id:"_1-3-sql-分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-sql-分类"}},[a._v("#")]),a._v(" 1.3 SQL 分类")]),a._v(" "),s("p",[a._v("SQL语言在功能上主要分为如下3大类：")]),a._v(" "),s("ul",[s("li",[s("p",[s("strong",[a._v("DDL（Data Definition Languages、数据定义语言）")]),a._v("，这些语句定义了不同的数据库、表、视图、索引等数据库对象，还可以用来创建、删除、修改数据库和数据表的结构。")]),a._v(" "),s("ul",[s("li",[a._v("主要的语句关键字包括"),s("code",[a._v("CREATE")]),a._v("、"),s("code",[a._v("DROP")]),a._v("、"),s("code",[a._v("ALTER")]),a._v("等。")])])]),a._v(" "),s("li",[s("p",[s("strong",[a._v("DML（Data Manipulation Language、数据操作语言）")]),a._v("，用于添加、删除、更新和查询数据库记录，并检查数据完整性。")]),a._v(" "),s("ul",[s("li",[a._v("主要的语句关键字包括"),s("code",[a._v("INSERT")]),a._v("、"),s("code",[a._v("DELETE")]),a._v("、"),s("code",[a._v("UPDATE")]),a._v("、"),s("code",[a._v("SELECT")]),a._v("等。")]),a._v(" "),s("li",[s("strong",[a._v("SELECT是SQL语言的基础，最为重要。")])])])]),a._v(" "),s("li",[s("p",[s("strong",[a._v("DCL（Data Control Language、数据控制语言）")]),a._v("，用于定义数据库、表、字段、用户的访问权限和安全级别。")]),a._v(" "),s("ul",[s("li",[a._v("主要的语句关键字包括"),s("code",[a._v("GRANT")]),a._v("、"),s("code",[a._v("REVOKE")]),a._v("、"),s("code",[a._v("COMMIT")]),a._v("、"),s("code",[a._v("ROLLBACK")]),a._v("、"),s("code",[a._v("SAVEPOINT")]),a._v("等。")])])])]),a._v(" "),s("blockquote",[s("p",[a._v("因为查询语句使用的非常的频繁，所以很多人把查询语句单拎出来一类：DQL（数据查询语言）。")]),a._v(" "),s("p",[a._v("还有单独将"),s("code",[a._v("COMMIT")]),a._v("、"),s("code",[a._v("ROLLBACK")]),a._v(" 取出来称为TCL （Transaction Control Language，事务控制语言）。")])]),a._v(" "),s("h2",{attrs:{id:"_2-sql语言的规则与规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-sql语言的规则与规范"}},[a._v("#")]),a._v(" 2. SQL语言的规则与规范")]),a._v(" "),s("h3",{attrs:{id:"_2-1-基本规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-基本规则"}},[a._v("#")]),a._v(" 2.1 基本规则")]),a._v(" "),s("ul",[s("li",[a._v("SQL 可以写在一行或者多行。为了提高可读性，各子句分行写，必要时使用缩进")]),a._v(" "),s("li",[a._v("每条命令以 ; 或 \\g 或 \\G 结束")]),a._v(" "),s("li",[a._v("关键字不能被缩写也不能分行")]),a._v(" "),s("li",[a._v("关于标点符号\n"),s("ul",[s("li",[a._v("必须保证所有的()、单引号、双引号是成对结束的")]),a._v(" "),s("li",[a._v("必须使用英文状态下的半角输入方式")]),a._v(" "),s("li",[a._v("字符串型和日期时间类型的数据可以使用单引号（' '）表示")]),a._v(" "),s("li",[a._v('列的别名，尽量使用双引号（" "），而且不建议省略as')])])])]),a._v(" "),s("h3",{attrs:{id:"_2-2-sql大小写规范-建议遵守"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-sql大小写规范-建议遵守"}},[a._v("#")]),a._v(" 2.2 SQL大小写规范 （建议遵守）")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("MySQL 在 Windows 环境下是大小写不敏感的")])]),a._v(" "),s("li",[s("strong",[a._v("MySQL 在 Linux 环境下是大小写敏感的")]),a._v(" "),s("ul",[s("li",[a._v("数据库名、表名、表的别名、变量名是严格区分大小写的")]),a._v(" "),s("li",[a._v("关键字、函数名、列名(或字段名)、列的别名(字段的别名) 是忽略大小写的。")])])]),a._v(" "),s("li",[s("strong",[a._v("推荐采用统一的书写规范：")]),a._v(" "),s("ul",[s("li",[a._v("数据库名、表名、表别名、字段名、字段别名等都小写")]),a._v(" "),s("li",[a._v("SQL 关键字、函数名、绑定变量等都大写")])])])]),a._v(" "),s("h3",{attrs:{id:"_2-3-注-释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-注-释"}},[a._v("#")]),a._v(" 2.3 注 释")]),a._v(" "),s("p",[a._v("可以使用如下格式的注释结构")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("单行注释：#注释文字(MySQL特有的方式)\n单行注释：-- 注释文字(--后面必须包含一个空格。)\n多行注释：/* 注释文字  */\n")])])]),s("h3",{attrs:{id:"_2-4-命名规则-暂时了解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-命名规则-暂时了解"}},[a._v("#")]),a._v(" 2.4 命名规则（暂时了解）")]),a._v(" "),s("ul",[s("li",[a._v("数据库、表名不得超过30个字符，变量名限制为29个")]),a._v(" "),s("li",[a._v("必须只能包含 A–Z, a–z, 0–9, _共63个字符")]),a._v(" "),s("li",[a._v("数据库名、表名、字段名等对象名中间不要包含空格")]),a._v(" "),s("li",[a._v("同一个MySQL软件中，数据库不能同名；同一个库中，表不能重名；同一个表中，字段不能重名")]),a._v(" "),s("li",[a._v("必须保证你的字段没有和保留字、数据库系统或常用方法冲突。如果坚持使用，请在SQL语句中使用`（着重号）引起来")]),a._v(" "),s("li",[a._v("保持字段名和类型的一致性，在命名字段并为其指定数据类型的时候一定要保证一致性。假如数据类型在一个表里是整数，那在另一个表里可就别变成字符型了")])]),a._v(" "),s("p",[a._v("举例：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('#以下两句是一样的，不区分大小写\nshow databases;\nSHOW DATABASES;\n\n#创建表格\n#create table student info(...); #表名错误，因为表名有空格\ncreate table student_info(...); \n\n#其中order使用``飘号，因为order和系统关键字或系统函数名等预定义标识符重名了\nCREATE TABLE `order`(\n    id INT,\n    lname VARCHAR(20)\n);\n\nselect id as "编号", `name` as "姓名" from t_stu; #起别名时，as都可以省略\nselect id as 编号, `name` as 姓名 from t_stu; #如果字段别名中没有空格，那么可以省略""\nselect id as 编 号, `name` as 姓 名 from t_stu; #错误，如果字段别名中有空格，那么不能省略""\n')])])]),s("h3",{attrs:{id:"_2-5-数据导入指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-数据导入指令"}},[a._v("#")]),a._v(" 2.5 数据导入指令")]),a._v(" "),s("p",[a._v("在命令行客户端登录mysql，使用source指令导入")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> source d:\\mysqldb.sql\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> desc employees;\n+----------------+-------------+------+-----+---------+-------+\n| Field          | Type        | Null | Key | Default | Extra |\n+----------------+-------------+------+-----+---------+-------+\n| employee_id    | int(6)      | NO   | PRI | 0       |       |\n| first_name     | varchar(20) | YES  |     | NULL    |       |\n| last_name      | varchar(25) | NO   |     | NULL    |       |\n| email          | varchar(25) | NO   | UNI | NULL    |       |\n| phone_number   | varchar(20) | YES  |     | NULL    |       |\n| hire_date      | date        | NO   |     | NULL    |       |\n| job_id         | varchar(10) | NO   | MUL | NULL    |       |\n| salary         | double(8,2) | YES  |     | NULL    |       |\n| commission_pct | double(2,2) | YES  |     | NULL    |       |\n| manager_id     | int(6)      | YES  | MUL | NULL    |       |\n| department_id  | int(4)      | YES  | MUL | NULL    |       |\n+----------------+-------------+------+-----+---------+-------+\n11 rows in set (0.00 sec)\n")])])]),s("h2",{attrs:{id:"_3-基本的select语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-基本的select语句"}},[a._v("#")]),a._v(" 3. 基本的SELECT语句")]),a._v(" "),s("h3",{attrs:{id:"_3-0-select"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-0-select"}},[a._v("#")]),a._v(" 3.0 SELECT...")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT 1; #没有任何子句\nSELECT 9/2; #没有任何子句\n")])])]),s("h3",{attrs:{id:"_3-1-select-from"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-select-from"}},[a._v("#")]),a._v(" 3.1 SELECT ... FROM")]),a._v(" "),s("ul",[s("li",[a._v("语法：")])]),a._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SELECT")]),a._v("   标识选择哪些列\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v("     标识从哪个表中选择\n")])])]),s("ul",[s("li",[a._v("选择全部列：")])]),a._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SELECT")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v("   departments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/1554950890895.png",alt:"1554950890895"}})]),a._v(" "),s("blockquote",[s("p",[a._v("一般情况下，除非需要使用表中所有的字段数据，最好不要使用通配符‘*’。使用通配符虽然可以节省输入查询语句的时间，但是获取不需要的列数据通常会降低查询和所使用的应用程序的效率。通配符的优势是，当不知道所需要的列的名称时，可以通过它获取它们。")]),a._v(" "),s("p",[a._v("在生产环境下，不推荐你直接使用"),s("code",[a._v("SELECT *")]),a._v("进行查询。")])]),a._v(" "),s("ul",[s("li",[a._v("选择特定的列：")])]),a._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SELECT")]),a._v(" department_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" location_id\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v("   departments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/1554950947969.png",alt:"1554950947969"}})]),a._v(" "),s("blockquote",[s("p",[a._v("MySQL中的SQL语句是不区分大小写的，因此SELECT和select的作用是相同的，但是，许多开发人员习惯将关键字大写、数据列和表名小写，读者也应该养成一个良好的编程习惯，这样写出来的代码更容易阅读和维护。")])]),a._v(" "),s("h3",{attrs:{id:"_3-2-列的别名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-列的别名"}},[a._v("#")]),a._v(" 3.2 列的别名")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("重命名一个列")])]),a._v(" "),s("li",[s("p",[a._v("便于计算")])]),a._v(" "),s("li",[s("p",[a._v("紧跟列名，也可以"),s("strong",[a._v("在列名和别名之间加入关键字AS，别名使用双引号")]),a._v("，以便在别名中包含空格或特殊的字符并区分大小写。")])]),a._v(" "),s("li",[s("p",[a._v("AS 可以省略")])]),a._v(" "),s("li",[s("p",[a._v("建议别名简短，见名知意")])]),a._v(" "),s("li",[s("p",[a._v("举例")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT last_name AS name, commission_pct comm\nFROM   employees;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/1554951616598.png",alt:"1554951616598"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"images/1554951622467.png",alt:"1554951622467"}})]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('SELECT last_name "Name", salary*12 "Annual Salary"\nFROM   employees;\n')])])])])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/1554951648377.png",alt:"1554951648377"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"images/1554951655368.png",alt:"1554951655368"}})]),a._v(" "),s("h3",{attrs:{id:"_3-3-去除重复行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-去除重复行"}},[a._v("#")]),a._v(" 3.3 去除重复行")]),a._v(" "),s("p",[a._v("默认情况下，查询会返回全部行，包括重复行。")]),a._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SELECT")]),a._v(" department_id\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v("   employees"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/1554951711115.png",alt:"1554951711115"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"images/1554951715923.png",alt:"1554951715923"}})]),a._v(" "),s("p",[s("strong",[a._v("在SELECT语句中使用关键字DISTINCT去除重复行")])]),a._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SELECT")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DISTINCT")]),a._v(" department_id\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v("   employees"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/1554951796570.png",alt:"1554951796570"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"images/1554951801044.png",alt:"1554951801044"}})]),a._v(" "),s("p",[a._v("针对于：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT DISTINCT department_id,salary \nFROM employees;\n")])])]),s("p",[a._v("这里有两点需要注意：")]),a._v(" "),s("ol",[s("li",[a._v("DISTINCT 需要放到所有列名的前面，如果写成"),s("code",[a._v("SELECT salary, DISTINCT department_id FROM employees")]),a._v("会报错。")]),a._v(" "),s("li",[a._v("DISTINCT 其实是对后面所有列名的组合进行去重，你能看到最后的结果是 74 条，因为这 74 个部门id不同，都有 salary 这个属性值。如果你想要看都有哪些不同的部门（department_id），只需要写"),s("code",[a._v("DISTINCT department_id")]),a._v("即可，后面不需要再加其他的列名了。")])]),a._v(" "),s("h3",{attrs:{id:"_3-4-空值参与运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-空值参与运算"}},[a._v("#")]),a._v(" 3.4 空值参与运算")]),a._v(" "),s("ul",[s("li",[a._v("所有运算符或列值遇到null值，运算的结果都为null")])]),a._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SELECT")]),a._v(" employee_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("salary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("commission_pct"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("12")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" salary "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" commission_pct"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"annual_sal"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" employees"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("这里你一定要注意，在 MySQL 里面， 空值不等于空字符串。一个空字符串的长度是 0，而一个空值的长度是空。而且，在 MySQL 里面，空值是占用空间的。")]),a._v(" "),s("h3",{attrs:{id:"_3-5-着重号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-着重号"}},[a._v("#")]),a._v(" 3.5 着重号")]),a._v(" "),s("ul",[s("li",[a._v("错误的")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> SELECT * FROM ORDER;\nERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ORDER' at line 1\n")])])]),s("ul",[s("li",[a._v("正确的")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> SELECT * FROM `ORDER`;\n+----------+------------+\n| order_id | order_name |\n+----------+------------+\n|        1 | shkstart   |\n|        2 | tomcat     |\n|        3 | dubbo      |\n+----------+------------+\n3 rows in set (0.00 sec)\n\nmysql> SELECT * FROM `order`;\n+----------+------------+\n| order_id | order_name |\n+----------+------------+\n|        1 | shkstart   |\n|        2 | tomcat     |\n|        3 | dubbo      |\n+----------+------------+\n3 rows in set (0.00 sec)\n")])])]),s("ul",[s("li",[a._v("结论")])]),a._v(" "),s("p",[a._v("我们需要保证表中的字段、表名等没有和保留字、数据库系统或常用方法冲突。如果真的相同，请在SQL语句中使用一对``（着重号）引起来。")]),a._v(" "),s("h3",{attrs:{id:"_3-6-5、查询常数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-5、查询常数"}},[a._v("#")]),a._v(" 3.6 5、查询常数")]),a._v(" "),s("p",[a._v("SELECT 查询还可以对常数进行查询。对的，就是在 SELECT 查询结果中增加一列固定的常数列。这列的取值是我们指定的，而不是从数据表中动态取出的。")]),a._v(" "),s("p",[a._v("你可能会问为什么我们还要对常数进行查询呢？")]),a._v(" "),s("p",[a._v("SQL 中的 SELECT 语法的确提供了这个功能，一般来说我们只从一个表中查询数据，通常不需要增加一个固定的常数列，但如果我们想整合不同的数据源，用常数列作为这个表的标记，就需要查询常数。")]),a._v(" "),s("p",[a._v("比如说，我们想对 employees 数据表中的员工姓名进行查询，同时增加一列字段"),s("code",[a._v("corporation")]),a._v("，这个字段固定值为“尚硅谷”，可以这样写：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT '尚硅谷' as corporation, last_name FROM employees;\n")])])]),s("h2",{attrs:{id:"_4-显示表结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-显示表结构"}},[a._v("#")]),a._v(" 4. 显示表结构")]),a._v(" "),s("p",[a._v("使用DESCRIBE 或 DESC 命令，表示表结构。")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("DESCRIBE employees;\n或\nDESC employees;\n")])])]),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql> desc employees;\n+----------------+-------------+------+-----+---------+-------+\n| Field          | Type        | Null | Key | Default | Extra |\n+----------------+-------------+------+-----+---------+-------+\n| employee_id    | int(6)      | NO   | PRI | 0       |       |\n| first_name     | varchar(20) | YES  |     | NULL    |       |\n| last_name      | varchar(25) | NO   |     | NULL    |       |\n| email          | varchar(25) | NO   | UNI | NULL    |       |\n| phone_number   | varchar(20) | YES  |     | NULL    |       |\n| hire_date      | date        | NO   |     | NULL    |       |\n| job_id         | varchar(10) | NO   | MUL | NULL    |       |\n| salary         | double(8,2) | YES  |     | NULL    |       |\n| commission_pct | double(2,2) | YES  |     | NULL    |       |\n| manager_id     | int(6)      | YES  | MUL | NULL    |       |\n| department_id  | int(4)      | YES  | MUL | NULL    |       |\n+----------------+-------------+------+-----+---------+-------+\n11 rows in set (0.00 sec)\n")])])]),s("p",[a._v("其中，各个字段的含义分别解释如下：")]),a._v(" "),s("ul",[s("li",[a._v("Field：表示字段名称。")]),a._v(" "),s("li",[a._v("Type：表示字段类型，这里 barcode、goodsname 是文本型的，price 是整数类型的。")]),a._v(" "),s("li",[a._v("Null：表示该列是否可以存储NULL值。")]),a._v(" "),s("li",[a._v("Key：表示该列是否已编制索引。PRI表示该列是表主键的一部分；UNI表示该列是UNIQUE索引的一部分；MUL表示在列中某个给定值允许出现多次。")]),a._v(" "),s("li",[a._v("Default：表示该列是否有默认值，如果有，那么值是多少。")]),a._v(" "),s("li",[a._v("Extra：表示可以获取的与给定列有关的附加信息，例如AUTO_INCREMENT等。")])]),a._v(" "),s("h2",{attrs:{id:"_5-过滤数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-过滤数据"}},[a._v("#")]),a._v(" 5. 过滤数据")]),a._v(" "),s("ul",[s("li",[a._v("背景：")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/1554952199742.png",alt:"1554952199742"}})]),a._v(" "),s("ul",[s("li",[s("p",[a._v("语法：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT 字段1,字段2\nFROM 表名\nWHERE 过滤条件\n")])])]),s("ul",[s("li",[a._v("使用WHERE 子句，将不满足条件的行过滤掉")]),a._v(" "),s("li",[s("strong",[a._v("WHERE子句紧随 FROM子句")])])])]),a._v(" "),s("li",[s("p",[a._v("举例")])])]),a._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SELECT")]),a._v(" employee_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" last_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" job_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" department_id\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v("   employees\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WHERE")]),a._v("  department_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("90")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/1554952277028.png",alt:"1554952277028"}})])])}),[],!1,null,null,null);s.default=_.exports}}]);