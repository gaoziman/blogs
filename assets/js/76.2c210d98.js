(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{403:function(a,s,t){"use strict";t.r(s);var e=t(7),n=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("上一节我们学习了"),s("a",{attrs:{href:"https://gaoziman.gitee.io/blogs/pages/6fc14f",target:"_blank",rel:"noopener noreferrer"}},[a._v("SpringCloud的核心组件Eureka"),s("OutboundLink")],1),a._v(" ，但是它逐渐被Nacos替代了，在此之前我们先了解一下Ribbon负载均衡。")]),a._v(" "),s("h2",{attrs:{id:"_1-ribbon负载均衡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-ribbon负载均衡"}},[a._v("#")]),a._v(" 1. Ribbon负载均衡")]),a._v(" "),s("h3",{attrs:{id:"_1-1-关于负载均衡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-关于负载均衡"}},[a._v("#")]),a._v(" 1.1 关于负载均衡")]),a._v(" "),s("p",[a._v("​\t\t负载均衡一般分为"),s("strong",[a._v("服务器端负载均衡")]),a._v("和"),s("strong",[a._v("客户端负载均衡")])]),a._v(" "),s("p",[a._v("​\t\t所谓"),s("strong",[a._v("服务器端负载均衡")]),a._v("，比如"),s("code",[a._v("Nginx")]),a._v("、"),s("code",[a._v("F5")]),a._v("这些，请求到达服务器之后由这些负载均衡器根据一定的算法将请求路由到目标服务器处理。")]),a._v(" "),s("p",[a._v("​\t\t所谓"),s("strong",[a._v("客户端负载均衡")]),a._v("，比如我们要说的"),s("code",[a._v("Ribbon")]),a._v("，服务消费者客户端会有一个服务器地址列表，调用方在请求前通过一定的负载均衡算法选择一个服务器进行访问，负载均衡算法的执行是在请求客户端进行。")]),a._v(" "),s("p",[a._v("​\t\t"),s("strong",[a._v("Ribbon")]),a._v("是"),s("code",[a._v("Netflix")]),a._v("发布的负载均衡器。Eureka一般配合Ribbon进行使用，"),s("code",[a._v("Ribbon")]),a._v("利用从"),s("code",[a._v("Eureka")]),a._v("中读取到服务信息，在调用服务提供者提供的服务时，会根据一定的算法进行负载。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111109373.png",alt:"image-20230611110926294"}})]),a._v(" "),s("p",[s("strong",[a._v("觉得还是有点没理解，话不多说，直接上实战")])]),a._v(" "),s("blockquote",[s("p",[a._v("我们如果没有任何配置的情况下，只需要加上"),s("code",[a._v("@LoadBalanced")]),a._v("这个注解 ，他的默认策略就是轮询策略，简单来说 ，就我们哥俩(这里指的是用户微服务集群)轮着来，一人一次")])]),a._v(" "),s("p",[a._v("我们这里做一个测试，我们同时发起四次不同请求，使用订单微服务，远程调用用户微服务")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111119554.png",alt:"image-20230611111835974"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111118913.png",alt:"image-20230611111844826"}})]),a._v(" "),s("p",[s("code",[a._v("我们会发现这四次请求，分别调用了四次用户微服务，而这四次是分发在用户微服务1和用户微服务2")]),a._v("，而且正好是我们刚所说的轮询策略，一人两次。")]),a._v(" "),s("p",[s("strong",[a._v("下面我们更改Ribbon的策略，再来看看")])]),a._v(" "),s("p",[a._v("首先在OrderApplication中加入我们更改的策略，这里我们更改的是"),s("code",[a._v("随机策略")])]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Bean")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("IRule")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("randomRule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("RandomRule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[s("code",[a._v("重新启动订单微服务进行测试")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111123098.png",alt:"image-20230611112340967"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111123901.png",alt:"image-20230611112348747"}})]),a._v(" "),s("p",[s("strong",[a._v("此时我们发现，用户微服务1没有一个命中，而用户微服务2全部命中")]),a._v("，这就是随机策略，能不能命中全靠"),s("code",[a._v("随机")]),a._v("。")]),a._v(" "),s("h3",{attrs:{id:"_1-2-负载均衡原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-负载均衡原理"}},[a._v("#")]),a._v(" 1.2 负载均衡原理")]),a._v(" "),s("p",[a._v("我们添加了"),s("code",[a._v("@LoadBalanced")]),a._v("注解，即可实现负载均衡功能，这是什么原理呢")]),a._v(" "),s("p",[a._v("SpringCloud底层其实是利用了一个名为"),s("code",[a._v("Ribbon")]),a._v("的组件，来实现负载均衡功能的。")]),a._v(" "),s("p",[a._v("那么我们发出的请求明明是http://userservice/user/1，怎么变成了http://localhost:9001的呢？")]),a._v(" "),s("h3",{attrs:{id:"_1-3-源码跟踪"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-源码跟踪"}},[a._v("#")]),a._v(" 1.3 源码跟踪")]),a._v(" "),s("p",[a._v("为什么我们只输入了service名称就可以访问了呢？之前还要获取ip和端口。")]),a._v(" "),s("p",[a._v("显然有人帮我们根据service名称，获取到了服务实例的ip和端口。它就是"),s("code",[a._v("LoadBalancerInterceptor")]),a._v("，这个类会在对"),s("code",[a._v("RestTemplate")]),a._v("的请求进行拦截，然后从Eureka根据服务id获取服务列表，随后利用负载均衡算法得到真实的服务地址信息，替换服务id。")]),a._v(" "),s("p",[a._v("我们进行源码跟踪：")]),a._v(" "),s("h4",{attrs:{id:"_1-loadbalancerintercepor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-loadbalancerintercepor"}},[a._v("#")]),a._v(" 1）LoadBalancerIntercepor")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111148233.png",alt:"image-20230611114812088"}})]),a._v(" "),s("p",[a._v("可以看到这里的intercept方法，拦截了用户的HttpRequest请求，然后做了几件事：")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("request.getURI()")]),a._v("：获取请求uri，本例中就是 http://user-service/user/8")]),a._v(" "),s("li",[s("code",[a._v("originalUri.getHost()")]),a._v("：获取uri路径的主机名，其实就是服务id，"),s("code",[a._v("user-service")])]),a._v(" "),s("li",[s("code",[a._v("this.loadBalancer.execute()")]),a._v("：处理服务id，和用户请求。")])]),a._v(" "),s("p",[a._v("这里的"),s("code",[a._v("this.loadBalancer")]),a._v("是"),s("code",[a._v("LoadBalancerClient")]),a._v("类型，我们继续跟入。")]),a._v(" "),s("h4",{attrs:{id:"_2-loadbalancerclient"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-loadbalancerclient"}},[a._v("#")]),a._v(" 2）LoadBalancerClient")]),a._v(" "),s("p",[a._v("继续跟入execute方法：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111204133.png",alt:"image-20230611120426001"}})]),a._v(" "),s("p",[a._v("代码是这样的：")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("getLoadBalancer(serviceId)")]),a._v("：根据服务id获取ILoadBalancer，而"),s("code",[a._v("LoadBalancer")]),a._v("会拿着服务"),s("code",[a._v("id")]),a._v("去eureka中获取服务列表并保存起来。")]),a._v(" "),s("li",[s("strong",[a._v("getServer(loadBalancer)")]),a._v("：利用内置的负载均衡算法，从服务列表中选择一个。本例中，可以看到获取了9003端口的服务")])]),a._v(" "),s("p",[a._v("放行后，再次访问并跟踪，发现获取的是9001：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111212592.png",alt:"image-20230611121227508"}})]),a._v(" "),s("p",[a._v("果然实现了负载均衡。")]),a._v(" "),s("h3",{attrs:{id:"_1-4-负载均衡策略irule"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-负载均衡策略irule"}},[a._v("#")]),a._v(" 1.4 负载均衡策略IRule")]),a._v(" "),s("p",[a._v("在刚才的代码中，可以看到获取服务使通过一个"),s("code",[a._v("getServer")]),a._v("方法来做负载均衡:")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111212055.png",alt:"image-20230611121227508"}})]),a._v(" "),s("p",[a._v("我们继续跟入：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111131885.png",alt:"1544361421671"}})]),a._v(" "),s("p",[a._v("继续跟踪源码chooseServer方法，发现这么一段代码：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111213164.png",alt:"image-20230611121327066"}})]),a._v(" "),s("p",[a._v("我们看看这个rule是谁：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111131890.png",alt:"1525622699666"}})]),a._v(" "),s("p",[a._v("这里的rule默认值是一个"),s("code",[a._v("RoundRobinRule")]),a._v("，看类的介绍：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111131896.png",alt:"1525622754316"}})]),a._v(" "),s("p",[a._v("这不就是轮询的意思嘛。")]),a._v(" "),s("p",[a._v("到这里，整个负载均衡的流程我们就清楚了。")]),a._v(" "),s("h4",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),s("p",[s("code",[a._v("SpringCloudRibbon")]),a._v("的底层采用了一个拦截器，拦截了RestTemplate发出的请求，对地址做了修改。用一幅图来总结一下：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111400169.png",alt:"image-20230611140029080"}})]),a._v(" "),s("p",[a._v("基本流程如下：")]),a._v(" "),s("ul",[s("li",[a._v("拦截我们的RestTemplate请求http://userservice/user/1")]),a._v(" "),s("li",[a._v("RibbonLoadBalancerClient会从请求url中获取服务名称，也就是user-service")]),a._v(" "),s("li",[a._v("DynamicServerListLoadBalancer根据user-service到eureka拉取服务列表")]),a._v(" "),s("li",[a._v("eureka返回列表，localhost:9001、localhost:9002")]),a._v(" "),s("li",[a._v("IRule利用内置负载均衡规则，从列表中选择一个，例如localhost:9001")]),a._v(" "),s("li",[a._v("RibbonLoadBalancerClient修改请求地址，用localhost:8081替代userservice，得到http://localhost:9001/user/1，发起真实请求")])]),a._v(" "),s("h4",{attrs:{id:"_1-5-1-自定义负载均衡策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-1-自定义负载均衡策略"}},[a._v("#")]),a._v(" 1.5.1 自定义负载均衡策略")]),a._v(" "),s("p",[a._v("通过定义IRule实现可以修改负载均衡规则，有两种方式：")]),a._v(" "),s("ol",[s("li",[a._v("代码方式：在order-service中的OrderApplication类中，定义一个新的IRule：")])]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Bean")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("IRule")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("randomRule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("RandomRule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("配置文件方式：在order-service的application.yml文件中，添加新的配置也可以修改规则：")])]),a._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("userservice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 给某个微服务配置负载均衡规则，这里是userservice服务")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("ribbon")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("NFLoadBalancerRuleClassName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" com.netflix.loadbalancer.RandomRule "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 负载均衡规则 ")]),a._v("\n")])])]),s("blockquote",[s("p",[s("strong",[a._v("注意")]),a._v("，一般用默认的负载均衡规则，不做修改。")])]),a._v(" "),s("h3",{attrs:{id:"_1-6-饥饿加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-饥饿加载"}},[a._v("#")]),a._v(" 1.6 饥饿加载")]),a._v(" "),s("p",[a._v("Ribbon默认是采用懒加载，即第一次访问时才会去创建LoadBalanceClient，请求时间会很长。")]),a._v(" "),s("p",[a._v("而饥饿加载则会在项目启动时创建，降低第一次访问的耗时，通过下面配置开启饥饿加载：")]),a._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("ribbon")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("eager-load")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("enabled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("true")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("clients")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" userservice\n")])])]),s("h2",{attrs:{id:"_2-nacos注册中心"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-nacos注册中心"}},[a._v("#")]),a._v(" 2.Nacos注册中心")]),a._v(" "),s("p",[a._v("国内公司一般都推崇阿里巴巴的技术，比如注册中心，SpringCloudAlibaba也推出了一个名为Nacos的注册中心。")]),a._v(" "),s("h3",{attrs:{id:"_2-1认识和安装nacos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1认识和安装nacos"}},[a._v("#")]),a._v(" 2.1认识和安装Nacos")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://nacos.io/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Nacos"),s("OutboundLink")],1),a._v("是阿里巴巴的产品，现在是"),s("a",{attrs:{href:"https://spring.io/projects/spring-cloud",target:"_blank",rel:"noopener noreferrer"}},[a._v("SpringCloud"),s("OutboundLink")],1),a._v("中的一个组件。相比"),s("a",{attrs:{href:"https://github.com/Netflix/eureka",target:"_blank",rel:"noopener noreferrer"}},[a._v("Eureka"),s("OutboundLink")],1),a._v("功能更加丰富，在国内受欢迎程度较高。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111423015.png",alt:"image-20210713230444308"}})]),a._v(" "),s("h4",{attrs:{id:"_2-1-1-下载安装包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-下载安装包"}},[a._v("#")]),a._v(" 2.1.1 下载安装包")]),a._v(" "),s("p",[a._v("在Nacos的GitHub页面，提供有下载链接，可以下载编译好的Nacos服务端或者源代码：")]),a._v(" "),s("p",[a._v("GitHub主页：https://github.com/alibaba/nacos")]),a._v(" "),s("p",[a._v("GitHub的Release下载页：https://github.com/alibaba/nacos/releases")]),a._v(" "),s("p",[a._v("如图：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111424546.png",alt:"image-20210402161102887"}})]),a._v(" "),s("p",[a._v("windows版本使用"),s("code",[a._v("nacos-server-1.4.1.zip")]),a._v("包即可。")]),a._v(" "),s("h4",{attrs:{id:"_2-1-2-解压"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-解压"}},[a._v("#")]),a._v(" 2.1.2 解压")]),a._v(" "),s("p",[a._v("将这个包解压到任意非中文目录下，如图：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111424554.png",alt:"image-20210402161843337"}})]),a._v(" "),s("p",[a._v("目录说明：")]),a._v(" "),s("ul",[s("li",[a._v("bin：启动脚本")]),a._v(" "),s("li",[a._v("conf：配置文件")])]),a._v(" "),s("h4",{attrs:{id:"_2-1-3-端口配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-3-端口配置"}},[a._v("#")]),a._v(" 2.1.3 端口配置")]),a._v(" "),s("p",[a._v("Nacos的默认端口是8848，如果你电脑上的其它进程占用了8848端口，请先尝试关闭该进程。")]),a._v(" "),s("p",[s("strong",[a._v("如果无法关闭占用8848端口的进程")]),a._v("，也可以进入nacos的conf目录，修改配置文件中的端口：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111424556.png",alt:"image-20210402162008280"}})]),a._v(" "),s("p",[a._v("修改其中的内容：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111424562.png",alt:"image-20210402162251093"}})]),a._v(" "),s("h4",{attrs:{id:"_2-1-4-启动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-4-启动"}},[a._v("#")]),a._v(" 2.1.4 启动")]),a._v(" "),s("p",[a._v("启动非常简单，进入bin目录，结构如下：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111424568.png",alt:"image-20210402162350977"}})]),a._v(" "),s("p",[a._v("然后执行命令即可：")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("windows命令：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("startup.cmd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-m")]),a._v(" standalone\n")])])])])]),a._v(" "),s("p",[a._v("执行后的效果如图：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111424990.png",alt:"image-20210402162526774"}})]),a._v(" "),s("h4",{attrs:{id:"_2-1-5-访问"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-5-访问"}},[a._v("#")]),a._v(" 2.1.5 访问")]),a._v(" "),s("p",[a._v("在浏览器输入地址：http://127.0.0.1:8848/nacos即可：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111424015.png",alt:"image-20210402162630427"}})]),a._v(" "),s("p",[a._v("默认的账号和密码都是nacos，进入后：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111448939.png",alt:"image-20230611144820834"}})]),a._v(" "),s("h3",{attrs:{id:"_2-2-微服务注册到nacos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-微服务注册到nacos"}},[a._v("#")]),a._v(" 2.2 微服务注册到Nacos")]),a._v(" "),s("h4",{attrs:{id:"_2-2-1-引入依赖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-引入依赖"}},[a._v("#")]),a._v(" 2.2.1 引入依赖")]),a._v(" "),s("ol",[s("li",[a._v("在cloud-demo父工程的pom文件中的"),s("code",[a._v("<dependencyManagement>")]),a._v("中引入SpringCloudAlibaba的依赖：")])]),a._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("com.alibaba.cloud"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("spring-cloud-alibaba-dependencies"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("2.2.6.RELEASE"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("pom"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("scope")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("import"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("scope")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("然后在user-service和order-service中的pom文件中引入nacos-discovery依赖：")])]),a._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("com.alibaba.cloud"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("spring-cloud-starter-alibaba-nacos-discovery"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),s("blockquote",[s("p",[s("strong",[a._v("注意")]),a._v("：不要忘了注释掉eureka的依赖。")])]),a._v(" "),s("h4",{attrs:{id:"_2-2-2-配置nacos地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-配置nacos地址"}},[a._v("#")]),a._v(" 2.2.2 配置nacos地址")]),a._v(" "),s("p",[a._v("在user-service和order-service的application.yml中添加nacos地址：")]),a._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("nacos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("server-addr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8848")]),a._v("\n")])])]),s("blockquote",[s("p",[s("strong",[a._v("注意")]),a._v("：不要忘了注释掉eureka的依赖。")])]),a._v(" "),s("h4",{attrs:{id:"_2-2-3-重启"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-3-重启"}},[a._v("#")]),a._v(" 2.2.3 重启")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111507669.png",alt:"image-20230611150748584"}})]),a._v(" "),s("p",[a._v("保护阈值：可以设置为"),s("code",[a._v("0-1之间的浮点数")]),a._v("，它其实是一个比例值（当前服务健康实例数/当前服务总实例数）")]),a._v(" "),s("p",[a._v("​\t\t"),s("strong",[a._v("场景：")])]),a._v(" "),s("blockquote",[s("p",[a._v("​        一般流程下，nacos是服务注册中心，服务消费者要从nacos获取某一个服务的可用实例信息，对于服务实例有健康/不健康状态之分，nacos在返回给消费者实例信息的时候，会返回健康实例。这个时候在一些高并发、大流量场景下会存在一定的问题")]),a._v(" "),s("p",[a._v("​\t\t如果服务A有100个实例，98个实例都不健康了，只有2个实例是健康的，如果nacos只返回这两个健康实例的信息的话，那么后续消费者的请求将全部被分配到这两个实例，流量洪峰到来，2个健康的实例也扛不住了，整个服务A 就扛不住，上游的微服务也会导致崩溃，产生雪崩效应。")])]),a._v(" "),s("p",[a._v("​\t\t"),s("strong",[a._v("保护阈值的意义在于")])]),a._v(" "),s("blockquote",[s("p",[a._v("​\t\t当服务A健康实例数/总实例数   < 保护阈值 的时候，说明健康实例真的不多了，这个时候保护阈值会被触发（状态true）")]),a._v(" "),s("p",[a._v("​\t\tnacos将会把该服务所有的实例信息（健康的+不健康的）全部提供给消费者，消费者可能访问到不健康的实例，请求失败，但这样也比造成雪崩要好，牺牲了一些请求，保证了整个系统的一个可用。")]),a._v(" "),s("p",[a._v("​\t\t注意：阿里内部在使用nacos的时候，也经常调整这个保护阈值参数。")])]),a._v(" "),s("h3",{attrs:{id:"_2-3-服务分级存储模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-服务分级存储模型"}},[a._v("#")]),a._v(" 2.3 服务分级存储模型")]),a._v(" "),s("p",[a._v("一个"),s("strong",[a._v("服务")]),a._v("可以有多个"),s("strong",[a._v("实例")]),a._v("，例如我们的user-service，可以有:")]),a._v(" "),s("ul",[s("li",[a._v("127.0.0.1:9001")]),a._v(" "),s("li",[a._v("127.0.0.1:9002")]),a._v(" "),s("li",[a._v("127.0.0.1:9003")]),a._v(" "),s("li",[a._v("127.0.0.1:9004")])]),a._v(" "),s("p",[a._v("假如这些实例分布于全国各地的不同机房，例如：")]),a._v(" "),s("ul",[s("li",[a._v("127.0.0.1:9001，在上海机房")]),a._v(" "),s("li",[a._v("127.0.0.1:9002，在上海机房")]),a._v(" "),s("li",[a._v("127.0.0.1:9003，在杭州机房")]),a._v(" "),s("li",[a._v("127.0.0.1:9004，在杭州机房")])]),a._v(" "),s("p",[a._v("Nacos就将同一机房内的实例 划分为一个"),s("strong",[a._v("集群")]),a._v("。")]),a._v(" "),s("p",[a._v("也就是说，user-service是服务，一个服务可以包含多个集群，如杭州、上海，每个集群下可以有多个实例，形成分级模型，如图：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111510697.png",alt:"image-20210713232522531"}})]),a._v(" "),s("p",[a._v("微服务互相访问时，应该尽可能访问同集群实例，因为本地访问速度更快。当本集群内不可用时，才访问其它集群。例如：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111510705.png",alt:"image-20210713232658928"}})]),a._v(" "),s("p",[a._v("杭州机房内的order-service应该优先访问同机房的user-service。")]),a._v(" "),s("h3",{attrs:{id:"_2-4-给user-service配置集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-给user-service配置集群"}},[a._v("#")]),a._v(" 2.4 给user-service配置集群")]),a._v(" "),s("p",[a._v("修改user-service的application.yml文件，添加集群配置：")]),a._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("nacos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("server-addr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8848")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("discovery")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("cluster-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" HZ "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 集群名称")]),a._v("\n")])])]),s("p",[a._v("重启两个user-service实例后，我们可以在nacos控制台看到下面结果：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111514803.png",alt:"image-20230611151445726"}})]),a._v(" "),s("p",[a._v("我们再次复制一个user-service启动配置，添加属性：")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Dserver.port")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8083")]),a._v(" -Dspring.cloud.nacos.discovery.cluster-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("SH\n")])])]),s("p",[a._v("配置如图所示：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111513757.png",alt:"image-20230611151326677"}})]),a._v(" "),s("p",[a._v("启动UserApplication3后再次查看nacos控制台：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111514382.png",alt:"image-20230611151453318"}})]),a._v(" "),s("h3",{attrs:{id:"_2-5-同集群优先的负载均衡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-同集群优先的负载均衡"}},[a._v("#")]),a._v(" 2.5 同集群优先的负载均衡")]),a._v(" "),s("p",[a._v("默认的"),s("code",[a._v("ZoneAvoidanceRule")]),a._v("并不能实现根据同集群优先来实现负载均衡。")]),a._v(" "),s("p",[a._v("因此Nacos中提供了一个"),s("code",[a._v("NacosRule")]),a._v("的实现，可以优先从同集群中挑选实例。")]),a._v(" "),s("p",[a._v("1）给order-service配置集群信息")]),a._v(" "),s("p",[a._v("修改order-service的application.yml文件，添加集群配置：")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("spring:\n  cloud:\n    nacos:\n      server-addr: localhost:8848\n      discovery:\n        cluster-name: HZ "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 集群名称")]),a._v("\n")])])]),s("p",[a._v("2）修改负载均衡规则")]),a._v(" "),s("p",[a._v("修改order-service的application.yml文件，修改负载均衡规则：")]),a._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("userservice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("ribbon")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("NFLoadBalancerRuleClassName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" com.alibaba.cloud.nacos.ribbon.NacosRule "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 负载均衡规则 ")]),a._v("\n")])])]),s("h3",{attrs:{id:"_2-6-权重配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-权重配置"}},[a._v("#")]),a._v(" 2.6 权重配置")]),a._v(" "),s("p",[a._v("实际部署中会出现这样的场景：")]),a._v(" "),s("p",[a._v("服务器设备性能有差异，部分实例所在机器性能较好，另一些较差，我们希望性能好的机器承担更多的用户请求。")]),a._v(" "),s("p",[a._v("但默认情况下"),s("code",[a._v("NacosRule")]),a._v("是同集群内随机挑选，不会考虑机器的性能问题。")]),a._v(" "),s("p",[a._v("因此，"),s("code",[a._v("Nacos")]),a._v("提供了权重配置来控制访问频率，权重越大则访问频率越高。")]),a._v(" "),s("p",[a._v("在"),s("code",[a._v("nacos")]),a._v("控制台，找到"),s("code",[a._v("user-service")]),a._v("的实例列表，点击编辑，即可修改权重：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111515398.png",alt:"image-20210713235133225"}})]),a._v(" "),s("p",[a._v("在弹出的编辑窗口，修改权重：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111515402.png",alt:"image-20210713235235219"}})]),a._v(" "),s("blockquote",[s("p",[s("strong",[a._v("注意")]),a._v("：如果权重修改为0，则该实例永远不会被访问")])]),a._v(" "),s("h3",{attrs:{id:"_2-7-环境隔离"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-环境隔离"}},[a._v("#")]),a._v(" 2.7 环境隔离")]),a._v(" "),s("p",[a._v("Nacos提供了namespace来实现环境隔离功能。")]),a._v(" "),s("ul",[s("li",[a._v("nacos中可以有多个namespace")]),a._v(" "),s("li",[a._v("namespace下可以有group、service等")]),a._v(" "),s("li",[a._v("不同namespace之间相互隔离，例如不同namespace的服务互相不可见")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111522495.png",alt:"image-20200923112940575"}})]),a._v(" "),s("p",[s("strong",[a._v("Namespace")]),a._v("：命名空间，对不同的环境进行隔离，比如隔离开发环境、测试环境和生产环境")]),a._v(" "),s("p",[a._v("Group：分组，将若干个服务或者若干个配置集归为一组，通常习惯一个系统归为一个组（拉勾招聘、拉勾猎头、拉勾教育）")]),a._v(" "),s("p",[s("strong",[a._v("Service")]),a._v("：某一个服务，比如商品微服务")]),a._v(" "),s("p",[s("strong",[a._v("DataId")]),a._v("：配置集或者可以认为是一个配置文件")]),a._v(" "),s("p",[s("strong",[a._v("Namespace + Group + Service   如同 Maven 中的GAV坐标，GAV坐标是为了锁定Jar，而这里是为了锁定服务")])]),a._v(" "),s("p",[s("strong",[a._v("Namespace + Group + DataId   如同 Maven 中的GAV坐标，GAV坐标是为了锁定Jar，而这里是为了锁定配置文件")])]),a._v(" "),s("p",[s("strong",[a._v("最佳实践")])]),a._v(" "),s("p",[a._v("​\t\t"),s("strong",[a._v("Nacos")]),a._v("抽象出了"),s("code",[a._v("Namespace")]),a._v("、"),s("code",[a._v("Group")]),a._v("、"),s("code",[a._v("Service")]),a._v("、"),s("code",[a._v("DataId")]),a._v("等概念，具体代表什么取决于怎么用（非常灵活），推荐用法如下")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("概念")]),a._v(" "),s("th",[a._v("描述")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("Namespace")]),a._v(" "),s("td",[a._v("代表不同的环境，如开发dev、测试test、生产环境prod")])]),a._v(" "),s("tr",[s("td",[a._v("Group")]),a._v(" "),s("td",[a._v("代表某项目，比如拉勾云项目")])]),a._v(" "),s("tr",[s("td",[a._v("Service")]),a._v(" "),s("td",[a._v("某个项目中具体xxx服务")])]),a._v(" "),s("tr",[s("td",[a._v("DataId")]),a._v(" "),s("td",[a._v("某个项目中具体的xxx配置文件")])])])]),a._v(" "),s("h4",{attrs:{id:"_2-7-1-创建namespace"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-1-创建namespace"}},[a._v("#")]),a._v(" 2.7.1 创建namespace")]),a._v(" "),s("p",[a._v("默认情况下，所有service、data、group都在同一个namespace，名为public：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111516244.png",alt:"image-20210714000414781"}})]),a._v(" "),s("p",[a._v("我们可以点击页面新增按钮，添加一个namespace：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111517835.png",alt:"image-20210714000440143"}})]),a._v(" "),s("p",[a._v("然后，填写表单：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111517885.png",alt:"image-20210714000505928"}})]),a._v(" "),s("p",[a._v("就能在页面看到一个新的namespace：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111517775.png",alt:"image-20230611151747711"}})]),a._v(" "),s("h4",{attrs:{id:"_2-7-2-给微服务配置namespace"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-2-给微服务配置namespace"}},[a._v("#")]),a._v(" 2.7.2 给微服务配置namespace")]),a._v(" "),s("p",[a._v("给微服务配置namespace只能通过修改配置来实现。")]),a._v(" "),s("p",[a._v("例如，修改order-service的application.yml")]),a._v(" "),s("p",[a._v("文件：")]),a._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("nacos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("server-addr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8848")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("discovery")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("cluster-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" HZ\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 6f91682a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("dae8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("4236"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("8974"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("48595037e16c "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 命名空间，填ID")]),a._v("\n")])])]),s("p",[a._v("重启order-service后，访问控制台，可以看到下面的结果：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111520150.png",alt:"image-20230611152008076"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111520313.png",alt:"image-20230611152018237"}})]),a._v(" "),s("p",[a._v("此时访问order-service，因为namespace不同，会导致找不到userservice，控制台会报错：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111520384.png",alt:"image-20210714000941256"}})]),a._v(" "),s("h3",{attrs:{id:"_2-8-nacos与eureka的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-nacos与eureka的区别"}},[a._v("#")]),a._v(" 2.8 Nacos与Eureka的区别")]),a._v(" "),s("p",[a._v("Nacos的服务实例分为两种l类型：")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("临时实例：如果实例宕机超过一定时间，会从服务列表剔除，默认的类型。")])]),a._v(" "),s("li",[s("p",[a._v("非临时实例：如果实例宕机，不会从服务列表剔除，也可以叫永久实例。")])])]),a._v(" "),s("p",[a._v("配置一个服务实例为永久实例：")]),a._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("nacos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("discovery")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("ephemeral")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("false")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 设置为非临时实例")]),a._v("\n")])])]),s("p",[a._v("Nacos和Eureka整体结构类似，服务注册、服务拉取、心跳等待，但是也存在一些差异：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202306111521016.png",alt:"image-20210714001728017"}})]),a._v(" "),s("ul",[s("li",[s("p",[a._v("Nacos与eureka的共同点")]),a._v(" "),s("ul",[s("li",[a._v("都支持服务注册和服务拉取")]),a._v(" "),s("li",[a._v("都支持服务提供者心跳方式做健康检测")])])]),a._v(" "),s("li",[s("p",[a._v("Nacos与Eureka的区别")]),a._v(" "),s("ul",[s("li",[a._v("Nacos支持服务端主动检测提供者状态：临时实例采用心跳模式，非临时实例采用主动检测模式")]),a._v(" "),s("li",[a._v("临时实例心跳不正常会被剔除，非临时实例则不会被剔除")]),a._v(" "),s("li",[a._v("Nacos支持服务列表变更的消息推送模式，服务列表更新更及时")]),a._v(" "),s("li",[a._v("Nacos集群默认采用AP方式，当集群中存在非临时实例时，采用CP模式；Eureka采用AP方式")])])])])])}),[],!1,null,null,null);s.default=n.exports}}]);