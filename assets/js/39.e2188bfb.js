(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{364:function(a,t,n){"use strict";n.r(t);var s=n(7),e=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("配套视频参考："),t("a",{attrs:{href:"https://www.bilibili.com/video/BV1iq4y1u7vj?p=1&vd_source=cea816a08805c218ac4390ae9b61ae31",target:"_blank",rel:"noopener noreferrer"}},[a._v("MySQL数据库天花板--康师傅"),t("OutboundLink")],1)]),a._v(" "),t("hr"),a._v(" "),t("h2",{attrs:{id:"_1-插入数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-插入数据"}},[a._v("#")]),a._v(" 1. 插入数据")]),a._v(" "),t("h3",{attrs:{id:"_1-1-实际问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-实际问题"}},[a._v("#")]),a._v(" 1.1 实际问题")]),a._v(" "),t("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/1555425366064.png",alt:"1555425366064"}}),a._v(" "),t("p",[a._v("解决方式：使用 INSERT 语句向表中插入数据。")]),a._v(" "),t("h3",{attrs:{id:"_1-2-方式1-values的方式添加"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-方式1-values的方式添加"}},[a._v("#")]),a._v(" 1.2 方式1：VALUES的方式添加")]),a._v(" "),t("p",[a._v("使用这种语法一次只能向表中插入"),t("strong",[a._v("一条")]),a._v("数据。")]),a._v(" "),t("p",[t("strong",[a._v("情况1：为表的所有字段按默认顺序插入数据")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("INSERT INTO 表名\nVALUES (value1,value2,....);\n")])])]),t("p",[a._v("值列表中需要为表的每一个字段指定值，并且值的顺序必须和数据表中字段定义时的顺序相同。")]),a._v(" "),t("p",[a._v("举例：")]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("INSERT INTO departments\nVALUES (70, 'Pub', 100, 1700);\n")])])]),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("INSERT INTO\tdepartments\nVALUES\t\t(100, 'Finance', NULL, NULL);\n")])])]),t("p",[t("strong",[a._v("情况2：为表的指定字段插入数据")])]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("INSERT INTO 表名(column1 [, column2, …, columnn]) \nVALUES (value1 [,value2, …, valuen]);\n")])])]),t("p",[a._v("为表的指定字段插入数据，就是在INSERT语句中只向部分字段中插入值，而其他字段的值为表定义时的默认值。")]),a._v(" "),t("p",[a._v("在 INSERT 子句中随意列出列名，但是一旦列出，VALUES中要插入的value1,....valuen需要与column1,...columnn列一一对应。如果类型不同，将无法插入，并且MySQL会产生错误。")]),a._v(" "),t("p",[a._v("举例：")]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("INSERT INTO departments(department_id, department_name)\nVALUES (80, 'IT');\n")])])]),t("p",[t("strong",[a._v("情况3：同时插入多条记录")])]),a._v(" "),t("p",[a._v("INSERT语句可以同时向数据表中插入多条记录，插入时指定多个值列表，每个值列表之间用逗号分隔开，基本语法格式如下：")]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("INSERT INTO table_name \nVALUES \n(value1 [,value2, …, valuen]),\n(value1 [,value2, …, valuen]),\n……\n(value1 [,value2, …, valuen]);\n")])])]),t("p",[a._v("或者")]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("INSERT INTO table_name(column1 [, column2, …, columnn]) \nVALUES \n(value1 [,value2, …, valuen]),\n(value1 [,value2, …, valuen]),\n……\n(value1 [,value2, …, valuen]);\n")])])]),t("p",[a._v("举例：")]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("mysql> INSERT INTO emp(emp_id,emp_name)\n    -> VALUES (1001,'shkstart'),\n    -> (1002,'atguigu'),\n    -> (1003,'Tom');\nQuery OK, 3 rows affected (0.00 sec)\nRecords: 3  Duplicates: 0  Warnings: 0\n")])])]),t("p",[a._v("使用INSERT同时插入多条记录时，MySQL会返回一些在执行单行插入时没有的额外信息，这些信息的含义如下：\n●　Records：表明插入的记录条数。\n●　Duplicates：表明插入时被忽略的记录，原因可能是这些记录包含了重复的主键值。\n●　Warnings：表明有问题的数据值，例如发生数据类型转换。")]),a._v(" "),t("blockquote",[t("p",[a._v("一个同时插入多行记录的INSERT语句等同于多个单行插入的INSERT语句，但是多行的INSERT语句在处理过程中"),t("code",[a._v("效率更高")]),a._v("。因为MySQL执行单条INSERT语句插入多行数据比使用多条INSERT语句快，所以在插入多条记录时最好选择使用单条INSERT语句的方式插入。")])]),a._v(" "),t("p",[t("strong",[a._v("小结：")])]),a._v(" "),t("ul",[t("li",[t("p",[t("code",[a._v("VALUES")]),a._v("也可以写成"),t("code",[a._v("VALUE")]),a._v("，但是VALUES是标准写法。")])]),a._v(" "),t("li",[t("p",[a._v("字符和日期型数据应包含在单引号中。")])])]),a._v(" "),t("h3",{attrs:{id:"_1-3-方式2-将查询结果插入到表中"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-方式2-将查询结果插入到表中"}},[a._v("#")]),a._v(" 1.3 方式2：将查询结果插入到表中")]),a._v(" "),t("p",[a._v("INSERT还可以将SELECT语句查询的结果插入到表中，此时不需要把每一条记录的值一个一个输入，只需要使用一条INSERT语句和一条SELECT语句组成的组合语句即可快速地从一个或多个表中向一个表中插入多行。")]),a._v(" "),t("p",[a._v("基本语法格式如下：")]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("INSERT INTO 目标表名\n(tar_column1 [, tar_column2, …, tar_columnn])\nSELECT\n(src_column1 [, src_column2, …, src_columnn])\nFROM 源表名\n[WHERE condition]\n")])])]),t("ul",[t("li",[a._v("在 INSERT 语句中加入子查询。")]),a._v(" "),t("li",[t("strong",[a._v("不必书写")]),a._v(" "),t("strong",[a._v("VALUES")]),a._v(" "),t("strong",[a._v("子句。")])]),a._v(" "),t("li",[a._v("子查询中的值列表应与 INSERT 子句中的列名对应。")])]),a._v(" "),t("p",[a._v("举例：")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("INSERT")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("INTO")]),a._v(" emp2 \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SELECT")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" employees\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WHERE")]),a._v(" department_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("90")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("INSERT")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("INTO")]),a._v(" sales_reps"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" salary"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" commission_pct"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SELECT")]),a._v(" employee_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" salary"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" commission_pct\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v("   employees\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WHERE")]),a._v("  job_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("LIKE")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'%REP%'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("h2",{attrs:{id:"_2-更新数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-更新数据"}},[a._v("#")]),a._v(" 2. 更新数据")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/1555425824246.png",alt:"1555425824246"}})]),a._v(" "),t("ul",[t("li",[a._v("使用 UPDATE 语句更新数据。语法如下：")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("UPDATE table_name\nSET column1=value1, column2=value2, … , column=valuen\n[WHERE condition]\n")])])]),t("ul",[t("li",[t("p",[a._v("可以一次更新"),t("strong",[a._v("多条")]),a._v("数据。")])]),a._v(" "),t("li",[t("p",[a._v("如果需要回滚数据，需要保证在DML前，进行设置："),t("strong",[a._v("SET AUTOCOMMIT = FALSE;")])])])]),a._v(" "),t("hr"),a._v(" "),t("ul",[t("li",[a._v("使用 "),t("strong",[a._v("WHERE")]),a._v(" 子句指定需要更新的数据。")])]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("UPDATE")]),a._v(" employees\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SET")]),a._v("    department_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("70")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WHERE")]),a._v("  employee_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("113")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("ul",[t("li",[a._v("如果省略 WHERE 子句，则表中的所有数据都将被更新。")])]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("UPDATE")]),a._v(" \tcopy_emp\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SET")]),a._v("    \tdepartment_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("110")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("ul",[t("li",[t("strong",[a._v("更新中的数据完整性错误")])])]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("UPDATE")]),a._v(" employees\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SET")]),a._v("    department_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("55")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WHERE")]),a._v("  department_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("110")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("p",[t("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/1555426069578.png",alt:"1555426069578"}})]),a._v(" "),t("blockquote",[t("p",[a._v("说明：不存在 55 号部门")])]),a._v(" "),t("h2",{attrs:{id:"_3-删除数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-删除数据"}},[a._v("#")]),a._v(" 3. 删除数据")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/1555426124751.png",alt:"1555426124751"}})]),a._v(" "),t("ul",[t("li",[a._v("使用 DELETE 语句从表中删除数据")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/1555426162264.png",alt:"1555426162264"}})]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("DELETE FROM table_name [WHERE <condition>];\n")])])]),t("p",[a._v("table_name指定要执行删除操作的表；“[WHERE "),t("condition",[a._v("]”为可选参数，指定删除条件，如果没有WHERE子句，DELETE语句将删除表中的所有记录。")])],1),a._v(" "),t("ul",[t("li",[a._v("使用 WHERE 子句删除指定的记录。")])]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DELETE")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" departments\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WHERE")]),a._v("  department_name "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Finance'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("ul",[t("li",[a._v("如果省略 WHERE 子句，则表中的全部数据将被删除")])]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DELETE")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v("  copy_emp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("ul",[t("li",[t("strong",[a._v("删除中的数据完整性错误")])])]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DELETE")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" departments\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WHERE")]),a._v("       department_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("60")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("p",[t("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/1555426258516.png",alt:"1555426258516"}})]),a._v(" "),t("blockquote",[t("p",[a._v("说明：You cannot delete a row that contains a primary key that is used as a foreign key in another table.")])]),a._v(" "),t("h2",{attrs:{id:"_4-mysql8新特性-计算列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-mysql8新特性-计算列"}},[a._v("#")]),a._v(" 4. MySQL8新特性：计算列")]),a._v(" "),t("p",[a._v("什么叫计算列呢？简单来说就是某一列的值是通过别的列计算得来的。例如，a列值为1、b列值为2，c列不需要手动插入，定义a+b的结果为c的值，那么c就是计算列，是通过别的列计算得来的。")]),a._v(" "),t("p",[a._v("在MySQL 8.0中，CREATE TABLE 和 ALTER TABLE 中都支持增加计算列。下面以CREATE TABLE为例进行讲解。")]),a._v(" "),t("p",[a._v("举例：定义数据表tb1，然后定义字段id、字段a、字段b和字段c，其中字段c为计算列，用于计算a+b的值。\n首先创建测试表tb1，语句如下：")]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("CREATE TABLE tb1(\nid INT,\na INT,\nb INT,\nc INT GENERATED ALWAYS AS (a + b) VIRTUAL\n);\n")])])]),t("p",[a._v("插入演示数据，语句如下：")]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("INSERT INTO tb1(a,b) VALUES (100,200);\n")])])]),t("p",[a._v("查询数据表tb1中的数据，结果如下：")]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("mysql> SELECT * FROM tb1;\n+------+------+------+------+\n| id   | a    | b    | c    |\n+------+------+------+------+\n| NULL |  100 |  200 |  300 |\n+------+------+------+------+\n1 row in set (0.00 sec)\n")])])]),t("p",[a._v("更新数据中的数据，语句如下：")]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("mysql> UPDATE tb1 SET a = 500;\nQuery OK, 0 rows affected (0.00 sec)\nRows matched: 1  Changed: 0  Warnings: 0\n")])])]),t("h2",{attrs:{id:"_5-综合案例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-综合案例"}},[a._v("#")]),a._v(" 5. 综合案例")]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 1、创建数据库test01_library\n\n# 2、创建表 books，表结构如下：\n")])])]),t("table",[t("thead",[t("tr",[t("th",[a._v("字段名")]),a._v(" "),t("th",[a._v("字段说明")]),a._v(" "),t("th",[a._v("数据类型")])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("id")]),a._v(" "),t("td",[a._v("书编号")]),a._v(" "),t("td",[a._v("INT")])]),a._v(" "),t("tr",[t("td",[a._v("name")]),a._v(" "),t("td",[a._v("书名")]),a._v(" "),t("td",[a._v("VARCHAR(50)")])]),a._v(" "),t("tr",[t("td",[a._v("authors")]),a._v(" "),t("td",[a._v("作者")]),a._v(" "),t("td",[a._v("VARCHAR(100)")])]),a._v(" "),t("tr",[t("td",[a._v("price")]),a._v(" "),t("td",[a._v("价格")]),a._v(" "),t("td",[a._v("FLOAT")])]),a._v(" "),t("tr",[t("td",[a._v("pubdate")]),a._v(" "),t("td",[a._v("出版日期")]),a._v(" "),t("td",[a._v("YEAR")])]),a._v(" "),t("tr",[t("td",[a._v("note")]),a._v(" "),t("td",[a._v("说明")]),a._v(" "),t("td",[a._v("VARCHAR(100)")])]),a._v(" "),t("tr",[t("td",[a._v("num")]),a._v(" "),t("td",[a._v("库存")]),a._v(" "),t("td",[a._v("INT")])])])]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 3、向books表中插入记录\n\n# 1）不指定字段名称，插入第一条记录\n# 2）指定所有字段名称，插入第二记录\n# 3）同时插入多条记录（剩下的所有记录）\n")])])]),t("table",[t("thead",[t("tr",[t("th",[a._v("id")]),a._v(" "),t("th",[a._v("name")]),a._v(" "),t("th",[a._v("authors")]),a._v(" "),t("th",[a._v("price")]),a._v(" "),t("th",[a._v("pubdate")]),a._v(" "),t("th",[a._v("note")]),a._v(" "),t("th",[a._v("num")])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("1")]),a._v(" "),t("td",[a._v("Tal of AAA")]),a._v(" "),t("td",[a._v("Dickes")]),a._v(" "),t("td",[a._v("23")]),a._v(" "),t("td",[a._v("1995")]),a._v(" "),t("td",[a._v("novel")]),a._v(" "),t("td",[a._v("11")])]),a._v(" "),t("tr",[t("td",[a._v("2")]),a._v(" "),t("td",[a._v("EmmaT")]),a._v(" "),t("td",[a._v("Jane lura")]),a._v(" "),t("td",[a._v("35")]),a._v(" "),t("td",[a._v("1993")]),a._v(" "),t("td",[a._v("joke")]),a._v(" "),t("td",[a._v("22")])]),a._v(" "),t("tr",[t("td",[a._v("3")]),a._v(" "),t("td",[a._v("Story of Jane")]),a._v(" "),t("td",[a._v("Jane Tim")]),a._v(" "),t("td",[a._v("40")]),a._v(" "),t("td",[a._v("2001")]),a._v(" "),t("td",[a._v("novel")]),a._v(" "),t("td",[a._v("0")])]),a._v(" "),t("tr",[t("td",[a._v("4")]),a._v(" "),t("td",[a._v("Lovey Day")]),a._v(" "),t("td",[a._v("George Byron")]),a._v(" "),t("td",[a._v("20")]),a._v(" "),t("td",[a._v("2005")]),a._v(" "),t("td",[a._v("novel")]),a._v(" "),t("td",[a._v("30")])]),a._v(" "),t("tr",[t("td",[a._v("5")]),a._v(" "),t("td",[a._v("Old land")]),a._v(" "),t("td",[a._v("Honore Blade")]),a._v(" "),t("td",[a._v("30")]),a._v(" "),t("td",[a._v("2010")]),a._v(" "),t("td",[a._v("law")]),a._v(" "),t("td",[a._v("0")])]),a._v(" "),t("tr",[t("td",[a._v("6")]),a._v(" "),t("td",[a._v("The Battle")]),a._v(" "),t("td",[a._v("Upton Sara")]),a._v(" "),t("td",[a._v("30")]),a._v(" "),t("td",[a._v("1999")]),a._v(" "),t("td",[a._v("medicine")]),a._v(" "),t("td",[a._v("40")])]),a._v(" "),t("tr",[t("td",[a._v("7")]),a._v(" "),t("td",[a._v("Rose Hood")]),a._v(" "),t("td",[a._v("Richard haggard")]),a._v(" "),t("td",[a._v("28")]),a._v(" "),t("td",[a._v("2008")]),a._v(" "),t("td",[a._v("cartoon")]),a._v(" "),t("td",[a._v("28")])])])]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 4、将小说类型(novel)的书的价格都增加5。\n\n# 5、将名称为EmmaT的书的价格改为40，并将说明改为drama。\n\n# 6、删除库存为0的记录。\n")])])]),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 7、统计书名中包含a字母的书\n\n# 8、统计书名中包含a字母的书的数量和库存总量\n\n# 9、找出“novel”类型的书，按照价格降序排列\n\n# 10、查询图书信息，按照库存量降序排列，如果库存量相同的按照note升序排列\n\n# 11、按照note分类统计书的数量\n\n# 12、按照note分类统计书的库存量，显示库存量超过30本的\n\n# 13、查询所有图书，每页显示5本，显示第二页\n\n# 14、按照note分类统计书的库存量，显示库存量最多的\n\n# 15、查询书名达到10个字符的书，不包括里面的空格\n\n# 16、查询书名和类型，其中note值为novel显示小说，law显示法律，medicine显示医药，cartoon显示卡通，joke显示笑话\n\n# 17、查询书名、库存，其中num值超过30本的，显示滞销，大于0并低于10的，显示畅销，为0的显示需要无货\n\n# 18、统计每一种note的库存量，并合计总量\n\n# 19、统计每一种note的数量，并合计总量\n\n# 20、统计库存量前三名的图书\n\n# 21、找出最早出版的一本书\n\n# 22、找出novel中价格最高的一本书\n\n# 23、找出书名中字数最多的一本书，不含空格\n")])])]),t("p",[a._v("答案：")]),a._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("#1、创建数据库test01_library\nCREATE DATABASE IF NOT EXISTS test01_library CHARACTER SET 'utf8';\n\n#指定使用哪个数据库\nUSE test01_library;\n\n#2、创建表 books\nCREATE TABLE books(\n\tid INT,\n\tname VARCHAR(50),\n\t`authors` VARCHAR(100) ,\n\tprice FLOAT,\n\tpubdate YEAR ,\n\tnote VARCHAR(100),\n\tnum INT\n);\n\n#3、向books表中插入记录\n# 1）不指定字段名称，插入第一条记录\nINSERT INTO books \nVALUES(1,'Tal of AAA','Dickes',23,1995,'novel',11);\n# 2）指定所有字段名称，插入第二记录\nINSERT INTO books (id,name,`authors`,price,pubdate,note,num)\nVALUES(2,'EmmaT','Jane lura',35,1993,'Joke',22);\n# 3）同时插入多条记录（剩下的所有记录）\nINSERT INTO books (id,name,`authors`,price,pubdate,note,num) VALUES\n(3,'Story of Jane','Jane Tim',40,2001,'novel',0),\n(4,'Lovey Day','George Byron',20,2005,'novel',30),\n(5,'Old land','Honore Blade',30,2010,'Law',0),\n(6,'The Battle','Upton Sara',30,1999,'medicine',40),\n(7,'Rose Hood','Richard haggard',28,2008,'cartoon',28);\n\n# 4、将小说类型(novel)的书的价格都增加5。\nUPDATE books SET price=price+5 WHERE note = 'novel';\n\n# 5、将名称为EmmaT的书的价格改为40，并将说明改为drama。\nUPDATE books SET price=40,note='drama' WHERE name='EmmaT';\n\n# 6、删除库存为0的记录。\nDELETE FROM books WHERE num=0;\n")])])]),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 7、统计书名中包含a字母的书\nSELECT * FROM books WHERE name LIKE '%a%';\n\n# 8、统计书名中包含a字母的书的数量和库存总量\nSELECT COUNT(*),SUM(num) FROM books WHERE name LIKE '%a%';\n\n# 9、找出“novel”类型的书，按照价格降序排列\nSELECT * FROM books WHERE note = 'novel' ORDER BY price DESC;\n\n# 10、查询图书信息，按照库存量降序排列，如果库存量相同的按照note升序排列\nSELECT * FROM books ORDER BY num DESC,note ASC;\n\n# 11、按照note分类统计书的数量\nSELECT note,COUNT(*) FROM books GROUP BY note;\n\n# 12、按照note分类统计书的库存量，显示库存量超过30本的\nSELECT note,SUM(num) FROM books GROUP BY note HAVING SUM(num)>30;\n\n# 13、查询所有图书，每页显示5本，显示第二页\nSELECT * FROM books LIMIT 5,5;\n\n# 14、按照note分类统计书的库存量，显示库存量最多的\nSELECT note,SUM(num) sum_num FROM books GROUP BY note ORDER BY sum_num DESC LIMIT 0,1;\n\n# 15、查询书名达到10个字符的书，不包括里面的空格\nSELECT * FROM books WHERE CHAR_LENGTH(REPLACE(name,' ',''))>=10;\n\n/*\n16、查询书名和类型，\n 其中note值为 novel显示小说，law显示法律，medicine显示医药，cartoon显示卡通，joke显示笑话\n*/\nSELECT name AS \"书名\" ,note, CASE note \n WHEN 'novel' THEN '小说'\n WHEN 'law' THEN '法律'\n WHEN 'medicine' THEN '医药'\n WHEN 'cartoon' THEN '卡通'\n WHEN 'joke' THEN '笑话'\n END AS \"类型\"\nFROM books;\n\n\n# 17、查询书名、库存，其中num值超过30本的，显示滞销，大于0并低于10的，显示畅销，为0的显示需要无货\nSELECT name,num,CASE \n  WHEN num>30 THEN '滞销'\n  WHEN num>0 AND num<10 THEN '畅销'\n  WHEN num=0 THEN '无货'\n  ELSE '正常'\n  END AS \"库存状态\"\nFROM books;\n\n# 18、统计每一种note的库存量，并合计总量\nSELECT IFNULL(note,'合计总库存量') AS note,SUM(num) FROM books GROUP BY note WITH ROLLUP;\n\n# 19、统计每一种note的数量，并合计总量\nSELECT IFNULL(note,'合计总数') AS note,COUNT(*) FROM books GROUP BY note WITH ROLLUP;\n\n# 20、统计库存量前三名的图书\nSELECT * FROM books ORDER BY num DESC LIMIT 0,3;\n\n# 21、找出最早出版的一本书\nSELECT * FROM books ORDER BY pubdate ASC LIMIT 0,1;\n\n# 22、找出novel中价格最高的一本书\nSELECT * FROM books WHERE note = 'novel' ORDER BY price DESC LIMIT 0,1;\n\n# 23、找出书名中字数最多的一本书，不含空格\nSELECT * FROM books ORDER BY CHAR_LENGTH(REPLACE(name,' ','')) DESC LIMIT 0,1;\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);