(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{358:function(a,s,t){"use strict";t.r(s);var e=t(7),l=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("配套视频参考："),s("a",{attrs:{href:"https://www.bilibili.com/video/BV1iq4y1u7vj?p=1&vd_source=cea816a08805c218ac4390ae9b61ae31",target:"_blank",rel:"noopener noreferrer"}},[a._v("MySQL数据库天花板--康师傅"),s("OutboundLink")],1),a._v("1. 排序数据")]),a._v(" "),s("h3",{attrs:{id:"_1-1-排序规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-排序规则"}},[a._v("#")]),a._v(" 1.1 排序规则")]),a._v(" "),s("ul",[s("li",[a._v("使用 ORDER BY 子句排序\n"),s("ul",[s("li",[s("strong",[a._v("ASC（ascend）: 升序")])]),a._v(" "),s("li",[s("strong",[a._v("DESC（descend）:降序")])])])]),a._v(" "),s("li",[s("strong",[a._v("ORDER BY 子句在SELECT语句的结尾。")])])]),a._v(" "),s("h3",{attrs:{id:"_1-2-单列排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-单列排序"}},[a._v("#")]),a._v(" 1.2 单列排序")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT   last_name, job_id, department_id, hire_date\nFROM     employees\nORDER BY hire_date ;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/1554974255957.png",alt:"1554974255957"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/1554974260133.png",alt:"1554974260133"}})]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT   last_name, job_id, department_id, hire_date\nFROM     employees\nORDER BY hire_date DESC ;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/1554974822229.png",alt:"1554974822229"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/1554974827522.png",alt:"1554974827522"}})]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT employee_id, last_name, salary*12 annsal\nFROM   employees\nORDER BY annsal;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/1554974853194.png",alt:"1554974853194"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/1554974858252.png",alt:"1554974858252"}})]),a._v(" "),s("h3",{attrs:{id:"_1-3-多列排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-多列排序"}},[a._v("#")]),a._v(" 1.3 多列排序")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT last_name, department_id, salary\nFROM   employees\nORDER BY department_id, salary DESC;\n")])])]),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/1554974901572.png",alt:"1554974901572"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/1554974907498.png",alt:"1554974907498"}})]),a._v(" "),s("ul",[s("li",[a._v("可以使用不在SELECT列表中的列排序。")]),a._v(" "),s("li",[a._v("在对多列进行排序的时候，首先排序的第一列必须有相同的列值，才会对第二列进行排序。如果第一列数据中所有值都是唯一的，将不再对第二列进行排序。")])]),a._v(" "),s("h2",{attrs:{id:"_2-分页"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-分页"}},[a._v("#")]),a._v(" 2. 分页")]),a._v(" "),s("h3",{attrs:{id:"_2-1-背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-背景"}},[a._v("#")]),a._v(" 2.1 背景")]),a._v(" "),s("p",[a._v("背景1：查询返回的记录太多了，查看起来很不方便，怎么样能够实现分页查询呢？")]),a._v(" "),s("p",[a._v("背景2：表里有 4 条数据，我们只想要显示第 2、3 条数据怎么办呢？")]),a._v(" "),s("h3",{attrs:{id:"_2-2-实现规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-实现规则"}},[a._v("#")]),a._v(" 2.2 实现规则")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("分页原理")]),a._v(" "),s("p",[a._v("所谓分页显示，就是将数据库中的结果集，一段一段显示出来需要的条件。")])]),a._v(" "),s("li",[s("p",[s("strong",[a._v("MySQL中使用 LIMIT 实现分页")])])]),a._v(" "),s("li",[s("p",[a._v("格式：")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("LIMIT [位置偏移量,] 行数\n")])])]),s("p",[a._v("第一个“位置偏移量”参数指示MySQL从哪一行开始显示，是一个可选参数，如果不指定“位置偏移量”，将会从表中的第一条记录开始（第一条记录的位置偏移量是0，第二条记录的位置偏移量是1，以此类推）；第二个参数“行数”指示返回的记录条数。")])]),a._v(" "),s("li",[s("p",[a._v("举例")])])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("--前10条记录：\nSELECT * FROM 表名 LIMIT 0,10;\n或者\nSELECT * FROM 表名 LIMIT 10;\n\n--第11至20条记录：\nSELECT * FROM 表名 LIMIT 10,10;\n\n--第21至30条记录： \nSELECT * FROM 表名 LIMIT 20,10;\n")])])]),s("blockquote",[s("p",[a._v("MySQL 8.0中可以使用“LIMIT 3 OFFSET 4”，意思是获取从第5条记录开始后面的3条记录，和“LIMIT 4,3;”返回的结果相同。")])]),a._v(" "),s("ul",[s("li",[a._v("分页显式公式**：（当前页数-1）"),s("em",[a._v("每页条数，每页条数")]),a._v("*")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT * FROM table \nLIMIT(PageNo - 1)*PageSize,PageSize;\n")])])]),s("ul",[s("li",[s("strong",[a._v("注意：LIMIT 子句必须放在整个SELECT语句的最后！")])]),a._v(" "),s("li",[a._v("使用 LIMIT 的好处")])]),a._v(" "),s("p",[a._v("约束返回结果的数量可以"),s("code",[a._v("减少数据表的网络传输量")]),a._v("，也可以"),s("code",[a._v("提升查询效率")]),a._v("。如果我们知道返回结果只有 1 条，就可以使用"),s("code",[a._v("LIMIT 1")]),a._v("，告诉 SELECT 语句只需要返回一条记录即可。这样的好处就是 SELECT 不需要扫描完整的表，只需要检索到一条符合条件的记录即可返回。")]),a._v(" "),s("h3",{attrs:{id:"_2-3-拓展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-拓展"}},[a._v("#")]),a._v(" 2.3 拓展")]),a._v(" "),s("p",[a._v("在不同的 DBMS 中使用的关键字可能不同。在 MySQL、PostgreSQL、MariaDB 和 SQLite 中使用 LIMIT 关键字，而且需要放到 SELECT 语句的最后面。")]),a._v(" "),s("ul",[s("li",[a._v("如果是 SQL Server 和 Access，需要使用 "),s("code",[a._v("TOP")]),a._v(" 关键字，比如：")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT TOP 5 name, hp_max FROM heros ORDER BY hp_max DESC\n")])])]),s("ul",[s("li",[a._v("如果是 DB2，使用"),s("code",[a._v("FETCH FIRST 5 ROWS ONLY")]),a._v("这样的关键字：")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT name, hp_max FROM heros ORDER BY hp_max DESC FETCH FIRST 5 ROWS ONLY\n")])])]),s("ul",[s("li",[a._v("如果是 Oracle，你需要基于 "),s("code",[a._v("ROWNUM")]),a._v(" 来统计行数：")])]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT rownum,last_name,salary FROM employees WHERE rownum < 5 ORDER BY salary DESC;\n")])])]),s("p",[a._v("需要说明的是，这条语句是先取出来前 5 条数据行，然后再按照 hp_max 从高到低的顺序进行排序。但这样产生的结果和上述方法的并不一样。我会在后面讲到子查询，你可以使用")]),a._v(" "),s("div",{staticClass:"language-mysql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("SELECT rownum, last_name,salary\nFROM (\n    SELECT last_name,salary\n    FROM employees\n    ORDER BY salary DESC)\nWHERE rownum < 10;\n")])])]),s("p",[a._v("得到与上述方法一致的结果。")])])}),[],!1,null,null,null);s.default=l.exports}}]);